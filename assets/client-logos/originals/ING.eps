%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Logo ING Leon copy.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Daddy
%%CreationDate: 10-06-09
%%BoundingBox: 0 0 258 267
%%HiResBoundingBox: 0 0 258 266.7403
%%CropBox: 0 0 258 266.7403
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 165 CVC)
%%+ (PANTONE 281 CVC)
%%CMYKCustomColor: 0 0.6000 1 0 (PANTONE 165 CVC)
%%+ 1 0.7216 0 0.3804 (PANTONE 281 CVC)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2009-06-10T12:49:48-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2009-06-10T12:49:48-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2009-06-10T12:49:48-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwTzzr+oLfvp1nPLBHaQLcXItxWaQu4QKD2VQasc0PaeqmJ8&#xA;ESQIizXM/sd32dpYGHHIA8RoXyDEpPK/nCJ1lshP6FxHyUyypFIIyDtMrOONK9T9Gak6LUDeN0R3&#xA;1t57u1Gs05FSqwe6x8NkXZ3/AJh8sXL28t7LytY4rqeymCmGSNiA6ROzHdfU6rsSD4b3Y8ubTS4T&#xA;I+miQeR8h8+n6GnJjxakWIjckAjmPM/Lq9ahljmiSWM8o5FDIw7giozrIyEhY5F5aUSDRX5JCUaj&#xA;5t8uadK0N3fIssf95GgaVk7fGIw3H6cxMuvw4zUpb/P7nLxaHNkFxjt8vvTCyv7K9h9a0nSeKpUv&#xA;GQwBHY0y/HljMXE2HHyYpQNSFFXyxg7FXYq7FXYq7FXYqlXmaDzLPpLx+XLm3tNULLwmu0aSIKD8&#xA;QKrvUjpkoGN+rkxldbPnnz3+cv5z+S/MMuianNp0kyIksc8NuTHJG42ZeRU9ag7dc2eDS4skbFuv&#xA;z6nJjlRpPvyz88fnj5+t7y7sb3S7K0s3WJpbi2c85GHLigQnoOvzyvUYcWI1uW3T5cmQXsPh+17b&#xA;qMWuPoksenzwRayYaQ3EqM0Amp9ooN+Ne2YAq9+TmG62fPf5hfmz+d3kXWE03VpNNk9aP1ra5gg5&#xA;RyJXiSKkMCCKEEZssGmxZBYt1+fUZcZo1+Pijvyt/wCclbu/1n9F+dDBDDdELaajEnpJG524zCpH&#xA;Fv5u3fbcDUaDhFwTp9bxGpbPoYEEAg1B3BGax2CSebrfzfPpiJ5Vu7Sz1IShnkvkaSIxBWqtFBNS&#xA;3HfJwMb9XJjK62eD6b+av56X/ntvJUR05NXjmeGZnhpEgiBZ5C1alQo5bCp7DNjLT4Rj496cGOfK&#xA;Z8Hpe+eVoPNMGlBPM11bXep82Jms0aOL0zTiOLb1G+a6Zjfp5OdG63Qfnj8wPLPkvTBfa3ccDJUW&#xA;1rGOU0zDqEXbp3J2GSxYZTNRRkyRgLLxWH88PzZ88ao9j5D0WO1hjNWmdVmZF8ZZZeMKew4/fmcd&#xA;Jjxi5lw46meQ+gbeac/Uv+crowZfr9hMRv8AV+NmCfavpJ/xLK703dJsrP8A0Ul1v/nIX8x/Ltne&#xA;aL5k8vpY+YWh42N8oKIG3UzGNvUSXxBVuNe1MshooTNxlcWqerlAVKO/2Pbvy+12fXvJGiavcNzu&#xA;buzie5koo5SheMjUQBRVwTQDbMDLDhkR3ObjlxRB72QZWzdirxJNUVfPMd/cXPFDfu0rbgxx+pwA&#xA;J8OA6dhnEjP/AIUJk/x/Zb2Rw/4MYAfwfoZvFqlpax64kuoRvezK8VjJeJFFLKUjZRtxX1Iw/wAK&#xA;ltiQc3Uc8YjJchxGxHiABND7RezppYZSOMiPpG54bIG/2Gt2M+dLi3k0fR7SLUvrDVkMgljWBo0U&#xA;Kqq0aKvEIVIoa79M1vaE4nHCIlxc+lV8B3Ox7PiRknIxrl1u/ie9Nfyi1a5kW80yQs8MQWaAmpCV&#xA;PFl9q7ED55l9g55HigeQ3Di9uYIjhmOZ2L0fOjefYp5y8mLq9byzSL9IcPTYSmRVdR03jZfiHaoO&#xA;antHs7xfVGuPzvf5O00HaHhemV8PlX6WP6NpXnXyo3102sV3YlFS8tLdhz4r0k4gCrgdxWvfxzA0&#xA;+DU6X10JR6gff73Oz5tNqvTZjLoT93uZ7o2tafrFit5Yyc4m2ZTsyMOqsOxzfafUwzR4onZ0mo08&#xA;8UuGQ3R2XtDsVdirsVdirsVdir5V/wCcsP8AlPtM/wC2VH/1Ez5uOzfpPvdV2jzD0X/nFX/yXF5/&#xA;21Z/+TEGYvaH958HK0P92HsuYLlvn7/nKixtrnUPJqOOJuZrmCWVQOXAtb7fRzNM2OgkRxV3ODrY&#xA;g8N97wrzv5I13ybrsukavFxkX4redamKaImiyRt3B+8HY75tMOaOSNh1ubCccqL2L8hPzySzEHlL&#xA;zTcUtSRHpWpyttFXZYJmP7H8jfs9Dt01+s0f8cfi52k1d+mT6UzVOyfPHk9VP/OUuvEipVbkr7H0&#xA;ox+o5ssn+LR9/wCtwMf+MS936nvWuaxZaLo97q16/C0sYXnmNQDxRSaCtN26AeOa+MSTQc4mhZfD&#xA;vmnzNr3n3zeb26ZpLm+mWCytgSViR34xxIOwFfpO+dDjxxxQ9zosmQ5ZvtDyL5N0zyh5atNFsEUC&#xA;FQbmcABppiPjkY96np4CgzQZchnKy7vHARFBP8rZsT/MzyDpvnXyvc6bcRIb5EaTTLk7NFOBVaN2&#xA;ViAGHh8hl2DMccrDXlxCcaKH/Jqw1PT/AMtNDsdTtpLS+t45Y5reZSjrxnk41UgHdaEe2OokDMkc&#xA;lwxIgAWaZS2OxV8+SSrZ3t2gjZTHKwRGCO4oxFHkIqKdDxAr7Z59I8MiPP8AG73gHHEHy/GzOrDX&#xA;LbVNMtb+71K1tbiwkaYWssMkx5qpBJZ5eZUh+ShKcTSnTN5i1McsBOU4xMTdEE/p+VcunJ0uXTSx&#xA;zMYxlISFWCB+j53z+LDdX1pdVvJ7l4QjOFVEYGQnioUVkP72u1RVj4Zp8+o8WRkR+n7ebtsGn8KI&#xA;jf6Ps5L/AChqcWl+ZrG7mcQwA8ZmFSAroVJb7R71OT0GYYs0ZHYdWOuwnJhlEbl7LdeZdBt7Jrxr&#xA;+BoVUsvGRGLUFaKAdyc7CetxRjxcQr3vJQ0mWUuHhN+5i+nfmjbvexRalBFbW1yAYp4phL6ZPaYA&#xA;Ajruc1mHtoGQEwBE9Qbr3uyy9jERJgSSOhFX7mdggio3B6HN66RhGsRL5W8y22sWw9PStUcW+pwj&#xA;ZFkO6yAfefv8c0moj+VzDJH+7ntL39/48+93OCX5nCccvrhvH3d34/QzfN26Z2KuxV2KuxV2KuxV&#xA;8q/85Yf8p9pn/bKj/wComfNx2b9J97qu0eYei/8AOKv/AJLi8/7as/8AyYgzF7Q/vPg5Wh/uw9lz&#xA;Bct4L/zk/wD8dTyN/wAxdx/xO2zYaHlP3OHq+cf6z1T8wfy/0PzvoMml6mnGVavY3igepBLTZlP8&#xA;p/aXoR70IxMOaWOVhyMuITFF8V+cfJ2ueUdcm0fWIfTnj3jkFTHLGT8Mkbd1P9h3zoMOaOSNh0Wb&#xA;CcZovbfyE/PERiDyl5pufg2j0jUpT9kdFglY9v5GPTodqU12s0n8Ufi7DSaq/TLmr+Tf/WpNf/1L&#xA;j/k3Hkcv+LR9/wCtlj/xiXu/UzX/AJyTv57T8rLyOI0F5cW9vL/qF/UP4xjKNDG8obtXKsZfNP5R&#xA;Rq/5m+WVYVAv4W+lW5D8Rm31f91J1ek/vA+58513qB1y81Oz0ue50vTzqt9Hx9GwEqW5kq4DfvZP&#xA;gXipLb+FMMQCd0F4xrX/ADk9Poeoy6bq3k+5sr6GnqQS3SqwDCoP910I6HM+Gg4hYkKcTJrBA0QW&#xA;S/l9+ceuedrhG07yhPHpSyiK61R7uP0ouhagZE9QqGBKrvlOfTDHzlu24c/ibgGnqGYre7FXiPm/&#xA;TZbDzRfWsKhGndpoXFfjS4oShqeIVfi3pnE6/CceeUR1N/N7LQ5RPDGR6bfJj8sc3DnIlS45mStT&#xA;8Z25daVoaVp45gEHq5wI5BGzWsyF7a4C2kURSSaNXUs6MSUZFZgspVZDxIbplxgR6T6QOf6K7+bV&#xA;GYO49RPL9N93JBSNbkIiLx4kh5hX41rs3E9DTwOUkhuAPNUnsjDbCRwS5dozxIIVk+0rD5MCGGxy&#xA;UsdC2Mclmkxuljn06BnMCmO3AjkZ7lnqgrwB4+gC2/wj6TXrfOpQHLl/S+X834OPAmMzz5/0fn/O&#xA;+L038tNZk1Hy4kUzcprFvQJPUoACh+48fozpux9QcmGjzjt+p5ztfAMeaxylv+tEfmLDHL5Pv+Y3&#xA;j9N0PgwkX+Bplna8QdPLyr72HZUiNRH4/cm2gzyXGhadPIayS2sLufEtGpOZelkZYok9Yj7nF1MR&#xA;HLIDpI/ejsvaHYq7FXYq7FXYq+Vf+csP+U+0z/tlR/8AUTPm47N+k+91XaPMPRf+cVf/ACXF5/21&#xA;Z/8AkxBmL2h/efBytD/dh7LmC5bwX/nJ/wD46nkb/mLuP+J22bDQ8p+5w9Xzj/We9Zr3MYn+Y/5d&#xA;aL550F9PvkEd5EGbT74D44ZSNjXujftL3+dMuwZjjlYa8uITFF8Xea/Kmt+Vdbn0jV4DBdwH4W6p&#xA;Ih+zJG37StnQYssZxsOiy4pY5UXpH/OOF9d335sJcXchmnNhMrStuzBFRV5HueIArmFroiOKh3uX&#xA;opmWSz/NfQn5veVpvM/5e6vpdsnqXvpi4s13qZYGEgVQK1ZwpUfPNZp8nBMF2OaHHAh8WeX9XuND&#xA;8wafqsS/v9OuYrgIw7xOGoQflnQZIccSO90WKfBMHuffOkarY6vpdrqdhIJbO8iWaBxTdXFd6V3H&#xA;Qjsc5qUSDRehBvdF4EvkP/nJ3/yaEn/MFb/8bZu+zv7v4un7Q+se57D/AM4wAD8sRQdb+4J+5Mwd&#xA;f/elztF/dB63mE5SHu9S0+yMYu7mK3Mp4x+q6pyPgORGV5M0IVxEC+9shinP6QTXc8c1maHVtSud&#xA;QuAW+tSsbYEMrGBDwQQMHMbOAASjKCexqc47UTGWZmf4jt7vLpfkXrdPE4oCA6Df3+e115hjZkRU&#xA;lhVndCwMZB4qSKjkyUNTQ7b7Zr72IdhW4KLsNO+tXLqV4EGotQJS5B3ovCOY07b5bjxcR/Rv+otW&#xA;TLwj9O36wsmgFrfPIqB4YJFJQ/FtWvFg6qe1DyT6MjKPDLyB/H4pMZcUa6kfj8Wtnu4vQijtl9Mc&#xA;SJtgWY85OJLf6knE/LBKYoAfjn+gpjA2Sfxy/SES5eLSFhMoDzca2/KVHAZuaswb90yELX4em3vl&#xA;h2hV8+m/9lNY3yXXLrt/bbNvye9RJdXiO6r6NSDUcgZBsRtvm77AsGY936XT9u0RA+/9Ca/mfqX+&#xA;4yDRLf8AeXupSoohHXgrAg/S4UD6cyu2s3oGIfVM/j7XF7Hxes5D9MB+PsZdp9otnYW1opqtvEkQ&#xA;PiEUL/DNtix8EBHuADq8s+ORl3m1fLGt2KuxV2KuxVKvM3mXTfLmkvqmoiZraNlQi3iaZ6uaCiIC&#xA;clCBkaDGUqFvkr86vMt55484jUtP0u8TT7W3S0tTLA6uyqzOzMBWlWkNPbN1o4jHGiRZ83VasyyS&#xA;2BoeTMPyF/Mm18m6Lf6Nr+n38cMtz9atZobWSQVdAkivT4h/drTbKNZh45cUSPm36TIYxqQPyL6O&#xA;u9VtbXR5tWkDm0gt2unCqS/pohkNE68uI6ZqwN6dg+WPzr88yeb/ADTpN5o2mXxsNIX4GngkQySG&#xA;QOxC0NB8IHjm30mIQiRIiz5us1MzKUTEGh5F9D+RvzI0XzgJUsba7tbm3jSS4hu4GiC89qK5+FqE&#xA;ds1mXCYc6dhDIJcmWZUzYd+Z35aaP560NrO6VYdSgVm06/A+KKQjo1NzGx+0P45fgznHKw1ZsImK&#xA;Lwr8h/Kuu+W/zll0zV7V7e5trS4VyQSjAhSrI/RlYbg5sNZljPECD1cHSYZQyEHufU2ah2bwb83/&#xA;APnHV9ZvZ9f8o+nFfznnd6W5CRyuT8TxOfhRj1Ktt7jNjptdwjhlycHU6PjNx5sC8i/mV+YH5VyN&#xA;o+uaPcSaOWLmyuUaJ4y3VoJSCKHuNx8syM2HHm3iRbRiy5MW0gaeoj/nKn8vTbcxZ6l9Y419D0ov&#xA;t/y8/V6V70+jMT+T8nk5X53G8d84J5u/Nvzk+saD5cukhaOG2UH4o1C1CtJMwjjXl88zsMoYIVKQ&#xA;cPNCeadiJHvfRv5L+SdX8neSItI1ZojetPJcOsLF1T1AvwFqCpFN6bZq9TlGSdh2OnxmEBEs1vJJ&#xA;YrSeSFPUmSNmjj/mYKSB9JzEySIiSNzTk4wDIA8reMKlusaibT5rwzT+vdvJHN6zenEhA5gD4ZJG&#xA;kDff2GcYKA3iZWbPO9gOvmbevs3tIRoUNxW5PTyFJdfRXkl3LNZ6dLbxzKhMQiaiOArOYqglRzU0&#xA;3rTMfIJGRMYkA+X3fH7G/HKIiBKQNef3/BOvKdpeWEUd6lm7XRuTG3OMNxUQs0S0ZeQEkmxYEdMz&#xA;NFCUAJCPq4u7y2+ZcPWzjM8PF6eHv89/kFmoxXfpLdRxXSX0founJ53dlliErqm3welIw47161rk&#xA;colXEBLiFd/UX8KPJliMb4SY8O/d0NfGxzSW8TV7oIpspkVF4gCN6kdaE03AapUdq08MxJicv4S5&#xA;eM44/wAQT/TdKgi06JPqD/WriAVunj9QpLJcekfgdWACINxSpDV8MzsWECA9PqI51e5lX2D73Cy5&#xA;iZk8XpB5XWwjf2n7kp1hJ3vlOl2VxDaQLxgBSWtCPiLKxdQSSeXGgPhmLnBMvREiI5c/x+hycBAj&#xA;65AyPPl+P0pl5Zj8/aSkw0vTpVW7C8mlh7rXiQX406nrtmToxq8V+HE+rycfVnS5a45D0+bMfKfk&#xA;zUItROu+YZfrGqN/dRkhxGSKciR8NQNgBsP1bjQ9nTE/FzG5/c6nW9oQMPCxCofezTN06d2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbJHHJG0cih43BV0YAggihBB6g4qgU8u+X0l9ZNMtFl&#xA;2/eCCMNt0341w8RWkwwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWHH84vywBo&#xA;fMlkCOo5n+mXfl8n80tRzQ7x83f8rj/K/wD6mWy/5Gf2Y/lsn80r48P5w+bv+Vx/lf8A9TLZf8jP&#xA;7Mfy2T+aV8eH84fN3/K4/wAr/wDqZbL/AJGf2Y/lsn80r48P5w+bv+Vx/lf/ANTLZf8AIz+zH8tk&#xA;/mlfHh/OHzd/yuP8r/8AqZbL/kZ/Zj+WyfzSvjw/nD5u/wCVx/lf/wBTLZf8jP7Mfy2T+aV8eH84&#xA;fN3/ACuP8r/+plsv+Rn9mP5bJ/NK+PD+cPm7/lcf5X/9TLZf8jP7Mfy2T+aV8eH84fN3/K4/yv8A&#xA;+plsv+Rn9mP5bJ/NK+PD+cPm7/lcf5X/APUy2X/Iz+zH8tk/mlfHh/OHzd/yuP8AK/8A6mWy/wCR&#xA;n9mP5bJ/NK+PD+cPm7/lcf5X/wDUy2X/ACM/sx/LZP5pXx4fzh83f8rj/K//AKmWy/5Gf2Y/lsn8&#xA;0r48P5w+bv8Alcf5X/8AUy2X/Iz+zH8tk/mlfHh/OHzd/wArj/K//qZbL/kZ/Zj+WyfzSvjw/nD5&#xA;u/5XH+V//Uy2X/Iz+zH8tk/mlfHh/OHzd/yuP8r/APqZbL/kZ/Zj+WyfzSvjw/nD5u/5XH+V/wD1&#xA;Mtl/yM/sx/LZP5pXx4fzh83f8rj/ACv/AOplsv8AkZ/Zj+WyfzSvjw/nD5u/5XH+V/8A1Mtl/wAj&#xA;P7Mfy2T+aV8eH84fN3/K4/yv/wCplsv+Rn9mP5bJ/NK+PD+cPm7/AJXH+V//AFMtl/yM/sx/LZP5&#xA;pXx4fzh83f8AK4/yv/6mWy/5Gf2Y/lsn80r48P5w+bv+Vx/lf/1Mtl/yM/sx/LZP5pXx4fzh83f8&#xA;rj/K/wD6mWy/5Gf2Y/lsn80r48P5w+bv+Vx/lf8A9TLZf8jP7Mfy2T+aV8eH84fN3/K4/wAr/wDq&#xA;ZbL/AJGf2Y/lsn80r48P5w+bv+Vx/lf/ANTLZf8AIz+zH8tk/mlfHh/OHzd/yuP8r/8AqZbL/kZ/&#xA;Zj+WyfzSvjw/nD5tp+cH5Yu6ovmSyLMQFAfqT07Y/l8n80qM0D1HzfDs/wDfSf6x/XnRQ5B0OT6j&#xA;71mSYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ko&#xA;jT/977b/AIyp/wASGQyfSfczxfWPepT/AN9J/rH9eGHILk+o+9ZkmDsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqI0//AHvtv+Mqf8SGQyfSfczxfWPe&#xA;pT/30n+sf14YcguT6j71mSYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KojT/wDe+2/4yp/xIZDJ9J9zPF9Y96lP/fSf6x/XhhyC5PqPvWZJg7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqiNP8A977b/jKn&#xA;/EhkMn0n3M8X1j3qU/8AfSf6x/XhhyC5PqPvWZJg7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqiNP/3vtv8AjKn/ABIZDJ9J9zPF9Y96lP8A30n+sf14&#xA;YcguT6j71mSYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KojT/8Ae+2/4yp/xIZDJ9J9zPF9Y96lP/fSf6x/XhhyC5PqPvWZJg7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqiNP/AN77b/jKn/EhkMn0n3M8&#xA;X1j3qU/99J/rH9eGHILk+o+9ZkmDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq9IZ&#xA;nR3RGZIgDIwBIUE0BYjpvjaQCvisryVHeKCSRIqmRlRmC0FTyIG1MFhIgT0U5I3jcpIpR1NGVhQg&#xA;+4OFiRS3FXYq7FXYq7FXYq7FURp/+99t/wAZU/4kMhk+k+5ni+se9Sn/AL6T/WP68MOQXJ9R96zJ&#xA;MHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqq2ls91dw2yEK88ixqzdAXIUE07b4CaFp&#xA;iLNPpbS9N1aAWnlzQvU06xS/utI/R9pZR39m72karc3GsSzei7rOZPgAC0TdegzUykD6pbmr50f8&#xA;13QjVRjsOXL70z025/Oqe8Sx1G20bSrS6untotehkt39CGXiHtbSDn8cgMBA9RSfHpkJDCBY4j5f&#xA;pKYnKTRoebA/zB0qTXbO5uNcS5GsPY3L6JJqNrBZ6g02mTx/WY5Raqq3Cy20nKMsNuJC9y2Thlwn&#xA;08r3rlv+1x88OIb86Nd+zw3Ni6tXsLG7v72Cxs4jNd3LrFBCv2ndzRVFfE4JEAWUxiZGg9A/6F+/&#xA;MwxqRYwtKQ4kgWdC0ToiyenKw/dozI9Vq1O1a0BxfzuPvcr8jkeeXNtcWtxLbXMTQ3ELFJYnBVlZ&#xA;TQgg9CMygb3DikEGip4UOxV2KojT/wDe+2/4yp/xIZDJ9J9zPF9Y96lP/fSf6x/XhhyC5PqPvWZJ&#xA;g7FWe/l1qn5dy3+l6L5l8qpe/Wp1t5dWS8u4ZQZpCFdokkWMhOSj4abCu5zGzxyUTGVeVBycEsZI&#xA;jKPxt9G3n5CfkzaWk93PoNIbeNpZSLu9JCopZv8Ad/gM1I1mYmr+wOz/ACeLu+98sebNd8o6lxj8&#xA;v+WU0JEk5er9bubqV0oRxb1mKDx+FfpzdY4SH1Sv4OpyTgfpjXxV/JGueRNPl9HzX5b/AE1byygt&#xA;dx3VxbzQx7A8Y4nRJKdaGnzwZoTP0ypOGcBtIW+o4PyA/JqeGOeHQg8Uqh43F5e0KsKgj9/3GaY6&#xA;3MOv2B2v5PF3fe+e/wA4vyd1HyLqP1u053Xlu6elpdndomO/ozU/a/lbow96jNppdUMgo/U67VaU&#xA;4zY+l5tmW4j1D8opPyz1nWNN8s+Y/Kwnu7xmij1eO8u0ZpDVkEkCSKgB+zVafLqcw9T4kQZRl8KD&#xA;mabw5ERMd++ynP5y2v5S+UNVm8t6P5TE2qC3DS30l9ehIHlWsfCP1W5sFIb4tvY5XpTlmOIy29wb&#xA;NSMWM0I7+8vFuubB173P8uP+caL7VbSLV/N1y+l2MiiSPT4wBcshFeUrOCsI9qFvHjmuz68RNQ3L&#xA;scGhveXyVta83f8AOO3leZtP0XyuvmKaL4JbqRi0JI68ZZzIWNe6px8Dghizz3MuFlLLghsBaBtf&#xA;Pf8Azj7rri11vya+hq9FS8s3LKlT9p/RMTbf6jfLJHDnjuJWxGbBLYxr8eTI/Mv5MeQNH/K3zJr2&#xA;gznWBcwxXOmX0rJKYI4pVLiJ4wvUcgxp7HvlWPVTlkjGW3e2z0sI45EbvnHNq6l2Ksw/KK0vLn8x&#xA;tD+qQyzyQXAnZYBGXVYwWLj1f3Y49attlGpIGM25OkBOQPYfyn1WxuvPXn2xXVZrSW9RZrYWc738&#xA;zfV6mWWCdlkE0g7gIa1otVGYGpiRCBr9Dn4JAzmL/Szb9OQvpun+VZNVvI/MOmFLnWYrOCNr5IOD&#xA;nkgEEkDsruhb0gSQG41Oxx+DcyocJ5dzkcXS93mn5g+YdG/5WteeYF8wXSQeVhZWr29rJGt0wfml&#xA;x9W9bnHKIpCnqoy/FyYdBXMvBA+EI19VuJlmPE4r+mvx9zyz8yINI/xNJqOjXENxperot9AYIjbr&#xA;G0hIliMJZ/TZJFb4eRFKU2OZuAnho8w4WpA4rHI7sWBKkEGhG4I61y5x3sflX/nIS7gmtZfNkF1r&#xA;EmnwmCz9GdIIyDxBedBHylchOryEbn4dycwMmiH8O1uwx67+crasnkn837iaXQbdfLnnaKM/V9Mk&#xA;ZTBqMcSgIiSD00SVEWlOPh1AJUR48H1eqH3JlwZ+W0/veN3dpc2d1NaXUbQ3NvI0U8LijJIhKsrD&#xA;xBFMzwbFh15BBoqWFDsVRGn/AO99t/xlT/iQyGT6T7meL6x71Kf++k/1j+vDDkFyfUfesyTB2Ko7&#xA;QP8Aju6d/wAxUP8AycXIz+ks8X1D3vvPzV/yjGr/APMFc/8AJps5rH9Q970UuT8/s6d5p2KvsLzD&#xA;+acHkS18iR6hFz0fV7JkvZlBMkJhitvTkUD7Sj1W5L18OlDooafxDOuYP63e5c4xmN8i9Emh0TzD&#xA;opjlWHUtI1CIGhpJDLG+6kdQfEHMQExPcQ37SHeHyR+c35M33ki+Oo6cHufLNy9IZj8T27t0hmP/&#xA;ABFu/wA83ml1QyCj9Tp9VpTA2PpY1+VX/kyvLH/bStv+Toy7U/3cvc1aX+8DIv8AnI7/AMm3q3/G&#xA;K1/6ho8p0P8AdBt13958GQf84zfl5ba3rlx5l1KIS2OjMqWcbiqvdsOQbwPpLQ08SpyvX5zGPCOZ&#xA;bNBhBPEej0H/AJyf853Wj+U7TQrKQxT67I63Dqd/qsAUyJ4jm0ij3AIzF7PxCUuI9HJ12XhjQ6vl&#xA;LN06Z2KvRPy5/MWHR/K/mnytrEz/AKJ1fTrgWAAZxHftHxjoF6K9fi+Q98xc+DilGQ5g/Y5eDPUZ&#xA;RPIh53mU4jsVZj+UbWn+P9Ot7upt71Lm0KL1d7i2kiiShKg8pWUUJoeh2yjU3wGnI0h/eBmeiec/&#xA;OnlLR7QWGlPcLbG5tNQf1FkswuncFuuFpYtBG3GOReU87OWqWBHXMeeKEzufweW5+4OXHLOERQ5c&#xA;/hz5fpeiav8Amz5GtbC98zab5mOoaxdWkcMWhzQRiGRojK8MZjSJZ4+LO3xetttWvw5ix00yRExo&#xA;d/4/U5EtRADiBs9zzWHWfO3m7UdN1e30qW21Gxu4dTnvWj+sxiKKf0zPAsivfGKOUESxxySJ/krS&#xA;mZZhCAIvY7fjo4wnPJRqiD+PNCa/Z3XnS0sfL2iQxT61o93qkkMMMqJBcWVxOJ1+pvM6mURH1Dx+&#xA;0F+RoYEYyZHka+fmxyxOQUOYJ/AVvIn5JahLrd5B5ytHtIrSwmvYbFbu2hlleJo1AkYs5ij/AHtS&#xA;7LT8cc2rFDgPVGDRm/WEl8z+RtDlsNQ1PytJIJdHI/TehTzQ3UsEbEAXNvcQfu7i3qwDEbr323ye&#xA;PNKwJdeR/HVhlwRomPTmGC2t1c2l1FdWsrwXMDrJDNGSro6mqsrDcEHMkgEUXEBINh6h+YZTzv5J&#xA;sfzFhiC6vauumeaFjU0aRFUQ3JoeKKylV6Dc07Zh4P3czj6cw5uf95AZOvIvKszXBdiqI0//AHvt&#xA;v+Mqf8SGQyfSfczxfWPepT/30n+sf14YcguT6j71mSYOxVHaB/x3dO/5iof+Ti5Gf0lni+oe995+&#xA;av8AlGNX/wCYK5/5NNnNY/qHveilyfn9nTvNOxV7v/zkn/yjH5d/8wVx/wAmrTNboPqn7/1uy7Q5&#xA;R+P6GPfkr+dV35Mu00jV3e48sXD7jdntHY7yRjuh/bT6Rv1t1ekGQWPqatLquDY/T9z6xkj0bX9G&#xA;KOIdR0nUYdxtJFLFIPuIIzSbxPcQ7jaQ8nzjqX5M33kj81/LWo6cHufLNzqtqIZj8T27tKKQzH/i&#xA;Ld/nm2jqhkxSB+qnW/lTDKCPptiX/OR3/k29W/4xWv8A1DR5dof7oNGu/vPg9u/5xfjjX8seSgBn&#xA;v7hpCO7URd/oAzX9of3nwc/Rf3Yee/8AOWof/Emgkg+mbOQKe1RLvT8MyuzfpPvcbtHnF4Pmyday&#xA;/wAjW/5X3RjtPN0mr293PccI7rT2t/q8cTBQpkWSOSSoblyK9qbZRmOQbwr4t+EYztK7e+Sf84q/&#xA;lxHG0j6lq6ogLMxmtqAAVJ/3mzWfyjk7h+Pi7H+T4d5/HwfOfm4eRRdxr5R/SRtl5ieTVGgLOQRw&#xA;aMQqlBSteWbXFx166+DrMvB/BfxSDLWpE6ZfyafqVpfxKry2k0c6I4qpaJg4DDuKjfBIWKZQlRB7&#xA;nrHmCyt7rXvMEuj+YYtKhka1h03T5FSwtWl1RPq10iwnZIoLUt6koG9OpNMwYGoixf28uX2uxyRN&#xA;mjXL7ef2KzXl8upWVhZ6PoGm/wCJPr8FlqSMsUUqNaJpzTQssYaGOSaKWWHku5elO7ChRJMjw199&#xA;/wBq8RBAAiOK0tutb0Vri+1TzrK8us+u/DSbLmp0/UEZfWkeznZbeaO7aIGbhJ3Pw7jjMQOwhy7+&#xA;8e/yYGYHqn9Xd3fDzS3QvO2p6vr5liji02e0je60eGC4lhsLEwK09yILa4a5hH1mJHj4bJybpTbJ&#xA;zxCMe/v7z/YwxZjKXd9w+HmzK0vrTyp5k0PzEkn13y/atDpT3E07ySS6NqcDTWfqW7KI19ECUOIy&#xA;F5JTgOpxyDOJj/Fz+I5uRYgRLpy+B5Inzwh8m+dNC1O5tr1LJZ5NMvzdx6e1vd2NwSJ6PYLEoPBy&#xA;fTmQNuCNhsMP7yBArv67H4pynglE793Tf5PF/N2hnQfNGraLUsun3c1ujnqyI5CN/sloc2GKfFEH&#xA;vdblhwyIZr+XSC5/LH8xLaaOOSCKCxuYTM5RVnSSWhUgH4ynLiv7RFNsx8+2SB97kaffHMPNMy3D&#xA;diqI0/8A3vtv+Mqf8SGQyfSfczxfWPepT/30n+sf14YcguT6j71mSYOxVHaB/wAd3Tv+YqH/AJOL&#xA;kZ/SWeL6h733n5q/5RjV/wDmCuf+TTZzWP6h73opcn5/Z07zTsVe7/8AOSf/ACjH5d/8wVx/yatM&#xA;1ug+qfv/AFuy7Q5R+P6HhGbJ1r1b8lfzqu/Jl2mkau73Hli4fcbs9o7HeSMd0P7afSN+uFq9IMgs&#xA;fU5ul1XBsfp+59cWl1ZX9nDd2sqXNpOqywTIQ6OpoyspGx8RmjIINF3ANvj3/nI7/wAm3q3/ABit&#xA;f+oaPN7of7oOm13958Ga/wDOLHnu1tZ73yfeyiM3kn1vTOR2aUIFmjHuURWX5HMftHCTUx8W/QZR&#xA;vEs6/wCcjvIV15l8nxalp8Rm1LQ2eZYVFWe3kAE6qB1YcFb6DmPocwhOjyLkazDxw25h8iZvHSOx&#xA;V+herf8AHKvP+MEv/EDnLx5h6Uvz0zqHmlewsL7ULyGysYJLq8uGCQW8Sl3dj2VRucEpACymMSTQ&#xA;eseR/wAkNfs/MGm6l5r+q6fpliX1HUbGaZGuha2ZLNI0C8iY2dApI7HMLNq4mJEdydnOw6SQkDLk&#xA;nf5yecUvNAAvI47+K9Mv6OlkaC+tTU7y2F/arbyxyQsw5wzrTjTbxr0uKpbbfZ8wfvDdqsg4d97/&#xA;ABsWEeXtD8w61o1lcWXlQ3ptra8hvdYv5SlpNblUSFlmuXjihe0BonB/o2OZE5xiTcq5bD8dXHxx&#xA;lKI9N8+f46PVvLPkWHT/ACbZaDYWtrf6z6H6Q154/wBE6gQ05+GF4rmRWKoigApIinqG3zCyZrmZ&#xA;HYch9Qc3FiEYcPXryeN6jJL5Lntra2h9O/urONNc0+8Xm0N1bX5lSsRpQOlvDIBUghj2OZ8f3nPl&#xA;e3ycCR8I7d2/vBTjQfy288+ddYj1G+0+TTvLcdx/pt3cFbaO3tebTtwSVkZ1RJCFKggeIyueeGMU&#xA;DcmYwzySsiopx+di6Xq+v3d5b2hij0+x9e8liS3V6yyCG0ZpIHMc9vTiqSKpZeYVz0Cw0lxiB3n+&#xA;34tmqAJJ7h/Yw7814ri5/M3VoIUea6eWGH0kBeRphDGjKAKktzBHzy/TGsYcbVAnKaZX5lsB+X35&#xA;T/4YvHEXmjzLLDfanaPAz8bQFxHGsx/dq8TxVbqavTpvlOOXi5eIfTFvmPCxcP8AFJ5Bmc692Koj&#xA;T/8Ae+2/4yp/xIZDJ9J9zPF9Y96lP/fSf6x/XhhyC5PqPvWZJg7FXoP5dWv5XWd3pWueZfMNxHdW&#xA;swuJtGisZGUPDITEDchmDKwVWYBO9PfMXOchBjEfG3KwDGCJSO/dT6Auf+civyhubeW3nvpnhmRo&#xA;5UNrPRlcUYbL3BzWDQ5R0dl+cxd/3vmXzhpHkOzUTeV/ME+q+pKR9Tns3t2iioSCZmajmu2yDNvi&#xA;lM/UK+LqcscY3ib+DvJml+Q7uRpfNeuT6ZFFIlLW3tHnaaPq1JVakZ7boccspj6RacMcZ3kaexfm&#xA;j53/ACU8+aTYWTa3c6bPpjN9SuEsppVVHVVdGjPCoPBf2h0zA0+HNjJNXfm52fLhyCrr4Pn2/itI&#xA;b65hs7g3dpHK6W10UMRljViEkMZLFOS78a7ZtIk1u6uQF7KGFD1b8lfzru/Jl0uk6uz3Hlid/iG7&#xA;Paux3kjHUof20HzG/XC1ekGQWPqc3S6rg2P0pF+dXmXRfMn5iahq+i3P1vTp0t1in4SR1McCI3wy&#xA;qjbMp7ZZpMZhjAPNr1eSM52OTCre4ntp47i3kaGeFg8UqEq6upqrKw3BBzIItxwa3D3zyB/zlJcW&#xA;lvFYecbSS8WMBV1S14+sQBQerExVWPiysPkTmtzdnXvD5Oyw6/pP5qnmWw/5xr84TSanb642gahN&#xA;8UwijkiRnO5Z4ZIylfH02GDHLUY9q4gmccGTe6Sex8lf845aY/1nVfOM+qxoarawpIitT9lvSjd9&#xA;/Zlyw5dQdhGmAw4I7mV/jyZL50/5yo0t7O4svLGlyXEkqNH9dvqRxryFCViQsz7eLLlOLs43ci2Z&#xA;NfH+EW+bs2zqmY/ll5tsPK2o6pqcscf6TGnXEei3MiNIsV24Cj4F2+OMutTsK77VyjUYjMAdL3cj&#xA;T5RAknnWz0ry9+c3liz1OC9ku/Qlg0rRdOjuPqzPL6cM0balA54tyBRG4t77HMOelkRXnI/qc2Or&#xA;hfPoP2vKvOV75evPSudGuZVS7u767m0doykFkJph6KxNWjF4UXnQbcQMzcQkNj3DfvcHPKJ+k9S9&#xA;Y0D87vLNlYWVi8zx2Q0/RbSe1eAzRx/VLhk1CMRkFD6sL8+YFTSn2gtMKekkST1uX7HOhq4AfAft&#xA;Yl5u/MPQJ9c0jWfLjCz1g2zWutzJbJFYvFccw6NAqh5CiScGNNwopvl+LBIAiXLp3tOXUR4gY8+v&#xA;cxGTzJTztZ6teXD61Z6ZdWywyzxhDPZ2LKkQaOp484oxUEnruSd8v8P0EDa/vLjHJ6wSbAP2B7Hd&#xA;/nh5LmvVuL15tUFndate2jSxs0ivLwisI4BKpijQQSPUOjUZK998AaSdbbcv2uwOrhffz/Y8m1m6&#xA;0DXdQbVp9WXTprt5zLZQWTIkUcIBgNI29MyXDjkwT4VNWr2zNiJRFVfxcOcozN8VfBPPLn5rW/li&#xA;1up9Kjlu9eupLO8bVb6GBp/XH/HQgeask0kE1PhPJW69K5Xk03Gd/p32+5nDUiA257ftYHrGs32r&#xA;Xsl1dyEl3keOEMxjiEsjSmOJXLcU5uSBXMmMREUHFnMyNlBZJg7FURp/+99t/wAZU/4kMhk+k+5n&#xA;i+se9Sn/AL6T/WP68MOQXJ9R96zJMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FURp/+99t/xlT/AIkMhk+k+5ni+se9Sn/vpP8AWP68MOQXJ9R96zJM&#xA;HYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FURp/8A&#xA;vfbf8ZU/4kMhk+k+5ni+se9Sn/vpP9Y/rww5Bcn1H3rMkwdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVRGn/AO99t/xlT/iQyGT6T7meL6x71Kf++k/1&#xA;j+vDDkFyfUfesyTB2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVEaf/vfbf8AGVP+JDIZPpPuZ4vrHvf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:048011740720681197A595FB87585D60</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:048011740720681197A595FB87585D60</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b811f2cf-5af6-964a-90bc-4d6cd157978c</stRef:instanceID>
            <stRef:documentID>uuid:E2E335D0E979DD11BE2E93ECE0BC0E9B</stRef:documentID>
            <stRef:originalDocumentID>uuid:E2E335D0E979DD11BE2E93ECE0BC0E9B</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:E2E335D0E979DD11BE2E93ECE0BC0E9B</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:048011740720681197A595FB87585D60</stEvt:instanceID>
                  <stEvt:when>2009-06-10T12:49:48-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>27.940000</stDim:w>
            <stDim:h>21.590000</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 281 CVC</rdf:li>
               <rdf:li>PANTONE 165 CVC</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 165 CVC</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 281 CVC</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.156898</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>38.039200</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -266.74 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 266.74 li
258 266.74 li
258 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 115.406 mo
258 115.406 li
258 266.74 li
0 266.74 li
0 115.406 li
0 115.406 li
cp
false sop
/0 
<<
/Name (PANTONE 281 CVC)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .721569 0 .380392 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
0 lw
0 lc
0 lj
3.86369 ml
[] 0 dsh
true sadj
0 115.406 mo
258 115.406 li
258 266.74 li
0 266.74 li
0 115.406 li
0 115.406 li
cp
0 0 0 1 cmyk
@
27.2686 230.895 mo
27.2686 229.445 li
30.5332 229.445 32.8467 229.182 32.8467 224.568 cv
32.8467 200.191 li
32.8467 195.449 31.0781 195.318 27.2686 195.318 cv
27.2686 193.867 li
46.5918 193.867 li
46.5918 195.318 li
42.6445 195.318 41.0083 195.449 41.0083 200.191 cv
41.0083 224.568 li
41.0083 229.182 43.0508 229.445 46.5918 229.445 cv
46.5918 230.895 li
27.2686 230.895 li
27.2686 230.895 li
cp
93.8091 202.828 mo
93.8091 231.156 li
91.4956 231.156 li
62.2397 201.908 li
62.3745 202.697 62.3745 203.357 62.3745 204.146 cv
62.3745 221.936 li
62.3745 227.469 62.3745 229.445 67.5454 229.445 cv
67.5454 230.895 li
53.8022 230.895 li
53.8022 229.445 li
58.9731 229.445 58.9731 227.074 58.9731 221.936 cv
58.9731 201.643 li
58.9731 198.611 58.9731 195.318 53.5298 195.318 cv
53.5298 193.867 li
66.458 193.867 li
90.5425 217.852 li
90.4077 217.193 90.4077 216.795 90.4077 215.873 cv
90.4077 202.828 li
90.4077 197.559 90.5425 195.318 85.3726 195.318 cv
85.3726 193.867 li
99.1177 193.867 li
99.1177 195.318 li
94.0825 195.318 93.8091 197.428 93.8091 202.828 cv
93.8091 202.828 li
cp
141.301 218.375 mo
141.301 227.863 li
135.857 230.5 130.688 231.818 125.515 231.818 cv
111.227 231.818 102.655 223.648 102.655 213.369 cv
102.655 202.301 112.453 193.076 124.974 193.076 cv
128.099 193.076 130.414 193.604 132.863 194.396 cv
134.635 194.922 135.723 195.582 136.809 195.582 cv
137.762 195.582 138.033 194 138.172 193.076 cv
139.531 193.076 li
140.758 205.857 li
139.125 205.857 li
138.443 203.357 137.219 201.248 135.586 199.797 cv
133 197.293 129.463 195.977 125.379 195.977 cv
116.807 195.977 111.772 202.564 111.772 212.447 cv
111.772 222.199 117.897 228.916 126.06 228.916 cv
128.509 228.916 130.688 228.391 133.406 227.205 cv
133.406 217.455 li
133.406 214.293 132.863 213.105 128.237 213.105 cv
128.237 211.656 li
145.52 211.656 li
145.52 213.105 li
141.164 213.105 141.301 214.422 141.301 218.375 cv
141.301 218.375 li
cp
0 0 0 0 cmyk
f
169.629 228.348 mo
168.715 228.348 168.975 229.75 168.715 230.387 cv
168.584 230.514 168.449 230.768 168.584 230.896 cv
170.539 230.896 li
170.539 230.896 170.67 229.75 170.67 229.496 cv
170.539 229.24 170.146 228.602 169.629 228.348 cv
cp
171.973 217.906 mo
171.322 217.398 170.279 216.889 168.715 216.379 cv
168.324 216.252 167.412 216.379 167.02 216.379 cv
165.975 218.16 165.588 219.816 164.805 221.725 cv
164.672 222.109 164.412 222.873 164.412 222.873 cv
163.764 222.492 163.109 222.238 162.455 222.238 cv
161.41 222.238 160.629 222.619 160.24 223.637 cv
159.852 223.51 159.33 223.256 158.678 223.381 cv
157.768 223.51 156.982 224.02 156.59 224.783 cv
156.201 225.291 156.07 225.801 156.201 226.311 cv
155.551 226.566 155.154 227.203 154.896 227.711 cv
154.637 228.729 155.551 230.514 155.941 230.896 cv
157.244 230.896 li
156.982 229.75 156.461 229.24 156.852 228.094 cv
157.115 227.457 158.025 227.203 158.287 227.074 cv
158.287 226.566 157.633 226.184 157.768 225.672 cv
158.025 225.039 158.807 225.039 159.59 225.164 cv
159.459 225.93 159.33 226.947 159.199 227.965 cv
159.068 229.113 159.721 230.896 159.721 230.896 cv
161.023 230.896 li
161.154 230.896 161.154 230.896 161.154 230.896 cv
161.023 230.514 160.893 230.131 160.893 229.75 cv
160.766 229.367 160.766 229.113 160.766 228.729 cv
160.893 228.221 160.893 227.711 160.893 227.332 cv
162.197 226.693 161.805 227.584 162.064 227.838 cv
162.064 227.838 162.59 226.693 161.936 226.184 cv
161.805 226.057 161.023 226.184 161.023 226.057 cv
161.023 225.93 161.154 225.547 161.283 225.164 cv
161.547 224.654 161.676 224.529 161.936 224.146 cv
162.064 224.02 162.455 224.02 162.98 224.146 cv
163.109 224.146 163.764 224.273 164.152 224.4 cv
164.021 224.783 163.5 225.547 163.373 225.93 cv
162.852 227.457 162.852 229.24 162.98 230.896 cv
162.98 230.896 163.764 230.896 164.412 230.896 cv
164.412 230.002 164.283 228.984 164.412 228.094 cv
164.672 226.947 165.061 226.82 165.197 226.82 cv
165.453 226.82 165.715 227.074 165.85 227.332 cv
166.107 228.602 165.326 229.75 165.326 230.896 cv
165.715 230.896 166.369 230.896 166.369 230.896 cv
166.369 230.896 166.762 230.768 166.891 230.387 cv
167.15 229.621 167.672 228.855 167.805 228.094 cv
167.932 227.457 167.672 226.947 167.279 226.184 cv
166.891 225.672 166.5 225.291 165.588 224.654 cv
165.326 224.146 165.588 223.51 165.588 223.51 cv
165.588 223.637 166.107 223.381 166.369 223.381 cv
167.412 223.637 167.672 223.637 168.193 223.891 cv
168.584 224.02 169.104 224.273 169.496 224.529 cv
169.887 224.783 170.279 225.547 170.67 226.438 cv
170.67 226.438 170.93 224.783 170.93 224.273 cv
170.412 223.766 169.887 223.256 169.104 222.873 cv
168.449 222.363 167.02 221.982 166.369 221.725 cv
166.369 221.725 166.629 221.344 166.629 221.09 cv
167.412 220.961 168.324 220.961 168.715 221.09 cv
170.02 221.473 171.582 222.238 172.236 222.746 cv
172.236 222.746 172.494 222.238 172.494 221.982 cv
172.494 221.982 170.67 220.836 170.799 220.453 cv
170.279 220.072 169.887 219.689 169.367 219.561 cv
168.584 219.436 167.02 219.309 167.02 219.309 cv
167.02 219.309 167.412 218.801 167.805 218.416 cv
168.848 218.416 li
169.367 218.416 170.67 218.801 171.451 219.182 cv
172.627 219.689 173.275 220.072 173.408 220.326 cv
173.535 219.943 173.668 219.436 173.801 219.182 cv
172.365 218.672 172.494 218.16 171.973 217.906 cv
cp
168.975 214.34 mo
169.104 213.959 168.975 213.705 169.104 213.322 cv
169.104 213.068 169.104 212.432 169.236 212.051 cv
168.975 211.922 168.449 212.178 168.063 212.178 cv
167.672 212.178 166.762 212.178 166.762 212.305 cv
166.891 212.561 166.891 212.814 167.02 213.068 cv
167.15 213.322 167.279 213.576 167.279 214.215 cv
167.279 214.596 167.412 214.979 167.279 215.486 cv
167.279 215.486 168.975 214.596 168.975 214.34 cv
cp
167.412 211.414 mo
167.672 211.031 168.449 210.268 168.715 210.012 cv
168.449 209.758 168.324 209.375 168.193 209.121 cv
167.672 209.121 165.715 209.883 165.715 209.883 cv
166.107 210.521 166.369 211.16 166.629 211.922 cv
166.891 211.795 167.15 211.668 167.412 211.414 cv
cp
172.365 212.051 mo
171.582 212.051 li
171.582 212.051 171.322 213.068 171.322 213.832 cv
171.193 214.215 171.059 214.469 171.059 214.596 cv
170.799 215.105 170.67 215.232 170.412 215.869 cv
170.799 215.996 171.193 215.742 171.451 215.742 cv
171.711 215.615 172.102 215.486 172.236 215.361 cv
172.365 215.232 172.756 214.34 172.887 214.088 cv
172.887 213.197 li
172.756 212.941 172.887 212.432 172.887 212.051 cv
172.756 211.795 172.494 211.922 172.365 212.051 cv
cp
179.404 221.344 mo
179.275 221.217 179.275 220.961 179.141 220.709 cv
178.883 219.943 179.014 219.561 178.883 218.801 cv
178.883 218.801 178.098 218.801 177.84 218.801 cv
177.578 218.926 177.447 218.801 177.188 218.926 cv
177.188 219.436 177.318 219.816 177.709 220.453 cv
178.098 221.217 179.404 221.344 179.404 221.344 cv
cp
165.85 209.248 mo
165.85 209.248 166.24 208.996 166.24 208.738 cv
166.891 207.975 167.672 207.336 167.805 207.213 cv
167.541 206.572 167.412 206.445 167.02 206.064 cv
166.891 206.191 166.24 206.572 166.107 206.828 cv
165.85 206.955 165.588 207.082 165.453 207.213 cv
165.453 207.467 165.588 207.592 165.715 207.848 cv
165.715 208.102 165.85 208.738 165.85 209.248 cv
cp
176.014 213.705 mo
176.014 213.576 175.621 213.576 175.363 213.576 cv
175.1 213.576 174.844 213.705 174.578 213.705 cv
174.318 214.088 174.189 214.469 174.059 214.979 cv
173.93 215.361 173.668 215.615 173.535 215.869 cv
173.535 215.869 174.711 215.615 174.971 215.615 cv
175.363 215.361 175.621 215.232 175.883 214.723 cv
176.014 214.34 176.146 214.215 176.014 213.705 cv
cp
192.57 223.766 mo
192.311 223.637 189.832 222.492 189.441 222.492 cv
188.658 222.619 187.357 222.619 186.57 223.002 cv
186.443 222.619 186.314 221.982 186.57 221.6 cv
186.699 221.344 188.006 221.344 188.396 221.344 cv
189.832 221.473 190.613 221.725 191.004 221.725 cv
191.396 222.109 191.789 222.109 191.918 222.109 cv
191.918 222.109 191.789 221.344 191.656 221.09 cv
191.137 220.836 190.613 220.709 190.221 220.582 cv
189.57 220.326 189.311 220.197 188.268 220.072 cv
187.879 220.072 187.879 220.197 187.096 220.197 cv
187.096 220.072 187.225 219.943 187.357 219.816 cv
187.613 219.436 187.879 219.182 188.139 218.926 cv
190.221 218.926 li
190.746 219.053 191.004 219.182 191.656 219.436 cv
192.045 219.436 191.656 218.801 191.656 218.416 cv
191.527 218.287 191.396 218.16 191.137 218.033 cv
190.613 217.906 190.221 217.779 189.699 217.523 cv
189.311 217.398 188.531 217.143 187.879 217.27 cv
187.225 217.523 187.225 217.398 186.699 217.652 cv
186.051 218.545 185.66 219.561 185.27 220.582 cv
185.27 220.836 184.617 222.363 184.617 222.619 cv
184.617 222.746 184.49 223.002 184.49 223.002 cv
183.965 222.873 181.619 222.492 180.969 223.127 cv
180.711 223.381 180.447 223.637 180.053 224.4 cv
179.533 224.02 179.141 223.891 178.621 223.891 cv
177.967 223.891 177.188 224.273 176.797 224.908 cv
176.797 225.039 175.754 226.947 175.883 228.729 cv
176.014 229.75 176.406 230.131 176.926 230.896 cv
178.363 230.896 li
178.232 230.387 177.967 229.75 177.709 228.984 cv
177.578 228.348 177.84 227.203 177.967 226.184 cv
177.967 226.184 178.363 225.93 178.75 225.801 cv
179.014 225.547 179.141 225.672 179.533 225.672 cv
179.666 225.672 179.666 225.801 179.666 225.801 cv
179.141 226.311 179.141 226.82 179.014 227.584 cv
179.014 227.965 179.533 229.877 180.053 230.896 cv
181.1 230.896 li
181.1 230.896 180.838 228.348 180.969 228.094 cv
180.969 227.584 181.1 227.203 181.229 226.82 cv
181.49 226.947 181.748 226.947 182.01 227.074 cv
182.4 227.332 182.4 227.584 182.4 227.965 cv
182.4 228.602 182.4 228.729 182.273 229.113 cv
182.273 229.496 182.273 229.496 182.273 229.75 cv
182.273 230.387 182.4 230.896 182.4 230.896 cv
183.447 230.896 li
183.447 229.75 183.572 229.877 183.705 229.24 cv
183.836 228.729 183.705 228.477 183.836 228.094 cv
183.836 227.838 183.965 227.584 184.1 227.457 cv
184.49 227.203 184.75 227.203 185.27 227.332 cv
185.27 227.711 185.27 228.094 185.143 228.477 cv
185.008 229.113 184.879 229.75 184.617 230.387 cv
184.617 230.514 184.49 230.768 184.357 230.896 cv
185.922 230.896 li
185.922 230.896 186.18 230.387 186.314 229.75 cv
186.699 230.131 187.225 229.877 187.484 229.877 cv
187.879 229.75 188.139 229.367 188.396 229.113 cv
187.879 228.729 186.699 228.855 186.699 228.348 cv
186.443 227.457 186.699 227.332 186.699 226.82 cv
186.699 226.057 185.922 225.801 185.143 225.672 cv
184.879 225.547 184.357 225.547 184.1 225.547 cv
183.836 225.672 183.572 226.057 183.318 226.057 cv
183.318 226.057 182.793 225.672 182.4 225.547 cv
182.141 225.547 181.357 225.291 181.357 225.291 cv
181.49 225.039 181.619 224.783 181.748 224.654 cv
181.877 224.529 182.273 224.146 182.4 224.146 cv
182.664 224.02 183.053 224.146 183.318 224.273 cv
183.965 224.4 184.49 224.529 184.617 224.529 cv
184.75 224.529 185.143 224.783 185.143 224.783 cv
185.527 224.529 185.527 224.273 185.789 224.273 cv
186.57 224.02 186.834 223.891 187.613 223.891 cv
188.268 223.891 188.791 225.039 189.178 225.42 cv
189.311 225.672 190.221 226.82 190.746 227.838 cv
191.004 227.711 191.137 227.457 191.396 227.457 cv
191.396 227.203 191.266 226.184 191.137 226.057 cv
190.746 224.908 189.965 224.654 189.965 224.4 cv
190.221 224.4 190.746 224.654 191.004 224.654 cv
191.266 224.783 191.656 224.908 192.045 225.164 cv
192.178 225.291 192.439 225.42 192.57 225.547 cv
192.699 226.057 192.699 226.438 192.961 226.947 cv
192.961 227.074 192.961 227.203 193.09 227.332 cv
193.482 226.566 193.873 226.438 194.133 225.801 cv
193.873 224.654 193.219 224.146 192.57 223.766 cv
cp
191.527 229.621 mo
191.266 230.131 191.004 230.639 191.004 230.896 cv
192.439 230.896 li
192.832 230.387 192.961 229.877 192.699 229.113 cv
192.311 229.24 191.527 228.855 191.527 229.621 cv
cp
177.447 216.889 mo
177.84 216.762 178.098 216.506 178.492 216.379 cv
178.75 216.252 179.014 214.215 179.014 214.215 cv
179.014 214.215 178.232 214.34 178.098 214.469 cv
177.967 214.469 177.447 214.469 177.188 214.723 cv
177.188 215.105 177.188 215.486 177.059 215.996 cv
176.797 216.379 176.146 216.633 176.146 217.27 cv
176.146 217.27 176.668 217.398 176.797 217.398 cv
177.059 217.27 177.318 217.016 177.447 216.889 cv
cp
164.672 202.246 mo
164.672 202.246 164.672 202.627 164.672 202.881 cv
164.672 203.137 164.805 204.537 164.805 204.918 cv
164.934 205.301 164.934 205.682 165.061 206.064 cv
165.197 206.318 165.326 206.572 165.326 206.828 cv
165.326 206.828 165.588 206.703 165.715 206.445 cv
166.107 206.064 166.24 205.682 166.5 205.174 cv
166.369 204.283 166.107 203.518 166.107 203.264 cv
166.107 202.246 166.24 201.99 166.369 201.354 cv
165.85 201.607 165.197 201.99 164.672 202.246 cv
cp
182.4 220.326 mo
182.531 220.326 182.664 220.072 182.664 220.072 cv
182.531 219.561 182.4 218.926 182.273 218.416 cv
182.273 218.416 181.877 218.16 181.49 218.16 cv
181.229 218.16 180.969 218.033 180.711 218.16 cv
180.838 218.545 180.838 218.801 180.969 219.182 cv
181.357 219.689 181.877 219.943 182.4 220.326 cv
cp
170.799 206.572 mo
170.67 206.318 170.279 206.191 170.02 206.064 cv
169.758 206.064 169.496 206.572 169.496 207.082 cv
169.496 207.336 169.629 208.23 169.758 208.611 cv
169.758 208.738 170.02 208.867 170.279 208.996 cv
170.67 209.248 171.059 209.375 171.451 209.631 cv
171.451 209.631 171.059 208.486 170.93 207.848 cv
170.799 207.467 171.059 206.955 170.799 206.572 cv
cp
173.535 210.521 mo
173.668 210.012 174.059 209.758 174.059 208.867 cv
174.059 208.867 173.93 208.23 173.801 207.975 cv
173.668 207.721 173.535 207.467 173.146 207.213 cv
173.014 207.213 172.756 206.955 172.627 207.082 cv
172.627 207.082 172.494 208.102 172.365 208.23 cv
172.627 208.611 172.887 208.867 173.014 209.248 cv
173.146 209.631 173.275 210.139 173.535 210.521 cv
cp
177.059 212.561 mo
177.447 212.178 177.059 211.541 177.059 211.16 cv
176.926 210.777 177.059 210.395 176.926 210.012 cv
176.797 209.758 176.533 209.631 176.275 209.631 cv
176.014 209.631 175.363 209.248 175.363 209.502 cv
174.711 209.502 175.234 210.139 175.234 210.521 cv
175.234 211.031 176.533 212.305 176.533 212.305 cv
176.797 212.432 176.797 212.305 177.059 212.561 cv
cp
164.543 201.736 mo
164.805 201.354 165.588 200.59 165.975 200.078 cv
166.24 199.824 166.762 199.188 168.063 198.551 cv
168.193 198.041 168.324 197.66 168.324 197.152 cv
167.02 197.533 166.107 197.789 165.85 198.041 cv
165.197 198.424 164.934 198.68 164.283 199.063 cv
164.283 199.824 164.283 199.824 164.412 200.207 cv
164.543 201.736 li
cp
184.75 216.123 mo
184.357 215.869 183.705 215.105 183.318 214.723 cv
183.053 214.469 183.182 214.088 182.922 213.832 cv
182.664 213.832 182.4 213.832 182.141 213.959 cv
181.748 213.959 181.49 213.959 181.1 214.088 cv
181.229 214.34 181.229 214.596 181.49 214.723 cv
182.01 215.232 182.01 215.361 182.531 216.123 cv
182.664 216.379 183.318 216.506 183.836 216.506 cv
184.1 216.506 184.617 216.252 184.75 216.123 cv
cp
179.666 209.121 mo
179.141 209.248 178.098 209.375 178.098 209.758 cv
177.967 210.139 178.098 210.521 178.098 210.777 cv
178.232 211.031 178.232 211.285 178.232 211.668 cv
178.232 211.922 178.098 212.178 178.232 212.561 cv
178.363 212.305 179.014 212.051 179.141 211.795 cv
179.404 211.414 179.666 211.16 179.795 210.777 cv
179.926 210.395 179.795 209.758 179.666 209.121 cv
cp
181.357 208.867 mo
180.969 209.121 180.711 209.248 180.711 209.502 cv
180.711 210.012 180.838 210.521 180.838 210.777 cv
180.838 211.16 180.838 211.414 180.969 211.541 cv
181.357 211.668 181.49 211.668 182.01 211.922 cv
182.01 212.051 182.531 212.305 182.531 212.305 cv
182.531 212.305 182.273 211.16 182.141 210.648 cv
182.141 208.611 li
181.619 208.738 181.49 208.867 181.357 208.867 cv
cp
166.24 196.896 mo
166.369 196.768 167.805 195.75 167.932 195.623 cv
168.193 195.369 168.324 195.496 168.449 195.242 cv
168.449 194.477 168.715 194.477 168.584 194.225 cv
168.449 193.967 167.412 194.225 167.15 194.225 cv
166.5 194.35 165.326 194.73 165.326 194.986 cv
165.197 195.369 165.197 196.258 165.197 196.389 cv
165.326 196.768 165.326 197.152 165.453 197.533 cv
165.85 197.152 165.975 197.025 166.24 196.896 cv
cp
194.133 219.561 mo
194.004 219.436 193.744 219.309 193.482 219.182 cv
193.482 219.689 li
193.482 220.197 193.609 220.326 193.609 220.582 cv
193.609 220.836 194.004 222.619 194.004 223.127 cv
194.654 223.256 194.654 223.766 195.045 224.02 cv
195.045 224.02 194.783 222.492 194.783 220.582 cv
194.783 220.453 194.396 219.689 194.133 219.561 cv
cp
186.443 214.852 mo
186.965 215.232 188.006 215.105 188.922 214.979 cv
188.396 214.596 188.268 214.34 188.006 214.088 cv
187.613 213.832 187.357 213.705 186.834 213.197 cv
185.143 213.197 li
185.4 213.832 185.527 214.215 186.443 214.852 cv
cp
181.357 206.572 mo
181.619 206.318 181.877 205.811 181.877 205.682 cv
182.141 205.174 182.141 204.537 182.141 204.027 cv
181.1 203.389 179.795 203.264 178.492 203.264 cv
177.318 203.264 176.014 203.389 174.711 204.283 cv
174.844 204.793 174.971 205.174 175.234 205.682 cv
175.363 205.682 175.494 205.938 175.621 205.938 cv
175.883 205.682 176.146 205.301 176.533 205.174 cv
176.533 205.682 li
176.533 206.064 176.533 206.318 176.668 206.703 cv
176.668 207.082 177.059 207.082 177.578 207.082 cv
178.098 207.082 178.232 206.191 178.232 206.064 cv
178.232 206.064 178.363 206.572 179.141 206.955 cv
179.141 206.955 180.053 206.955 180.053 206.828 cv
180.186 206.191 180.318 206.064 180.186 205.555 cv
180.186 205.555 180.969 206.064 181.357 206.572 cv
cp
185.4 211.285 mo
184.879 210.521 184.75 209.758 184.75 209.631 cv
184.49 209.375 185.008 208.486 184.357 208.486 cv
184.1 208.355 183.318 208.102 183.318 208.102 cv
183.182 208.486 183.182 209.248 183.318 209.631 cv
183.318 210.012 183.965 211.16 184.227 211.285 cv
184.357 211.414 185.008 211.414 185.143 211.414 cv
185.27 211.285 185.4 211.285 185.4 211.285 cv
cp
165.453 194.604 mo
165.715 194.225 165.715 194.225 165.975 193.967 cv
166.5 193.586 166.762 193.33 167.412 192.82 cv
167.541 192.564 167.672 192.693 168.063 192.439 cv
168.193 192.313 168.324 192.184 168.324 192.057 cv
168.324 191.803 168.193 191.547 168.063 191.295 cv
167.932 191.039 167.672 190.402 167.672 190.273 cv
167.672 189.256 167.805 189.002 167.932 188.109 cv
167.412 187.982 166.762 187.982 166.5 188.492 cv
166.24 188.875 166.24 189.256 166.24 189.641 cv
166.24 190.273 166.369 190.785 166.5 191.547 cv
165.975 191.932 165.715 192.184 165.197 192.439 cv
165.326 193.203 165.453 194.604 165.453 194.604 cv
cp
191.656 213.068 mo
191.396 212.814 191.137 212.561 190.746 212.305 cv
190.221 212.178 189.965 211.922 189.699 211.414 cv
189.57 211.16 189.441 210.904 189.178 210.648 cv
188.922 210.648 188.791 210.777 188.531 210.904 cv
188.268 211.16 187.744 211.16 187.484 211.541 cv
187.613 211.795 187.744 212.051 188.006 212.305 cv
188.139 212.432 188.268 212.688 188.791 212.941 cv
189.699 213.449 189.965 213.576 189.965 213.576 cv
190.746 213.705 191.656 213.068 191.656 213.068 cv
cp
185.4 207.336 mo
185.4 207.336 185.527 207.975 185.789 208.611 cv
185.922 208.867 186.18 209.121 186.314 209.121 cv
186.57 209.248 187.096 209.375 187.484 209.375 cv
187.484 209.375 187.484 209.248 187.484 209.121 cv
187.096 208.738 186.57 207.848 186.57 207.592 cv
186.314 207.467 186.314 207.467 185.922 207.467 cv
185.789 207.336 185.527 207.336 185.4 207.336 cv
cp
197.129 216.506 mo
197.002 216.889 196.609 217.143 196.609 217.652 cv
196.609 217.652 197.262 218.287 197.393 218.672 cv
197.523 218.926 197.393 220.072 197.523 220.326 cv
197.914 219.943 198.176 219.816 198.176 219.309 cv
198.043 219.182 197.914 218.16 197.783 217.398 cv
197.783 217.143 197.393 216.762 197.129 216.506 cv
cp
207.561 225.42 mo
206.906 225.42 206.125 226.184 205.605 228.602 cv
205.475 229.496 205.344 230.262 205.475 230.768 cv
206.645 230.896 li
206.906 230.514 206.906 229.877 207.168 229.367 cv
207.168 229.113 207.432 229.113 207.688 229.113 cv
207.951 229.24 208.475 229.877 208.732 230.131 cv
208.863 229.877 209.123 229.367 209.123 228.984 cv
209.123 228.855 208.732 228.602 208.602 228.602 cv
208.213 228.348 207.951 228.094 207.432 228.094 cv
207.299 227.584 208.08 226.947 208.08 226.947 cv
208.992 226.947 209.906 227.965 209.906 227.965 cv
210.166 227.838 210.295 227.457 210.559 227.203 cv
209.775 225.801 208.342 225.42 207.561 225.42 cv
cp
200.785 218.672 mo
200.652 218.416 200.521 218.033 200.393 217.779 cv
200.393 217.652 200.393 217.398 200.26 217.016 cv
200.26 217.016 199.346 217.652 199.217 217.779 cv
199.738 218.416 199.479 218.801 199.605 219.309 cv
199.605 219.561 200.131 219.689 200.26 220.072 cv
200.26 220.197 200.004 221.344 200.004 221.344 cv
200.785 220.326 200.785 219.053 200.785 218.672 cv
cp
211.209 229.877 mo
211.082 230.262 210.949 230.514 210.688 230.768 cv
210.82 230.896 211.082 230.896 211.209 230.896 cv
212.518 230.896 li
212.641 230.768 212.641 230.387 212.773 230.131 cv
212.773 229.877 212.902 229.621 212.902 229.24 cv
212.902 229.24 212.641 229.24 212.119 229.24 cv
211.73 229.24 211.34 229.496 211.209 229.877 cv
cp
193.482 211.285 mo
193.609 211.285 194.133 211.285 194.133 211.285 cv
194.396 211.285 194.396 210.777 194.133 210.777 cv
193.219 210.521 192.439 210.268 191.918 209.502 cv
191.789 209.631 191.004 209.883 190.746 210.139 cv
190.746 210.139 191.004 210.777 191.656 211.414 cv
192.045 211.795 192.832 211.541 193.482 211.285 cv
cp
187.744 206.955 mo
188.139 207.467 188.531 207.848 188.922 208.23 cv
189.049 208.486 189.441 208.486 189.699 208.486 cv
191.004 208.486 li
191.396 208.355 191.656 208.355 191.918 208.102 cv
191.396 207.848 190.746 207.592 190.221 207.336 cv
189.699 207.082 189.311 206.828 188.922 206.445 cv
188.658 206.445 188.531 206.572 188.396 206.572 cv
188.139 206.703 188.006 206.828 187.744 206.955 cv
cp
174.059 200.846 mo
174.059 200.846 174.578 200.719 174.971 200.719 cv
175.234 200.719 175.494 200.719 175.754 200.846 cv
175.621 200.973 175.1 201.227 175.1 201.227 cv
174.844 201.354 174.711 201.48 174.318 201.607 cv
174.189 201.354 174.059 200.846 174.059 200.846 cv
cp
174.059 198.041 mo
174.318 197.66 174.844 197.406 175.234 197.279 cv
175.754 197.152 175.621 196.133 175.621 196.006 cv
175.754 195.75 175.621 195.369 175.621 195.113 cv
175.363 195.242 175.363 195.113 174.844 195.242 cv
174.318 195.242 174.059 194.986 173.801 194.73 cv
173.535 194.477 172.887 193.967 172.627 193.461 cv
173.275 193.33 173.801 193.33 174.451 193.33 cv
174.971 193.33 176.146 193.33 176.146 193.33 cv
176.533 193.461 176.797 193.715 176.797 193.967 cv
176.797 194.094 176.668 194.859 176.668 194.986 cv
176.533 195.75 176.533 196.006 176.406 197.152 cv
176.406 197.533 li
176.275 197.789 175.754 197.916 175.494 198.17 cv
175.363 198.551 175.363 198.807 174.971 198.934 cv
174.578 199.063 174.318 199.443 174.059 199.316 cv
173.668 199.063 173.801 198.424 174.059 198.041 cv
cp
171.844 191.547 mo
171.582 191.295 171.059 190.912 170.799 190.402 cv
170.412 189.893 170.539 189.385 170.539 189.256 cv
170.799 188.492 171.711 188.236 172.236 188.109 cv
172.494 188.109 172.756 188.109 173.146 188.365 cv
173.668 188.619 173.93 188.619 174.189 189.51 cv
174.189 189.641 174.189 189.764 174.059 189.764 cv
174.059 189.764 173.275 190.273 173.014 190.531 cv
172.365 190.912 172.236 191.547 171.844 191.547 cv
cp
175.754 191.422 mo
176.146 191.166 176.533 190.912 176.797 190.912 cv
177.059 190.785 177.578 190.656 177.578 190.912 cv
177.578 191.422 177.188 191.676 176.797 192.184 cv
176.533 192.564 176.406 192.313 175.754 192.313 cv
175.621 192.313 175.1 192.313 175.1 192.313 cv
175.1 191.932 175.363 191.803 175.754 191.422 cv
cp
181.1 190.912 mo
181.357 190.912 183.572 191.422 182.141 192.057 cv
181.877 192.313 181.229 192.184 180.576 192.184 cv
180.576 191.932 180.576 191.422 180.318 191.422 cv
180.053 191.166 179.666 191.166 179.666 190.912 cv
179.141 190.402 180.447 190.785 181.1 190.912 cv
cp
183.572 188.365 mo
183.965 187.982 184.49 187.855 185.008 187.982 cv
185.66 188.109 185.789 188.236 186.051 188.492 cv
186.443 189.002 186.314 190.02 186.18 190.656 cv
186.051 191.039 185.66 191.295 185.27 191.295 cv
184.617 190.531 183.965 190.02 183.053 189.764 cv
182.922 189.256 183.318 188.746 183.572 188.365 cv
cp
184.357 193.715 mo
184.227 193.967 183.965 194.094 183.705 194.225 cv
183.572 194.225 183.447 194.477 183.447 194.604 cv
183.182 194.986 182.793 195.113 182.273 195.113 cv
182.01 195.113 181.49 195.113 181.229 194.604 cv
181.229 194.604 181.357 196.133 181.357 196.514 cv
181.357 196.641 181.49 196.641 181.49 196.641 cv
182.01 196.768 182.141 197.279 182.4 197.533 cv
182.4 197.533 182.531 197.66 182.664 197.66 cv
183.182 198.041 184.357 198.551 183.836 198.551 cv
183.836 198.807 183.447 199.443 183.318 199.443 cv
182.922 199.063 182.273 198.807 181.748 198.551 cv
181.619 198.297 181.49 198.041 181.357 197.789 cv
181.1 197.533 180.969 197.533 180.576 197.279 cv
180.576 196.389 180.447 196.389 180.447 195.496 cv
180.447 195.369 180.186 193.967 180.186 193.967 cv
180.186 193.84 180.576 193.461 180.969 193.33 cv
180.969 193.33 183.447 193.33 184.617 193.461 cv
184.617 193.461 184.49 193.715 184.357 193.715 cv
cp
182.922 201.607 mo
182.4 201.48 182.01 201.098 181.357 201.098 cv
181.357 200.719 181.357 200.719 181.49 200.59 cv
182.273 200.463 182.664 200.719 183.053 200.846 cv
183.053 200.973 182.922 201.607 182.922 201.607 cv
cp
174.578 203.389 mo
174.971 203.389 175.363 203.01 175.754 202.881 cv
176.533 202.627 177.188 202.373 177.967 202.246 cv
178.232 202.115 178.232 201.863 178.232 201.607 cv
178.363 201.354 178.363 201.354 178.363 200.973 cv
178.363 200.846 177.84 200.719 177.578 200.207 cv
177.318 199.824 177.578 199.443 177.447 199.443 cv
177.059 199.697 176.533 199.951 176.406 199.443 cv
176.275 199.063 176.275 198.551 176.668 198.424 cv
177.967 197.916 179.404 197.916 180.711 198.424 cv
180.969 198.424 181.1 198.68 181.1 198.934 cv
181.229 199.188 181.1 199.443 180.838 199.697 cv
180.447 199.824 180.053 199.316 180.053 199.697 cv
180.053 200.078 179.795 200.59 179.141 200.846 cv
179.014 200.973 179.141 201.354 179.275 201.736 cv
179.275 201.863 179.275 202.115 179.404 202.115 cv
179.926 202.246 180.711 202.373 181.1 202.627 cv
181.619 202.881 182.531 203.643 182.664 203.518 cv
183.053 203.264 183.182 202.881 183.447 202.627 cv
184.879 203.264 186.051 203.643 187.879 204.793 cv
188.139 204.793 188.139 204.283 188.139 204.027 cv
187.484 203.643 185.527 202.627 185.27 202.498 cv
184.75 202.373 184.49 202.115 183.965 201.99 cv
183.965 201.99 183.965 201.354 183.965 200.973 cv
184.879 201.227 186.699 201.354 188.531 202.373 cv
188.658 201.99 188.922 201.736 188.791 201.607 cv
186.699 200.59 185.143 200.207 183.836 200.207 cv
183.836 200.078 183.572 199.951 183.836 199.824 cv
184.227 199.57 184.357 199.443 184.49 199.316 cv
184.879 198.807 185.143 198.297 185.27 197.789 cv
185.66 197.025 186.051 197.279 186.314 195.623 cv
185.922 195.623 185.789 195.877 185.4 196.006 cv
185.527 195.623 185.66 195.242 185.66 194.859 cv
185.789 194.094 186.051 193.586 186.051 192.693 cv
186.443 192.564 187.096 192.184 187.225 191.676 cv
187.225 191.547 187.225 191.166 187.357 190.656 cv
187.357 189.893 187.484 189.256 187.225 188.746 cv
187.225 188.619 186.314 187.346 185.66 186.965 cv
184.75 186.582 184.357 186.711 183.705 186.836 cv
182.922 186.836 181.877 187.6 181.877 189.002 cv
181.1 189.002 179.533 189.129 178.621 189.893 cv
177.84 189.51 177.188 189.385 176.533 189.256 cv
175.363 189.256 li
175.234 188.746 174.971 188.236 174.451 187.855 cv
173.801 187.475 173.014 186.965 172.102 186.965 cv
171.711 186.965 171.322 186.836 170.93 187.094 cv
170.539 187.346 169.887 187.6 169.758 188.109 cv
169.496 188.746 169.236 189.256 169.236 189.893 cv
169.236 190.531 169.629 191.039 170.02 191.676 cv
170.146 191.932 170.279 191.932 170.539 192.057 cv
170.67 192.057 171.193 192.313 171.322 192.439 cv
171.451 192.564 171.193 192.949 171.193 193.715 cv
171.193 194.35 171.193 194.35 171.322 194.859 cv
171.322 195.369 171.451 195.877 171.582 196.258 cv
171.193 196.258 170.93 195.877 170.67 196.133 cv
170.67 196.389 170.93 197.025 171.193 197.533 cv
171.844 198.17 172.494 198.807 172.887 199.57 cv
172.887 199.697 172.887 199.951 173.014 199.951 cv
172.102 200.078 171.193 200.078 170.279 200.336 cv
169.496 200.59 168.584 200.973 167.805 201.354 cv
167.805 201.863 167.932 202.246 167.932 202.246 cv
168.063 202.246 169.236 201.607 170.279 201.354 cv
171.973 200.846 172.887 200.973 172.887 200.973 cv
173.014 201.227 173.146 201.607 173.014 201.736 cv
171.451 202.373 169.887 203.137 168.449 204.027 cv
168.584 204.283 168.449 204.664 168.715 204.918 cv
170.02 204.154 171.844 203.264 173.146 202.754 cv
173.668 202.627 173.668 202.754 173.93 202.754 cv
174.059 202.881 174.318 203.389 174.578 203.389 cv
cp
199.346 214.852 mo
199.346 214.852 199.086 214.34 199.086 214.215 cv
198.957 213.959 198.828 213.576 198.436 213.449 cv
198.436 213.322 198.305 213.959 198.176 214.215 cv
198.043 214.469 198.043 214.34 197.783 214.852 cv
198.043 215.232 198.176 215.486 198.436 215.869 cv
198.436 215.996 198.828 216.506 198.828 216.506 cv
198.828 216.506 199.346 215.486 199.346 215.232 cv
199.346 214.852 li
cp
216.033 229.496 mo
216.033 229.496 215.514 229.496 215.381 229.496 cv
215.121 229.367 214.99 229.367 214.861 229.496 cv
214.469 229.877 214.469 230.514 214.207 230.896 cv
215.773 230.896 li
216.033 230.639 216.295 230.514 216.295 230.002 cv
216.295 229.877 216.295 229.621 216.033 229.496 cv
cp
197.783 212.051 mo
197.783 210.904 197.523 210.904 197.002 210.395 cv
197.002 210.395 196.609 211.16 196.35 211.541 cv
196.871 212.051 197.002 212.688 197.002 212.688 cv
197.523 212.178 197.523 212.305 197.783 212.051 cv
cp
202.867 216.506 mo
202.867 216.123 202.736 215.742 202.479 215.486 cv
202.346 215.105 202.217 214.596 202.217 214.34 cv
202.082 214.088 201.564 213.322 201.303 212.941 cv
201.043 212.688 201.043 212.051 200.912 211.668 cv
199.346 211.922 li
200.131 212.941 200.785 213.959 201.17 214.979 cv
201.303 215.361 202.479 219.182 202.479 219.182 cv
202.867 219.053 202.346 217.143 202.479 217.016 cv
202.605 216.762 202.605 216.633 202.867 216.506 cv
cp
192.961 206.445 mo
192.832 206.191 192.57 205.682 192.439 205.555 cv
192.311 205.301 192.178 205.047 192.045 204.918 cv
191.918 204.793 191.396 204.918 191.137 204.918 cv
190.875 204.918 190.746 204.918 190.484 205.047 cv
190.746 205.301 191.004 206.191 191.137 206.191 cv
191.266 206.445 191.266 206.572 191.527 206.703 cv
192.178 206.828 192.699 206.703 193.352 206.955 cv
193.609 206.572 193.09 206.572 192.961 206.445 cv
cp
196.48 209.248 mo
196.48 209.248 194.916 208.355 194.654 207.975 cv
194.264 207.975 194.264 207.975 193.873 208.355 cv
193.609 208.355 193.482 208.486 193.352 208.738 cv
193.744 208.996 193.873 209.121 194.264 209.375 cv
194.396 209.502 194.525 209.502 194.916 209.375 cv
195.961 209.375 li
196.217 209.375 196.48 209.502 196.48 209.248 cv
cp
218.51 228.094 mo
218.51 228.094 218.379 228.477 218.248 228.729 cv
217.988 229.367 217.859 229.621 217.859 230.002 cv
218.248 230.262 218.379 230.131 218.902 230.131 cv
219.162 230.131 219.422 230.262 219.553 230.262 cv
219.813 230.131 219.553 229.877 219.553 229.75 cv
219.422 229.75 218.902 228.602 218.51 228.094 cv
cp
204.564 217.143 mo
205.082 216.762 205.213 215.996 205.344 215.615 cv
205.475 215.232 205.213 214.469 205.082 214.215 cv
204.693 214.215 204.436 213.959 204.17 213.959 cv
203.91 213.959 203.781 213.322 203.389 213.449 cv
203.52 213.705 203.781 214.979 203.91 215.232 cv
204.043 215.361 204.564 216.252 204.564 217.143 cv
cp
214.6 224.146 mo
214.6 224.02 214.207 223.766 214.082 223.766 cv
214.082 223.637 213.945 223.127 213.814 223.002 cv
213.557 222.873 213.557 222.746 213.295 222.746 cv
213.295 222.873 213.295 223.002 213.164 223.256 cv
213.164 223.51 212.902 223.637 213.035 223.891 cv
213.164 224.146 213.295 224.146 213.557 224.273 cv
213.686 224.4 214.082 225.42 214.207 225.547 cv
214.338 225.42 214.338 224.654 214.6 224.146 cv
cp
191.918 203.389 mo
192.311 203.389 192.57 203.643 192.832 203.643 cv
192.832 203.264 192.699 203.01 192.57 202.627 cv
192.439 201.99 192.178 201.607 192.045 201.227 cv
192.045 200.846 192.045 200.59 191.918 200.336 cv
191.789 200.336 191.656 200.336 191.527 200.207 cv
191.137 200.207 190.613 200.078 190.613 200.078 cv
190.613 200.463 190.746 201.098 190.746 201.48 cv
190.746 201.607 191.266 202.754 191.396 202.881 cv
191.527 203.137 191.656 203.264 191.918 203.389 cv
cp
204.299 211.795 mo
204.17 211.414 203.781 211.285 203.52 211.031 cv
203.52 211.031 201.828 210.395 201.564 210.395 cv
201.303 210.521 202.217 211.031 202.346 211.285 cv
202.867 211.795 204.17 212.941 204.17 212.941 cv
204.299 211.795 li
cp
188.268 195.75 mo
188.139 195.877 188.006 196.133 188.006 196.258 cv
187.744 196.641 187.357 196.896 187.613 197.279 cv
187.744 197.789 187.744 198.297 188.139 198.68 cv
188.531 199.063 189.049 198.934 189.57 199.316 cv
189.57 199.316 189.178 197.66 188.922 196.896 cv
188.791 196.389 188.531 196.133 188.268 195.75 cv
cp
213.295 205.428 mo
211.602 203.775 209.775 202.754 207.951 202.754 cv
206.389 202.754 205.213 203.898 205.213 205.047 cv
205.213 209.631 207.041 212.561 208.213 215.105 cv
208.602 215.742 208.732 216.252 208.732 216.889 cv
208.863 218.545 207.432 221.6 206.518 223.256 cv
206.389 223.127 205.734 223.002 205.213 223.002 cv
203.91 223.002 203.389 223.891 203.127 224.654 cv
202.736 224.654 202.479 224.4 202.082 224.4 cv
200.521 224.273 199.217 225.672 199.217 227.203 cv
199.217 228.855 199.605 229.75 200.26 230.896 cv
201.564 230.896 li
201.432 230.514 201.043 228.602 200.912 228.094 cv
200.785 227.332 201.043 226.82 201.432 226.438 cv
201.955 225.672 203.256 225.93 203.256 225.93 cv
202.867 226.566 202.346 227.584 202.346 228.602 cv
202.479 229.24 202.605 230.262 203 230.896 cv
204.043 230.896 li
204.299 230.131 204.043 229.496 204.043 228.855 cv
204.043 228.477 204.043 228.094 204.17 227.711 cv
204.17 227.457 204.822 228.221 204.822 228.221 cv
204.822 228.221 205.344 227.584 205.344 227.074 cv
205.344 226.693 204.564 226.82 204.436 226.438 cv
204.299 226.057 204.693 225.164 204.693 225.164 cv
205.475 224.654 206.125 224.783 206.389 224.783 cv
206.777 224.783 206.906 224.908 207.432 224.908 cv
207.82 224.908 207.951 224.146 207.951 223.766 cv
208.08 223.891 208.475 224.146 208.602 224.146 cv
208.992 224.273 209.123 224.273 209.514 224.4 cv
210.037 224.654 210.559 224.908 211.082 225.42 cv
211.082 225.291 li
210.949 224.783 211.209 224.146 210.82 223.891 cv
210.82 223.891 210.166 223.381 209.645 223.127 cv
209.385 222.873 208.992 222.873 208.863 222.619 cv
208.732 222.492 208.732 222.363 208.732 222.109 cv
208.732 221.854 208.863 221.473 208.992 221.473 cv
209.252 221.344 209.385 221.473 209.906 221.725 cv
210.428 221.982 210.949 222.363 211.34 222.619 cv
211.34 222.619 211.469 222.873 211.469 222.746 cv
211.992 222.492 211.992 222.363 211.992 221.6 cv
211.469 220.961 211.992 220.836 211.209 220.326 cv
210.949 220.326 209.514 219.816 209.514 219.816 cv
209.514 219.561 209.906 218.926 209.906 218.926 cv
210.037 218.801 210.295 218.801 210.428 219.053 cv
211.209 219.561 211.73 219.561 212.518 219.816 cv
212.641 219.436 212.641 219.182 212.383 218.926 cv
212.119 218.545 211.73 218.16 211.469 218.033 cv
210.949 217.906 210.688 217.779 210.295 217.652 cv
210.295 217.27 210.166 216.889 210.037 216.379 cv
210.037 216.123 210.295 216.252 210.559 216.252 cv
211.082 216.123 213.295 216.889 213.295 216.889 cv
213.295 216.379 213.164 215.996 212.902 215.742 cv
212.641 215.486 212.383 215.232 211.73 214.979 cv
210.82 214.723 210.037 214.852 209.385 214.469 cv
208.863 213.959 208.732 213.832 208.602 213.322 cv
208.992 213.197 209.645 213.068 210.037 213.068 cv
210.688 213.068 211.082 212.941 211.863 213.197 cv
212.119 213.322 213.035 214.088 213.428 214.088 cv
213.428 214.088 213.164 213.068 212.902 212.688 cv
212.518 212.688 211.863 211.922 211.602 211.795 cv
210.295 211.285 210.037 211.541 209.252 211.668 cv
208.863 211.795 208.475 211.668 208.08 211.668 cv
207.951 211.414 208.342 211.031 208.213 210.777 cv
208.213 210.648 207.688 210.521 207.688 210.268 cv
207.688 210.268 209.775 210.012 210.559 210.139 cv
210.82 210.268 211.602 210.777 211.863 210.777 cv
211.863 210.777 212.119 209.883 211.73 209.121 cv
211.082 208.996 210.428 209.121 209.906 208.996 cv
209.385 208.867 208.863 208.996 208.475 208.996 cv
208.08 208.996 207.688 208.867 207.299 208.867 cv
207.041 208.486 206.906 208.102 206.906 207.721 cv
206.906 207.721 210.166 207.592 210.428 207.467 cv
210.295 207.336 210.037 207.213 209.906 206.955 cv
209.385 206.064 208.992 205.938 208.342 205.938 cv
207.951 205.938 207.041 206.318 206.518 206.191 cv
206.518 205.174 207.041 204.283 207.82 204.283 cv
209.385 204.283 210.949 204.918 212.252 206.318 cv
215.514 209.631 217.205 215.869 217.205 220.326 cv
217.205 222.363 216.945 224.273 216.686 225.801 cv
217.076 225.93 217.334 225.93 217.727 225.93 cv
218.121 224.4 218.51 222.363 218.51 220.453 cv
218.51 213.959 216.162 208.486 213.295 205.428 cv
cp
193.609 200.078 mo
193.873 201.098 194.264 202.373 194.396 203.898 cv
194.396 204.283 194.264 204.664 194.396 205.047 cv
196.217 205.682 li
196.217 205.682 195.961 204.154 195.699 202.373 cv
195.438 200.846 195.307 200.336 194.916 199.697 cv
194.654 199.824 194.525 199.824 194.264 199.824 cv
193.873 199.951 193.609 200.078 193.609 200.078 cv
cp
197.914 207.467 mo
198.176 207.721 198.305 208.23 198.436 209.121 cv
198.566 209.631 198.828 209.758 199.086 210.521 cv
199.479 210.268 200.131 210.395 200.131 210.395 cv
200.131 209.758 199.738 209.121 199.738 208.996 cv
199.605 208.738 199.217 207.975 199.086 207.721 cv
199.217 207.721 199.605 208.23 200.26 208.23 cv
200.393 208.23 200.785 208.355 201.043 208.23 cv
201.043 208.23 201.432 208.486 201.432 208.738 cv
201.693 209.121 201.693 209.375 201.828 209.758 cv
202.082 209.758 202.217 209.758 202.346 209.631 cv
202.867 209.631 203.127 209.502 203.127 209.502 cv
203 209.248 202.867 208.996 202.867 208.738 cv
202.736 208.486 202.479 207.848 202.479 207.848 cv
204.822 207.467 li
204.822 207.082 204.693 206.572 204.299 206.318 cv
203.127 206.703 201.828 206.828 200.912 206.828 cv
199.605 206.828 198.305 206.572 196.48 205.811 cv
196.35 206.064 196.48 206.572 196.48 206.572 cv
197.262 207.213 197.262 206.828 197.914 207.467 cv
cp
169.104 186.457 mo
170.02 185.947 171.582 185.053 172.102 184.545 cv
172.236 184.801 173.801 185.693 174.451 186.072 cv
174.971 186.457 175.494 186.582 176.014 186.836 cv
176.275 186.457 176.533 186.072 176.797 185.182 cv
177.188 185.438 177.709 185.438 178.098 185.563 cv
178.098 186.072 178.098 186.582 178.232 187.094 cv
178.232 187.346 178.492 187.219 179.014 186.965 cv
179.795 186.711 180.576 186.582 180.969 186.457 cv
181.877 185.947 182.4 184.928 183.182 184.928 cv
183.836 184.928 185.008 185.309 185.27 185.563 cv
185.66 185.693 185.922 185.818 186.314 185.818 cv
186.834 185.818 187.225 185.309 187.613 185.053 cv
186.443 184.291 185.143 183.527 183.836 183.018 cv
183.053 183.652 182.531 184.162 182.141 184.162 cv
181.748 184.162 182.01 183.4 182.01 182.889 cv
181.619 182.889 181.357 182.889 180.969 182.762 cv
180.711 183.652 180.576 184.801 179.926 185.053 cv
179.666 185.182 179.533 185.182 179.404 185.182 cv
179.404 184.162 li
179.404 184.035 179.926 183.145 179.795 183.018 cv
179.795 183.018 178.621 183.271 178.363 183.4 cv
178.232 183.527 177.447 183.91 177.318 183.91 cv
177.318 183.91 176.926 183.781 176.797 183.781 cv
176.406 183.527 176.146 183.527 175.754 183.271 cv
175.234 184.801 175.1 185.182 175.1 184.928 cv
175.1 184.928 173.275 183.781 172.627 183.018 cv
170.93 183.271 170.93 183.527 169.496 184.035 cv
168.975 184.545 168.193 185.182 167.672 185.947 cv
167.412 186.457 167.15 186.711 166.891 187.219 cv
168.193 187.729 li
168.324 187.6 168.975 186.711 169.104 186.457 cv
cp
214.082 221.09 mo
214.469 221.217 214.729 222.109 214.99 222.363 cv
215.381 222.873 215.252 221.473 215.121 221.217 cv
215.121 221.09 215.121 220.072 214.861 220.072 cv
214.729 219.943 214.6 219.561 214.469 219.436 cv
214.338 219.816 214.469 220.072 214.469 220.453 cv
214.469 220.709 213.945 220.961 214.082 221.09 cv
cp
191.266 195.113 mo
191.137 195.113 190.746 194.986 190.221 194.859 cv
189.832 194.859 189.57 194.859 189.57 194.859 cv
189.699 195.242 190.092 195.623 190.221 195.877 cv
190.221 196.006 190.221 196.389 190.355 196.641 cv
190.613 196.641 191.004 196.768 191.266 196.896 cv
191.396 196.896 192.178 197.025 192.439 197.279 cv
192.699 197.279 193.609 198.297 193.744 198.424 cv
194.133 198.68 194.525 198.934 194.783 198.807 cv
195.045 198.807 194.783 198.424 194.783 198.297 cv
194.264 197.533 193.873 196.133 193.744 196.133 cv
193.352 196.006 193.09 196.133 192.57 195.877 cv
192.311 195.623 191.527 195.242 191.266 195.113 cv
cp
189.178 192.057 mo
189.311 192.313 189.57 192.313 189.832 192.439 cv
190.092 192.693 190.355 192.82 190.746 193.076 cv
191.266 193.586 191.527 194.225 192.178 194.73 cv
192.439 194.859 192.57 194.986 192.699 194.986 cv
192.832 194.986 193.352 195.369 193.482 195.496 cv
193.482 194.477 193.09 193.715 192.832 193.203 cv
192.832 193.076 192.699 192.949 192.439 192.82 cv
192.045 192.439 191.656 192.057 191.527 192.057 cv
191.137 191.676 190.875 191.295 190.484 190.912 cv
190.092 190.912 189.832 191.295 189.57 191.422 cv
189.441 191.676 188.922 191.932 189.178 192.057 cv
cp
188.658 188.875 mo
188.658 189.256 188.791 189.641 188.922 190.02 cv
189.57 190.402 190.355 190.656 190.355 190.656 cv
190.484 190.273 190.221 189.893 190.221 189.51 cv
189.965 188.619 189.57 187.729 189.441 186.711 cv
189.441 186.199 li
188.922 185.947 188.396 185.818 187.744 185.563 cv
187.744 185.563 187.744 186.328 188.006 186.711 cv
188.268 187.346 188.658 188.365 188.658 188.875 cv
cp
216.295 192.184 mo
215.773 191.547 li
217.205 191.166 li
217.859 193.33 li
216.295 192.184 li
cp
211.602 191.039 mo
210.82 191.547 li
209.775 190.785 li
210.949 190.148 li
212.252 191.039 li
211.602 191.039 li
cp
231.938 215.996 mo
232.066 215.232 232.066 214.469 232.066 213.959 cv
231.805 213.705 231.412 213.576 231.156 213.576 cv
231.156 213.197 231.023 212.688 231.156 212.178 cv
231.412 212.178 231.938 212.305 231.938 212.178 cv
231.938 211.414 231.805 210.648 231.678 210.268 cv
231.412 210.139 231.023 210.012 230.631 209.883 cv
230.631 209.502 230.502 209.121 230.371 208.867 cv
230.766 208.738 231.023 208.738 231.283 208.738 cv
231.283 208.738 231.023 207.592 230.895 207.082 cv
230.631 206.955 230.24 206.955 229.98 206.955 cv
229.85 206.703 229.719 206.445 229.588 206.064 cv
229.85 205.938 230.113 205.938 230.371 205.811 cv
230.113 205.174 229.98 204.918 229.719 204.537 cv
228.809 204.537 li
228.68 204.283 228.549 204.027 228.549 203.775 cv
228.68 203.643 228.938 203.518 229.07 203.389 cv
228.938 203.01 228.68 202.627 228.416 202.373 cv
228.156 202.373 227.895 202.498 227.635 202.373 cv
227.506 202.373 227.113 201.863 227.244 201.863 cv
227.373 201.607 227.635 201.48 227.766 201.354 cv
227.373 200.846 227.244 200.463 226.852 200.207 cv
226.592 200.207 226.334 200.207 226.07 200.336 cv
226.07 200.336 225.809 199.951 225.68 199.824 cv
225.287 199.824 225.941 199.188 225.941 199.188 cv
225.549 198.68 225.16 198.297 224.639 197.789 cv
224.373 197.789 224.113 198.041 223.984 198.041 cv
223.984 198.041 223.463 197.66 223.463 197.533 cv
223.463 197.279 223.984 197.152 223.984 197.152 cv
223.984 197.152 223.07 196.133 222.42 195.75 cv
222.16 195.877 222.031 195.877 221.766 195.877 cv
221.377 195.496 220.855 195.242 220.855 195.242 cv
220.855 195.242 221.248 194.986 221.248 194.859 cv
220.596 194.477 220.334 194.225 219.813 193.84 cv
219.291 193.586 219.031 193.203 218.77 192.82 cv
217.859 191.422 216.686 189.385 213.814 189.002 cv
213.814 189.002 214.469 189.893 214.861 190.531 cv
214.861 190.656 214.861 190.656 214.338 190.656 cv
213.428 190.656 li
213.164 190.273 213.035 190.148 212.902 189.893 cv
212.641 189.385 212.518 189.256 212.252 189.002 cv
211.73 188.619 209.123 190.02 206.906 190.531 cv
207.432 191.166 207.951 191.547 208.08 191.803 cv
208.732 192.439 209.645 193.586 210.295 194.477 cv
210.428 194.35 210.559 194.225 210.82 194.094 cv
212.518 193.84 212.518 193.461 212.518 193.461 cv
212.518 193.461 211.209 192.439 212.119 192.439 cv
212.119 192.439 212.773 192.564 213.035 192.313 cv
213.686 192.184 214.469 192.057 214.861 192.313 cv
215.381 192.693 215.641 193.203 216.033 193.586 cv
215.773 193.586 215.514 193.461 215.252 193.461 cv
214.469 193.33 213.686 193.461 213.035 193.586 cv
213.035 193.586 214.082 194.477 214.338 194.859 cv
214.082 194.73 213.295 194.859 213.295 194.859 cv
212.902 194.986 212.383 195.113 212.252 195.113 cv
211.863 195.242 211.469 195.113 211.209 195.242 cv
211.73 195.496 214.082 196.389 215.252 196.389 cv
216.295 196.389 216.945 196.258 217.859 195.877 cv
217.988 195.75 218.248 195.623 218.379 195.75 cv
218.902 195.877 219.162 196.006 219.422 196.258 cv
222.813 198.297 226.592 203.137 227.766 205.682 cv
228.938 208.102 229.588 210.777 229.588 213.322 cv
229.719 216.762 228.549 220.072 226.201 223.002 cv
224.893 224.654 222.42 226.057 219.813 226.311 cv
220.596 227.203 220.984 228.602 221.377 229.877 cv
221.377 229.877 222.291 229.75 222.813 229.496 cv
222.813 228.477 222.16 227.332 222.16 227.074 cv
222.16 227.074 222.941 226.566 223.594 226.566 cv
223.721 226.947 224.113 227.584 224.639 228.477 cv
225.16 228.221 225.549 227.965 225.941 227.584 cv
225.941 226.947 225.549 226.184 225.287 225.42 cv
226.201 225.039 226.723 224.908 226.723 224.908 cv
226.986 225.291 227.635 225.672 227.766 226.057 cv
227.766 226.057 228.416 225.42 228.68 224.783 cv
228.416 224.273 228.025 223.891 227.766 223.381 cv
228.809 222.238 li
228.809 222.238 229.459 222.746 229.719 223.002 cv
230.113 222.492 230.502 221.982 230.631 221.344 cv
229.98 220.709 229.719 220.709 229.588 220.326 cv
229.85 219.943 229.98 219.436 230.24 219.053 cv
230.631 219.182 230.895 219.436 231.156 219.561 cv
231.412 219.053 231.678 218.287 231.678 217.779 cv
231.412 217.523 231.023 217.398 230.766 217.143 cv
230.895 216.506 231.023 215.869 231.023 215.869 cv
231.023 215.869 231.678 215.996 231.938 215.996 cv
cp
f
22.7178 49.3569 mo
22.7178 47.8706 li
25.9619 47.8706 28.2603 47.6001 28.2603 42.8716 cv
28.2603 17.8765 li
28.2603 13.0132 26.5005 12.8779 22.7178 12.8779 cv
22.7178 11.3926 li
41.9038 11.3926 li
41.9038 12.8779 li
37.9844 12.8779 36.3638 13.0132 36.3638 17.8765 cv
36.3638 42.8716 li
36.3638 47.6001 38.3892 47.8706 41.9038 47.8706 cv
41.9038 49.3569 li
22.7178 49.3569 li
22.7178 49.3569 li
cp
88.7837 20.5796 mo
88.7837 49.6265 li
86.4878 49.6265 li
57.4385 19.6362 li
57.5776 20.4458 57.5776 21.1196 57.5776 21.9312 cv
57.5776 40.1714 li
57.5776 45.8438 57.5776 47.8706 62.708 47.8706 cv
62.708 49.3569 li
49.062 49.3569 li
49.062 47.8706 li
54.1997 47.8706 54.1997 45.438 54.1997 40.1714 cv
54.1997 19.3633 li
54.1997 16.2559 54.1997 12.8779 48.7964 12.8779 cv
48.7964 11.3926 li
61.6284 11.3926 li
85.5396 35.9819 li
85.4058 35.3066 85.4058 34.8994 85.4058 33.9536 cv
85.4058 20.5796 li
85.4058 15.1753 85.5396 12.8779 80.4097 12.8779 cv
80.4097 11.3926 li
94.0557 11.3926 li
94.0557 12.8779 li
89.0566 12.8779 88.7837 15.0396 88.7837 20.5796 cv
88.7837 20.5796 li
cp
135.938 36.5215 mo
135.938 46.2485 li
130.533 48.9517 125.398 50.3027 120.263 50.3027 cv
106.079 50.3027 97.5679 41.9263 97.5679 31.3887 cv
97.5679 20.0386 107.294 10.582 119.725 10.582 cv
122.834 10.582 125.13 11.123 127.563 11.9336 cv
129.32 12.4746 130.396 13.1484 131.479 13.1484 cv
132.426 13.1484 132.695 11.5264 132.83 10.582 cv
134.18 10.582 li
135.398 23.687 li
133.775 23.687 li
133.1 21.1196 131.881 18.9575 130.26 17.4722 cv
127.697 14.9058 124.182 13.5542 120.129 13.5542 cv
111.618 13.5542 106.622 20.3076 106.622 30.4419 cv
106.622 40.438 112.7 47.3281 120.804 47.3281 cv
123.239 47.3281 125.398 46.7896 128.101 45.5732 cv
128.101 35.5757 li
128.101 32.333 127.563 31.1182 122.968 31.1182 cv
122.968 29.6313 li
140.127 29.6313 li
140.127 31.1182 li
135.803 31.1182 135.938 32.4673 135.938 36.5215 cv
135.938 36.5215 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
22.7178 49.3569 mo
22.7178 47.8706 li
25.9619 47.8706 28.2603 47.6001 28.2603 42.8716 cv
28.2603 17.8765 li
28.2603 13.0132 26.5005 12.8779 22.7178 12.8779 cv
22.7178 11.3926 li
41.9038 11.3926 li
41.9038 12.8779 li
37.9844 12.8779 36.3638 13.0132 36.3638 17.8765 cv
36.3638 42.8716 li
36.3638 47.6001 38.3892 47.8706 41.9038 47.8706 cv
41.9038 49.3569 li
22.7178 49.3569 li
22.7178 49.3569 li
cp
88.7837 20.5796 mo
88.7837 49.6265 li
86.4878 49.6265 li
57.4385 19.6362 li
57.5776 20.4458 57.5776 21.1196 57.5776 21.9312 cv
57.5776 40.1714 li
57.5776 45.8438 57.5776 47.8706 62.708 47.8706 cv
62.708 49.3569 li
49.062 49.3569 li
49.062 47.8706 li
54.1997 47.8706 54.1997 45.438 54.1997 40.1714 cv
54.1997 19.3633 li
54.1997 16.2559 54.1997 12.8779 48.7964 12.8779 cv
48.7964 11.3926 li
61.6284 11.3926 li
85.5396 35.9819 li
85.4058 35.3066 85.4058 34.8994 85.4058 33.9536 cv
85.4058 20.5796 li
85.4058 15.1753 85.5396 12.8779 80.4097 12.8779 cv
80.4097 11.3926 li
94.0557 11.3926 li
94.0557 12.8779 li
89.0566 12.8779 88.7837 15.0396 88.7837 20.5796 cv
88.7837 20.5796 li
cp
135.938 36.5215 mo
135.938 46.2485 li
130.533 48.9517 125.398 50.3027 120.263 50.3027 cv
106.079 50.3027 97.5679 41.9263 97.5679 31.3887 cv
97.5679 20.0386 107.294 10.582 119.725 10.582 cv
122.834 10.582 125.13 11.123 127.563 11.9336 cv
129.32 12.4746 130.396 13.1484 131.479 13.1484 cv
132.426 13.1484 132.695 11.5264 132.83 10.582 cv
134.18 10.582 li
135.398 23.687 li
133.775 23.687 li
133.1 21.1196 131.881 18.9575 130.26 17.4722 cv
127.697 14.9058 124.182 13.5542 120.129 13.5542 cv
111.618 13.5542 106.622 20.3076 106.622 30.4419 cv
106.622 40.438 112.7 47.3281 120.804 47.3281 cv
123.239 47.3281 125.398 46.7896 128.101 45.5732 cv
128.101 35.5757 li
128.101 32.333 127.563 31.1182 122.968 31.1182 cv
122.968 29.6313 li
140.127 29.6313 li
140.127 31.1182 li
135.803 31.1182 135.938 32.4673 135.938 36.5215 cv
135.938 36.5215 li
cp
0 0 0 1 cmyk
@
167.691 17.8853 mo
167.691 18.1533 167.691 18.4229 168.096 18.6919 cv
168.5 18.2876 169.172 18.1533 169.307 18.1533 cv
169.039 17.6162 168.367 18.1533 167.691 17.8853 cv
cp
167.289 11.0264 mo
167.289 11.564 167.691 11.6978 167.828 11.833 cv
168.232 12.1021 168.367 12.1021 168.766 11.833 cv
169.172 12.1021 169.307 11.564 169.441 11.833 cv
169.441 12.6396 169.441 13.043 169.307 13.7153 cv
169.172 14.6577 168.367 14.522 167.691 14.9268 cv
167.691 15.3301 167.289 16.0029 167.691 16.4048 cv
168.096 16.1353 168.367 16.0029 169.039 15.7319 cv
169.039 15.3301 169.441 14.9268 169.98 14.6577 cv
169.98 13.4463 170.383 12.2363 170.383 11.0264 cv
170.383 10.7583 170.111 10.4888 169.709 10.2197 cv
166.482 10.2197 li
166.482 10.7583 166.885 11.0264 167.289 11.0264 cv
cp
174.953 18.2876 mo
176.436 18.8247 li
176.436 18.1533 li
175.09 18.1533 li
174.953 18.2876 li
cp
165.947 8.06787 mo
166.482 7.66309 167.828 6.72266 168.5 6.45459 cv
168.367 5.10791 166.885 4.9751 166.213 4.43652 cv
165.676 4.43652 li
164.602 4.84131 164.332 5.91602 164.199 6.85791 cv
164.602 8.06787 165.408 7.26123 165.947 8.06787 cv
cp
171.457 7.93359 mo
171.189 7.66309 170.383 8.06787 169.98 8.20166 cv
169.441 8.33691 169.039 8.7417 169.039 9.14502 cv
170.516 9.14502 li
170.652 8.7417 171.189 8.20166 171.457 7.93359 cv
cp
174.283 11.0264 mo
174.016 11.0264 li
174.283 12.1021 174.283 13.3135 174.283 14.522 cv
174.818 14.6577 175.361 14.9268 175.361 15.7319 cv
175.895 16.0029 176.436 16.1353 176.975 16.5386 cv
177.242 16.4048 177.377 16.0029 177.51 15.5981 cv
176.975 14.9268 175.76 15.3301 175.76 14.1187 cv
174.953 13.8496 li
174.953 13.043 174.953 12.2363 174.818 11.6978 cv
174.953 11.564 li
174.953 11.6978 175.09 11.833 175.361 12.1021 cv
175.895 12.1021 176.436 12.2363 176.975 11.833 cv
177.242 11.6978 177.242 11.0264 177.51 11.0264 cv
177.779 11.0264 178.049 11.0264 178.182 10.7583 cv
178.182 10.7583 178.451 10.7583 178.182 10.623 cv
175.225 10.2197 li
174.953 10.623 174.283 10.623 174.283 11.0264 cv
cp
173.879 8.06787 mo
174.549 8.06787 174.283 9.0083 174.818 9.14502 cv
176.029 9.14502 li
176.029 8.7417 175.895 8.7417 175.76 8.7417 cv
175.09 8.7417 175.09 7.66309 174.549 7.93359 cv
174.283 7.93359 174.016 7.66309 173.611 7.93359 cv
173.611 8.06787 173.611 8.06787 173.879 8.06787 cv
cp
179.258 8.7417 mo
179.662 8.7417 li
180.066 8.33691 180.33 8.7417 180.604 8.33691 cv
180.871 7.66309 180.871 6.45459 180.33 5.78076 cv
180.066 5.24561 179.393 4.9751 178.723 4.43652 cv
177.779 4.9751 li
177.242 5.24561 176.975 5.78076 176.975 6.45459 cv
177.916 6.85791 178.854 7.93359 179.258 8.7417 cv
cp
173.475 43.5679 mo
171.996 43.8374 li
171.592 44.376 171.457 44.6426 171.457 44.9146 cv
172.133 44.6426 li
172.266 44.6426 172.398 44.9146 172.537 45.1812 cv
172.398 45.855 171.592 45.855 171.322 46.1245 cv
170.92 47.4683 172.133 48.2749 172.266 49.3511 cv
173.879 49.3511 li
173.207 48.1421 173.072 46.2583 173.072 45.855 cv
173.072 45.1812 173.072 44.2407 173.475 43.5679 cv
cp
174.953 44.6426 mo
174.686 44.6426 174.283 45.4531 174.283 45.7197 cv
174.283 46.7959 174.549 48.2749 174.953 49.3511 cv
176.029 49.3511 li
176.029 48.1421 176.166 46.7959 176.166 45.7197 cv
176.029 45.7197 176.299 45.9902 174.953 44.6426 cv
cp
178.182 45.1812 mo
177.916 45.1812 177.242 45.5859 177.242 45.855 cv
177.242 46.3926 176.975 49.3511 176.975 49.3511 cv
177.916 49.3511 li
178.316 48.1421 179.123 46.5264 179.123 45.855 cv
179.123 45.3179 178.723 45.1812 178.182 45.1812 cv
cp
195.529 44.376 mo
196.068 44.6426 196.068 45.3179 196.068 45.4531 cv
196.068 45.855 195.799 46.2583 195.529 46.5264 cv
195.262 46.2583 195.262 45.855 194.992 45.4531 cv
194.721 45.4531 194.59 46.1245 194.59 46.3926 cv
194.59 47.6035 195.125 48.5444 195.529 49.3511 cv
196.74 49.3511 li
196.605 48.2749 196.336 47.333 196.336 46.1245 cv
196.336 45.4531 196.74 44.6426 196.873 44.2407 cv
195.529 44.376 li
cp
208.709 41.5513 mo
207.902 40.3413 li
208.17 39.938 208.17 39.3994 208.572 38.728 cv
208.709 38.728 209.111 39.6699 209.111 39.8027 cv
209.111 40.6118 209.111 40.8784 208.709 41.5513 cv
cp
207.766 44.2407 mo
207.766 43.5679 206.959 43.166 206.422 41.9536 cv
206.959 41.0142 li
207.361 41.2817 207.902 41.6851 207.902 42.3589 cv
207.902 42.3589 207.766 42.7612 207.902 43.0308 cv
207.902 43.166 208.17 43.166 208.17 43.4351 cv
207.902 43.8374 207.902 43.8374 207.766 44.2407 cv
cp
205.883 38.0552 mo
204.943 38.0552 205.48 36.1729 203.463 36.1729 cv
203.061 36.1729 202.793 36.8452 202.254 36.981 cv
202.254 36.8452 202.387 36.04 202.387 36.04 cv
202.387 35.7681 202.523 35.231 203.061 34.9629 cv
204.133 34.9629 203.869 35.3662 204.674 35.6353 cv
205.076 35.7681 205.35 36.04 205.883 36.04 cv
205.883 38.0552 li
cp
205.213 40.8784 mo
204.271 40.7456 204.271 39.6699 204.133 39.5347 cv
203.463 38.728 202.523 39.3994 201.85 39.3994 cv
201.58 38.5928 201.98 38.5928 201.98 38.0552 cv
202.387 38.0552 202.793 37.7861 203.193 38.0552 cv
203.869 37.7861 204.271 38.4575 204.943 38.4575 cv
205.076 38.728 205.35 39.3994 205.48 39.5347 cv
205.48 40.0732 205.35 40.2075 205.213 40.8784 cv
cp
203.869 42.7612 mo
203.193 42.3589 202.793 42.2241 201.98 42.2241 cv
201.98 41.6851 201.58 41.0142 201.311 41.0142 cv
200.504 41.0142 200.641 41.5513 199.967 41.5513 cv
201.176 40.3413 li
201.311 40.0732 201.311 40.0732 201.58 40.0732 cv
201.98 40.3413 202.119 40.4751 202.523 40.4751 cv
202.523 40.7456 202.523 40.8784 202.387 41.2817 cv
202.793 41.5513 203.061 41.1489 203.328 41.5513 cv
203.73 41.6851 204.133 41.8218 204.133 42.3589 cv
204.133 42.4932 203.869 42.7612 203.869 42.7612 cv
cp
201.311 22.3218 mo
201.85 22.0537 202.119 22.188 202.387 22.3218 cv
202.387 23.1284 203.328 22.7266 203.869 22.9932 cv
204.133 23.3989 204.271 23.666 204.402 24.2056 cv
203.463 23.9351 202.926 23.5317 202.119 23.5317 cv
201.85 23.5317 200.641 23.9351 200.504 24.2056 cv
200.102 23.666 200.773 22.5898 201.311 22.3218 cv
cp
200.908 25.8188 mo
201.311 25.4155 201.98 24.8774 202.523 24.8774 cv
203.463 24.8774 204.271 25.5498 204.271 26.2212 cv
203.463 26.2212 203.328 26.0874 202.793 26.0874 cv
202.119 26.0874 201.311 26.3564 200.908 27.0288 cv
200.641 26.4907 200.773 26.2212 200.908 25.8188 cv
cp
205.076 27.5679 mo
205.48 27.5679 205.75 27.2983 206.02 27.2983 cv
206.691 27.2983 207.23 28.373 207.361 29.1812 cv
206.287 28.5083 204.674 28.1064 203.73 28.1064 cv
203.193 28.1064 201.58 28.7764 201.043 29.3149 cv
200.773 28.1064 li
201.58 27.9712 201.58 27.2983 202.119 27.2983 cv
202.523 27.2983 203.061 27.1631 203.463 27.1631 cv
203.869 27.1631 204.133 26.894 204.271 26.894 cv
204.943 26.894 204.674 27.5679 205.076 27.5679 cv
cp
206.557 35.0957 mo
206.152 34.9629 205.213 34.8286 205.213 34.4243 cv
205.213 33.8882 204.943 33.7515 204.271 33.7515 cv
203.73 33.7515 203.328 33.8882 202.523 34.1563 cv
202.523 34.1563 202.119 33.6177 201.98 33.0791 cv
202.254 32.9448 203.328 32.6768 203.869 32.6768 cv
204.809 32.6768 205.75 32.6768 205.75 33.0791 cv
205.75 33.6177 206.557 33.7515 206.557 35.0957 cv
cp
205.75 31.4668 mo
205.48 31.1987 205.75 30.6602 205.076 30.6602 cv
204.809 30.6602 204.402 31.0625 204.402 31.0625 cv
204.133 31.1987 203.328 30.6602 203.328 31.0625 cv
203.328 31.7363 202.793 32.0044 202.119 32.0044 cv
201.85 32.0044 201.58 32.0044 201.311 31.8701 cv
201.311 30.5249 li
203.061 30.5249 202.926 29.9878 203.73 29.9878 cv
204.271 29.9878 204.674 30.2568 205.076 30.2568 cv
205.75 30.2568 205.35 29.9878 206.02 29.9878 cv
206.691 29.9878 206.959 30.5249 207.361 30.6602 cv
207.361 31.0625 207.766 31.6011 207.766 32.1396 cv
206.826 32.1396 205.883 31.8701 205.75 31.4668 cv
cp
198.488 35.5015 mo
198.221 34.6934 197.68 33.8882 197.412 33.0791 cv
197.412 32.9448 197.277 32.9448 197.545 32.811 cv
197.68 32.811 198.221 32.811 198.221 32.9448 cv
198.354 33.2144 198.623 33.6177 198.623 34.0195 cv
198.623 34.5596 198.354 34.9629 198.488 35.5015 cv
cp
196.605 36.8452 mo
196.199 36.8452 196.199 36.5776 196.199 36.04 cv
196.068 35.231 195.799 34.5596 195.529 33.7515 cv
195.262 32.6768 194.59 31.7363 194.049 30.5249 cv
193.916 29.9878 193.244 29.7183 192.705 29.3149 cv
193.379 29.3149 194.049 29.3149 194.59 29.8511 cv
194.59 30.1216 194.721 30.2568 195.125 30.6602 cv
196.068 30.6602 195.799 31.8701 196.605 32.4063 cv
196.199 32.811 196.068 33.0791 195.799 33.3496 cv
196.199 33.6177 196.605 33.7515 196.74 34.1563 cv
196.74 34.9629 196.605 35.9033 196.605 36.8452 cv
cp
194.453 40.0732 mo
194.721 39.3994 194.721 38.0552 194.453 38.0552 cv
194.188 37.9214 193.646 38.0552 193.646 37.7861 cv
193.646 37.3828 193.783 36.8452 193.783 36.5776 cv
193.783 36.04 193.379 35.7681 193.379 35.5015 cv
193.379 34.6934 194.318 34.5596 194.59 34.0195 cv
194.721 34.5596 194.721 35.0957 194.721 35.7681 cv
194.721 36.04 195.125 36.8452 194.721 37.5181 cv
194.721 37.9214 195.529 37.6519 195.529 38.0552 cv
195.529 38.728 194.721 39.5347 194.453 40.0732 cv
cp
193.244 33.0791 mo
193.244 33.3496 192.842 33.6177 192.705 33.6177 cv
192.705 33.6177 192.033 32.9448 191.896 32.2734 cv
191.766 31.7363 192.303 30.7954 192.303 30.7954 cv
192.438 30.7954 192.568 31.0625 192.705 31.0625 cv
192.842 31.1987 192.705 31.6011 192.842 32.0044 cv
193.244 32.2734 193.512 32.811 193.244 33.0791 cv
cp
191.766 38.8618 mo
191.766 38.0552 191.631 37.3828 191.092 36.8452 cv
191.092 36.5776 191.496 36.5776 191.227 36.1729 cv
191.227 36.1729 190.42 35.7681 190.42 35.231 cv
190.42 34.6934 190.955 34.29 191.227 33.8882 cv
191.227 33.7515 191.766 34.1563 191.766 34.9629 cv
191.766 35.0957 191.766 35.5015 191.631 35.7681 cv
191.496 36.1729 192.438 36.1729 192.438 36.5776 cv
192.438 37.3828 191.896 38.0552 191.766 38.8618 cv
cp
190.553 28.7764 mo
190.955 29.1812 191.496 29.7183 191.496 30.1216 cv
191.496 30.5249 191.227 30.6602 190.955 30.9282 cv
190.955 30.9282 190.42 30.2568 190.42 29.9878 cv
190.42 29.4487 190.42 29.1812 190.553 28.7764 cv
cp
196.605 28.5083 mo
196.873 28.7764 197.143 28.9106 197.412 29.3149 cv
197.412 30.3911 li
196.199 29.7183 195.529 28.5083 194.453 27.2983 cv
195.529 27.2983 195.799 28.373 196.605 28.5083 cv
cp
187.461 26.3564 mo
188.537 25.8188 li
188.938 26.2212 189.479 26.3564 189.746 26.4907 cv
189.342 26.894 188.266 27.0288 187.461 26.3564 cv
cp
188.807 43.166 mo
188.537 42.7612 188.404 42.3589 188.133 42.3589 cv
188.537 40.8784 187.73 39.6699 187.461 38.4575 cv
187.461 38.0552 li
187.863 38.728 188.938 39.3994 188.807 40.0732 cv
188.938 41.2817 188.938 42.3589 188.938 43.166 cv
188.807 43.166 li
cp
186.924 45.1812 mo
186.656 44.376 186.387 43.166 185.443 43.166 cv
185.309 42.6274 185.178 42.3589 184.637 41.9536 cv
183.563 41.8218 li
183.695 42.3589 184.502 42.3589 183.963 43.166 cv
184.502 43.5679 184.904 43.5679 185.178 44.2407 cv
185.443 44.6426 185.178 45.1812 185.309 45.4531 cv
184.502 45.855 li
184.502 45.1812 184.637 43.8374 183.695 43.5679 cv
182.889 43.8374 182.756 42.7612 182.217 42.3589 cv
181.949 42.3589 181.949 41.6851 181.543 41.9536 cv
180.871 42.3589 180.066 41.9536 179.393 42.3589 cv
180.066 41.2817 li
180.604 40.8784 181.143 41.0142 181.678 40.8784 cv
182.756 40.7456 li
183.83 40.7456 184.77 41.2817 185.85 41.6851 cv
186.387 41.9536 186.656 42.3589 186.656 43.0308 cv
186.924 43.166 187.461 43.166 187.461 43.5679 cv
187.326 43.8374 187.059 44.6426 186.924 45.1812 cv
cp
182.756 45.4531 mo
182.35 45.855 li
181.949 45.4531 182.217 44.376 181.543 44.2407 cv
180.871 44.2407 180.33 43.5679 180.066 43.4351 cv
180.604 43.166 li
180.604 43.166 180.871 43.0308 181.143 43.166 cv
181.41 43.4351 181.678 43.5679 181.678 43.8374 cv
181.949 44.2407 182.35 43.8374 182.621 44.2407 cv
182.756 44.6426 182.889 45.1812 182.756 45.4531 cv
cp
178.451 40.4751 mo
179.123 38.8618 li
179.662 38.8618 180.066 38.5928 180.33 38.5928 cv
180.871 38.4575 181.275 38.4575 181.678 38.4575 cv
181.678 38.5928 li
183.16 38.5928 184.904 38.4575 185.982 39.6699 cv
186.113 40.7456 li
185.576 40.3413 184.77 40.3413 184.502 39.6699 cv
183.963 39.5347 183.563 39.5347 182.889 39.5347 cv
182.35 39.6699 181.678 39.6699 181.143 39.6699 cv
181.006 39.6699 181.143 39.5347 180.871 39.3994 cv
180.066 39.6699 179.258 39.6699 178.451 40.4751 cv
cp
177.916 28.5083 mo
177.105 27.2983 177.51 26.2212 177.916 25.2817 cv
178.182 26.0874 178.316 26.894 178.451 27.5679 cv
178.586 28.1064 179.393 28.373 179.662 28.7764 cv
179.123 28.9106 178.182 29.1812 177.916 28.5083 cv
cp
176.436 33.6177 mo
175.627 32.9448 175.09 32.1396 174.283 31.0625 cv
176.436 31.4668 li
176.838 31.7363 177.645 32.6768 178.049 33.0791 cv
177.779 33.3496 176.975 33.6177 176.436 33.6177 cv
cp
176.436 37.25 mo
176.299 37.25 175.361 36.8452 175.09 36.5776 cv
174.953 36.1729 174.953 35.7681 174.953 35.7681 cv
176.029 35.7681 li
176.701 37.25 li
176.436 37.25 li
cp
174.016 22.7266 mo
173.879 22.7266 174.016 23.1284 173.879 23.1284 cv
173.879 23.3989 173.611 23.9351 173.611 24.4727 cv
173.34 24.6079 172.805 24.8774 172.266 24.6079 cv
172.266 24.2056 li
172.133 23.9351 172.133 23.3989 172.133 23.1284 cv
171.996 22.9932 li
171.592 23.1284 171.592 23.3989 171.592 23.666 cv
171.457 23.9351 171.189 24.2056 171.189 24.6079 cv
170.652 24.6079 170.383 24.4727 169.98 24.2056 cv
169.98 22.9932 li
169.98 22.7266 169.98 22.7266 169.844 22.7266 cv
169.172 23.3989 li
168.635 22.9932 168.5 21.9185 168.5 21.2471 cv
170.652 20.0361 173.34 20.4395 174.953 21.1118 cv
175.225 21.2471 175.492 21.2471 175.76 21.3813 cv
175.627 22.188 175.361 23.3989 174.549 23.9351 cv
174.549 23.3989 174.283 23.1284 174.016 22.7266 cv
cp
172.398 29.7183 mo
172.133 28.373 li
172.537 28.1064 172.939 27.8345 173.475 27.1631 cv
173.475 28.1064 173.34 29.3149 172.398 29.7183 cv
cp
171.457 37.6519 mo
170.652 36.5776 li
172.668 36.5776 li
173.072 37.3828 li
172.537 37.7861 172.133 37.7861 171.457 37.6519 cv
cp
169.578 35.0957 mo
169.709 34.6934 170.111 34.5596 170.383 34.1563 cv
170.652 33.7515 171.189 33.0791 171.322 32.6768 cv
171.996 32.2734 172.266 32.2734 172.805 32.2734 cv
172.668 33.0791 172.266 33.3496 171.592 34.29 cv
171.189 34.5596 170.383 34.6934 169.578 35.0957 cv
cp
169.172 27.0288 mo
169.578 27.0288 169.98 27.0288 170.383 27.2983 cv
170.383 27.9712 170.652 28.5083 170.652 29.3149 cv
169.844 28.5083 169.172 27.8345 169.172 27.0288 cv
cp
168.766 33.0791 mo
168.367 33.0791 167.691 33.3496 166.885 33.0791 cv
167.289 32.811 167.691 32.6768 168.232 32.2734 cv
169.307 31.1987 li
170.383 31.1987 li
169.98 32.0044 169.578 32.811 168.766 33.0791 cv
cp
167.289 39.6699 mo
167.021 38.728 166.35 37.7861 165.543 37.7861 cv
165.139 37.3828 164.732 36.981 164.602 36.5776 cv
164.199 36.1729 163.795 36.5776 163.256 36.1729 cv
162.717 36.1729 162.045 36.1729 161.51 36.5776 cv
161.51 36.1729 li
162.449 35.0957 li
163.389 35.231 164.602 35.0957 164.869 35.7681 cv
165.543 36.1729 166.213 36.5776 166.35 36.8452 cv
166.35 36.981 166.35 36.981 166.35 37.25 cv
166.615 37.3828 167.156 37.5181 167.424 37.6519 cv
167.424 38.0552 167.289 39.6699 167.289 39.6699 cv
cp
165.811 42.7612 mo
165.543 42.3589 165.811 41.6851 165.408 41.2817 cv
165.408 41.0142 165.676 40.8784 165.543 40.7456 cv
165.408 40.4751 163.795 39.938 163.795 39.938 cv
163.256 39.5347 162.582 39.1304 162.045 38.5928 cv
161.51 38.4575 161.104 38.728 160.43 38.8618 cv
160.43 38.728 160.43 38.5928 160.43 38.5928 cv
160.699 38.0552 160.699 37.3828 161.51 37.3828 cv
161.908 37.3828 162.449 37.3828 162.717 37.7861 cv
163.256 37.7861 163.525 38.3247 163.93 38.4575 cv
164.602 39.1304 165.139 39.3994 165.543 39.6699 cv
165.543 40.0732 165.676 40.3413 165.947 40.4751 cv
166.754 40.4751 166.482 41.2817 166.754 41.8218 cv
165.811 42.7612 li
cp
164.332 45.1812 mo
163.389 42.7612 li
162.313 41.6851 161.104 41.5513 160.43 41.0142 cv
159.893 40.8784 159.893 41.2817 159.625 41.0142 cv
159.625 40.7456 159.625 40.3413 160.027 39.938 cv
160.834 39.938 li
161.643 40.3413 li
162.045 40.7456 162.986 40.7456 162.986 41.5513 cv
162.986 41.6851 162.854 41.8218 163.256 42.3589 cv
164.602 42.7612 li
164.732 43.8374 li
164.332 45.1812 li
cp
159.223 47.7363 mo
159.223 47.0649 159.625 46.2583 159.625 45.4531 cv
159.625 45.4531 159.086 44.9146 158.549 44.9146 cv
158.146 45.1812 158.146 45.4531 158.012 45.855 cv
157.607 46.6606 156.801 47.4683 156.666 48.2749 cv
156.529 48.2749 156.529 48.1421 156.529 48.1421 cv
156.529 46.7959 156.666 44.5112 157.473 43.5679 cv
158.146 42.7612 158.68 42.7612 159.494 42.6274 cv
160.164 42.7612 li
159.625 43.5679 li
160.164 43.8374 160.971 44.376 160.971 45.1812 cv
160.971 46.2583 159.223 47.7363 159.223 47.7363 cv
cp
155.863 45.855 mo
155.727 45.3179 155.322 44.6426 154.648 44.6426 cv
154.113 45.7197 153.977 46.1245 154.516 47.7363 cv
154.113 48.1421 153.84 48.2749 153.303 48.5444 cv
153.035 48.0068 153.035 47.0649 153.035 46.5264 cv
153.035 45.5859 153.17 44.6426 153.439 43.8374 cv
153.84 43.4351 154.113 42.7612 154.516 42.3589 cv
155.992 42.3589 li
155.322 42.3589 155.322 43.0308 155.322 43.4351 cv
155.727 43.5679 156.262 43.7031 156.262 44.376 cv
156.262 44.9146 156.129 45.4531 155.863 45.855 cv
cp
152.766 45.855 mo
152.633 45.855 152.23 45.4531 151.826 45.4531 cv
151.422 46.2583 151.826 46.7959 151.826 47.7363 cv
151.826 48.1421 151.689 48.5444 151.689 48.5444 cv
151.422 48.5444 150.887 48.0068 150.75 47.4683 cv
150.75 45.3179 li
151.959 43.8374 li
152.766 44.376 153.035 45.1812 152.766 45.855 cv
cp
161.375 27.8345 mo
161.51 27.2983 161.908 27.0288 162.045 26.894 cv
162.449 27.0288 162.717 27.0288 163.256 27.1631 cv
162.582 27.8345 161.908 28.1064 161.643 28.9106 cv
161.643 28.5083 161.51 28.1064 161.375 27.8345 cv
cp
161.51 12.2363 mo
162.582 11.833 li
161.908 12.6396 li
162.045 13.9849 161.51 14.9268 161.51 16.1353 cv
160.834 13.9849 li
160.971 13.4463 161.104 12.9087 161.51 12.2363 cv
cp
161.51 9.54736 mo
161.775 9.14502 161.908 8.7417 162.313 8.33691 cv
162.313 9.95068 li
161.375 10.2197 li
161.51 9.54736 li
cp
166.213 30.7954 mo
166.35 30.6602 166.482 30.7954 166.754 30.7954 cv
166.213 32.811 li
165.543 33.3496 164.602 33.0791 163.795 33.0791 cv
164.869 32.811 165.676 31.6011 166.213 30.7954 cv
cp
164.869 29.1812 mo
164.869 29.7183 164.602 30.3911 163.93 31.0625 cv
163.795 31.1987 163.389 31.4668 163.389 31.4668 cv
163.389 30.6602 163.795 29.9878 163.795 29.3149 cv
164.199 29.1812 164.602 28.9106 164.869 29.1812 cv
cp
166.35 27.5679 mo
165.543 27.2983 164.602 26.4907 164.199 25.8188 cv
163.93 25.2817 163.795 24.6079 163.795 24.2056 cv
164.332 24.2056 164.732 24.6079 164.869 24.8774 cv
164.869 25.0122 li
165.543 25.8188 166.213 26.4907 166.35 27.5679 cv
cp
168.096 25.4155 mo
167.691 27.1631 li
167.289 26.3564 166.885 25.5498 166.754 24.6079 cv
168.096 25.4155 li
cp
176.436 29.3149 mo
175.76 28.9106 174.549 28.7764 174.818 27.9712 cv
175.09 27.2983 175.492 27.1631 175.76 26.894 cv
175.895 27.8345 176.029 28.5083 176.436 29.3149 cv
cp
163.93 4.16846 mo
164.199 4.16846 164.602 4.0332 164.732 3.76514 cv
165.408 3.63135 165.811 2.9585 166.615 3.36182 cv
167.156 3.36182 167.691 3.63135 168.096 3.76514 cv
168.096 4.0332 168.096 4.16846 168.367 4.43652 cv
169.172 4.43652 169.172 5.24561 169.578 5.91602 cv
169.98 6.0498 170.383 6.0498 170.652 6.0498 cv
171.457 6.31934 172.133 6.31934 172.398 6.72266 cv
173.475 6.0498 174.549 5.91602 175.76 6.0498 cv
175.895 5.64795 176.166 5.10791 176.299 4.43652 cv
176.436 4.84131 176.436 4.43652 176.701 4.43652 cv
177.242 4.0332 177.916 3.36182 178.854 3.63135 cv
179.393 4.0332 180.33 3.76514 180.871 4.43652 cv
181.275 4.9751 181.543 5.78076 181.949 6.45459 cv
181.543 7.26123 181.949 8.33691 181.143 8.7417 cv
180.33 9.54736 li
180.066 9.54736 180.066 9.81641 179.662 9.81641 cv
180.066 10.7583 179.797 12.1021 179.393 13.043 cv
179.662 12.9087 180.066 12.9087 180.066 12.5068 cv
180.199 12.6396 180.066 12.9087 180.066 13.043 cv
180.066 13.3135 180.066 13.4463 180.066 13.4463 cv
180.066 14.1187 179.662 14.7915 179.123 15.3301 cv
178.854 16.1353 178.182 17.2114 177.242 17.3467 cv
177.242 17.6162 li
179.258 17.6162 180.871 18.1533 182.756 19.0952 cv
182.756 20.0361 li
181.143 19.0952 179.393 18.4229 177.377 18.2876 cv
177.377 18.6919 177.377 19.0952 177.242 19.228 cv
178.854 20.0361 180.33 20.7085 181.678 21.9185 cv
181.678 23.1284 li
180.33 21.7847 178.854 20.4395 177.105 20.0361 cv
176.975 20.3042 176.436 20.5732 176.299 21.1118 cv
175.361 20.4395 174.283 19.7681 173.207 19.6328 cv
172.805 19.6328 172.537 18.1533 172.537 18.1533 cv
173.207 17.8853 173.611 17.481 173.879 16.8081 cv
174.418 16.8081 li
174.818 16.8081 174.818 16.5386 174.818 16.1353 cv
174.818 15.3301 173.072 15.3301 172.266 15.3301 cv
171.322 15.3301 170.652 15.3301 170.111 15.7319 cv
169.844 15.7319 169.98 16.1353 169.98 16.4048 cv
169.98 16.5386 170.383 16.8081 170.383 16.8081 cv
170.652 16.8081 170.92 16.5386 171.189 16.5386 cv
171.055 17.3467 171.322 17.75 172.133 18.1533 cv
171.996 19.4985 li
170.383 19.4985 169.307 20.1714 168.096 20.7085 cv
167.691 20.4395 167.424 20.0361 167.156 19.6328 cv
165.543 20.1714 162.717 22.3218 162.717 22.3218 cv
162.717 22.3218 162.717 21.7847 162.717 21.3813 cv
163.93 20.3042 165.543 19.7681 166.754 19.0952 cv
166.754 18.1533 li
166.213 17.8853 165.676 18.1533 165.139 18.1533 cv
163.93 18.2876 162.717 18.8247 161.908 19.4985 cv
161.908 19.0952 161.775 18.5581 161.775 18.5581 cv
163.256 17.75 165.139 17.0786 166.885 17.3467 cv
166.885 17.2114 166.885 16.8081 166.885 16.8081 cv
166.754 16.5386 166.754 16.1353 166.482 16.1353 cv
165.676 15.3301 164.869 14.1187 164.869 13.3135 cv
165.408 13.043 li
165.139 12.2363 164.869 10.2197 165.408 9.54736 cv
164.602 9.14502 163.795 8.47119 163.525 7.93359 cv
163.256 7.26123 162.986 6.85791 162.854 6.0498 cv
163.256 5.24561 163.525 4.9751 163.93 4.16846 cv
cp
183.023 13.9849 mo
183.023 14.1187 182.756 15.3301 182.756 15.3301 cv
181.678 15.5981 li
182.35 12.6396 li
182.621 13.1782 183.023 13.7153 183.023 13.9849 cv
cp
183.16 24.2056 mo
184.502 25.4155 li
183.695 25.4155 182.756 25.8188 182.35 25.0122 cv
182.621 24.8774 182.889 24.4727 183.16 24.2056 cv
cp
184.232 17.6162 mo
184.502 18.1533 184.502 18.4229 184.77 18.6919 cv
185.309 18.4229 185.309 19.0952 185.443 19.228 cv
185.576 19.6328 185.85 20.0361 185.85 20.4395 cv
185.041 20.4395 184.637 20.0361 184.232 19.228 cv
184.232 18.8247 184.1 18.2876 184.232 17.6162 cv
cp
186.789 23.3989 mo
186.656 23.9351 186.113 23.3989 185.982 23.3989 cv
184.77 23.3989 li
184.637 23.1284 184.502 22.9932 184.502 22.7266 cv
185.041 22.5898 185.443 22.3218 185.85 22.5898 cv
186.113 22.9932 186.387 23.3989 186.789 23.3989 cv
cp
180.066 37.6519 mo
180.066 37.25 180.33 36.8452 180.871 36.5776 cv
181.678 36.8452 182.35 35.0957 183.16 36.04 cv
183.563 36.1729 183.963 36.1729 184.232 36.1729 cv
185.178 36.5776 185.443 37.3828 185.85 38.0552 cv
185.178 38.0552 184.637 38.0552 184.232 37.3828 cv
184.1 37.3828 183.83 36.981 183.695 37.25 cv
183.023 37.7861 182.35 36.8452 181.543 36.981 cv
181.143 37.3828 180.736 37.6519 180.066 37.7861 cv
180.066 37.6519 li
cp
181.543 29.3149 mo
182.08 28.9106 182.756 28.9106 183.023 28.7764 cv
183.563 29.3149 184.1 30.2568 185.041 30.7954 cv
184.502 30.7954 183.563 30.7954 183.023 30.3911 cv
182.217 29.9878 181.949 29.7183 181.543 29.3149 cv
cp
181.275 31.4668 mo
181.678 31.6011 182.35 32.0044 182.756 32.2734 cv
182.756 32.2734 182.484 32.2734 182.35 32.2734 cv
180.871 32.811 179.662 31.8701 178.451 31.0625 cv
179.123 30.7954 180.066 30.6602 180.871 30.6602 cv
181.275 31.4668 li
cp
181.275 27.0288 mo
180.604 27.1631 180.066 26.4907 179.393 26.2212 cv
179.123 25.4155 179.123 24.6079 178.854 24.2056 cv
179.393 24.6079 180.604 24.6079 180.33 25.8188 cv
180.33 26.2212 180.871 26.4907 181.275 27.0288 cv
cp
188.266 28.5083 mo
187.596 28.7764 li
186.113 28.7764 185.443 28.373 184.77 27.8345 cv
185.309 27.8345 185.982 27.1631 185.982 27.1631 cv
186.656 27.8345 187.596 28.373 188.266 28.5083 cv
cp
210.457 10.7583 mo
210.055 10.2197 209.514 9.54736 208.977 9.54736 cv
209.379 9.54736 209.918 9.14502 210.59 9.14502 cv
210.859 9.81641 211.396 10.2197 211.531 10.7583 cv
211.666 11.564 li
211.396 11.0264 210.859 10.7583 210.457 10.7583 cv
cp
206.152 8.7417 mo
205.883 8.33691 205.48 8.7417 205.213 8.7417 cv
204.943 8.7417 204.809 8.7417 204.271 8.33691 cv
205.076 8.33691 205.48 7.93359 206.152 7.66309 cv
206.691 8.06787 207.23 8.20166 207.633 8.7417 cv
206.152 8.7417 li
cp
219.332 15.7319 mo
217.449 13.8496 215.297 12.9087 213.684 11.0264 cv
212.877 10.2197 212.203 9.41309 211.666 8.33691 cv
210.992 7.66309 210.59 7.26123 209.787 6.85791 cv
209.918 7.26123 210.055 7.66309 210.189 8.06787 cv
210.055 8.06787 li
209.379 8.06787 208.709 7.66309 208.17 7.26123 cv
208.709 6.72266 li
208.572 6.45459 208.17 6.45459 207.902 6.45459 cv
205.75 6.0498 203.73 7.26123 201.58 7.66309 cv
201.58 7.93359 li
202.926 8.33691 203.193 9.95068 204.004 10.7583 cv
204.809 10.7583 li
205.076 10.7583 205.48 11.0264 205.75 11.0264 cv
205.75 10.7583 205.48 10.2197 205.48 10.2197 cv
205.75 9.95068 206.02 9.95068 206.287 10.2197 cv
206.959 10.623 207.902 9.95068 208.572 11.0264 cv
207.766 11.0264 206.959 11.0264 206.287 11.4312 cv
206.287 11.564 206.691 11.833 206.557 12.1021 cv
205.883 11.833 205.076 12.1021 204.809 11.564 cv
204.674 11.6978 li
205.48 12.6396 206.691 13.4463 207.902 13.8496 cv
209.65 14.1187 211.129 13.3135 212.877 13.7153 cv
219.064 16.6743 223.367 23.666 223.367 30.6602 cv
223.367 40.6118 217.719 44.6426 214.088 44.6426 cv
213.416 44.6426 212.34 44.2407 211.936 43.8374 cv
212.34 42.3589 212.605 40.7456 212.605 38.3247 cv
212.605 32.5415 210.32 26.3564 207.23 23.1284 cv
205.75 21.6494 204.133 20.4395 202.387 20.4395 cv
201.58 20.4395 200.773 20.4395 200.238 21.1118 cv
199.566 21.6494 199.16 22.7266 199.295 23.3989 cv
198.221 24.2056 196.473 24.6079 195.125 24.6079 cv
193.646 24.6079 191.766 24.0708 190.016 22.7266 cv
190.016 20.7085 li
189.613 20.5732 188.266 19.7681 188.938 19.0952 cv
189.342 19.228 189.613 19.4985 189.746 19.6328 cv
189.613 18.6919 189.613 17.6162 188.938 16.8081 cv
188.672 16.8081 188.266 16.8081 187.863 16.5386 cv
187.461 16.1353 187.059 15.5981 187.059 14.9268 cv
187.461 15.5981 188.133 15.3301 188.537 15.7319 cv
187.863 14.1187 188.133 13.4463 186.924 11.0264 cv
186.656 9.81641 185.443 9.14502 184.637 8.33691 cv
184.232 8.06787 184.1 7.66309 183.563 7.66309 cv
183.023 7.53027 183.023 6.85791 183.023 6.45459 cv
183.16 6.45459 183.563 6.72266 183.83 6.85791 cv
183.023 4.9751 182.484 2.9585 180.736 1.88135 cv
180.33 2.15186 li
178.182 2.15186 li
178.451 1.88135 178.99 1.74756 179.393 1.47803 cv
178.99 1.07715 178.723 .939453 177.916 .939453 cv
177.51 1.07715 176.975 1.47803 176.436 1.47803 cv
176.299 1.47803 li
176.299 1.07715 176.166 .537598 176.975 .268066 cv
176.166 .134277 175.492 .134277 174.549 .268066 cv
174.418 .939453 174.016 1.34424 174.016 1.88135 cv
173.611 2.15186 173.475 2.55664 173.072 2.9585 cv
173.072 2.15186 173.475 1.34424 173.611 .537598 cv
173.072 .672363 172.398 1.07715 172.133 1.07715 cv
171.055 .537598 169.709 0 169.172 0 cv
169.98 .537598 169.578 1.47803 169.709 2.15186 cv
169.172 1.88135 li
169.039 1.34424 168.367 .939453 168.232 .268066 cv
167.424 .268066 166.885 .537598 166.213 .939453 cv
166.213 1.07715 li
166.615 1.07715 167.156 1.47803 167.424 1.88135 cv
166.482 1.88135 165.811 1.47803 164.869 1.47803 cv
164.869 1.47803 164.869 1.34424 164.732 1.34424 cv
164.332 1.47803 163.93 1.88135 163.658 2.15186 cv
162.717 2.9585 162.045 3.63135 161.643 4.84131 cv
161.908 4.84131 162.313 4.84131 162.449 4.9751 cv
161.908 5.10791 161.643 5.78076 161.104 5.91602 cv
161.104 7.93359 li
160.699 8.33691 160.164 8.7417 159.893 9.54736 cv
159.223 11.6978 159.086 14.1187 159.086 16.8081 cv
158.949 17.3467 158.68 17.481 158.416 17.6162 cv
158.416 19.7681 li
158.416 19.7656 159.223 18.96 159.625 18.6919 cv
159.625 20.4395 li
159.086 20.4395 158.68 21.1118 158.68 21.5151 cv
158.68 22.0537 158.818 22.5898 158.818 23.1284 cv
158.818 23.3989 158.818 23.3989 158.949 23.666 cv
158.949 23.3989 159.223 23.1284 159.625 22.9932 cv
159.625 22.9932 159.893 22.7266 160.43 22.7266 cv
160.027 23.1284 159.893 23.666 159.625 24.2056 cv
159.223 24.6079 159.223 24.6079 159.223 24.6079 cv
159.223 24.6079 159.086 24.8774 159.086 25.0122 cv
159.625 27.8345 160.43 30.2568 161.51 32.9448 cv
160.43 34.6934 159.223 38.0552 158.416 41.2817 cv
157.742 40.6118 156.801 40.4751 155.992 40.4751 cv
155.188 40.6118 154.381 40.8784 153.84 41.6851 cv
153.035 41.2817 151.959 41.4175 151.422 41.9536 cv
150.213 43.0308 150.213 43.5679 150.213 44.376 cv
149.943 44.6426 149.404 45.3179 149.404 46.2583 cv
149.404 47.4683 149.539 48.2749 150.213 49.3511 cv
170.652 49.3511 li
170.516 48.9478 170.248 48.4092 169.98 48.1421 cv
169.578 47.333 169.844 46.2583 169.844 45.4531 cv
170.248 44.6426 170.652 43.8374 171.189 43.166 cv
171.322 42.7612 171.189 42.7612 171.322 42.6274 cv
172.266 42.3589 li
172.805 42.3589 173.207 41.9536 173.879 41.9536 cv
174.283 42.6274 174.283 41.5513 174.953 41.2817 cv
176.436 41.0142 177.916 41.2817 178.723 42.3589 cv
178.723 42.6274 178.854 42.6274 178.854 42.7612 cv
178.182 42.7612 li
177.377 42.3589 176.436 41.9536 175.492 42.3589 cv
175.492 42.7612 175.361 42.7612 175.361 43.166 cv
175.361 43.4351 175.361 43.4351 175.361 43.8374 cv
175.895 43.8374 176.299 44.376 176.838 44.6426 cv
177.105 44.2407 177.916 43.8374 178.451 43.8374 cv
179.123 43.8374 180.066 44.2407 180.066 45.3179 cv
180.066 46.7959 li
180.604 47.333 181.275 47.4683 181.949 47.7363 cv
181.678 48.2749 181.275 48.2749 180.871 48.2749 cv
179.797 48.2749 li
179.662 48.1421 179.393 48.1421 179.393 47.7363 cv
178.99 48.2749 178.723 48.8125 178.451 49.3511 cv
194.188 49.3511 li
193.916 48.8125 193.646 48.4092 193.512 48.1421 cv
193.244 47.333 193.244 46.2583 193.244 45.4531 cv
194.721 43.4351 li
195.529 43.4351 196.199 43.166 197.68 43.0308 cv
197.947 42.6274 197.68 42.3589 198.891 42.3589 cv
199.832 42.3589 200.504 42.6274 200.773 42.7612 cv
200.908 43.0308 200.908 43.0308 200.773 43.3013 cv
200.504 43.5679 199.967 43.0308 199.566 43.166 cv
199.295 43.4351 199.697 43.5679 199.697 43.8374 cv
199.967 44.1064 198.488 43.5679 198.488 43.5679 cv
198.488 43.5679 198.221 44.376 198.086 44.6426 cv
198.086 44.6426 198.623 45.1812 198.891 45.4531 cv
199.16 45.855 198.488 46.2583 198.488 46.6606 cv
198.221 46.5264 197.68 46.1245 197.68 46.2583 cv
197.412 47.333 197.68 48.2749 197.545 49.3511 cv
199.027 49.3511 li
199.16 47.0649 li
199.295 45.7197 200.908 43.3013 201.85 43.3013 cv
202.387 43.3013 202.793 43.5679 203.193 43.8374 cv
203.463 44.376 204.133 44.6426 204.133 44.9146 cv
204.133 45.1812 203.73 45.3179 203.061 45.3179 cv
202.793 45.3179 202.793 44.9146 202.387 44.6426 cv
201.58 45.4531 li
201.58 45.4531 202.523 46.2583 202.523 46.7959 cv
202.523 47.4683 202.387 47.7363 201.98 48.1421 cv
201.176 46.5264 li
200.773 46.5264 200.102 47.333 200.102 47.7363 cv
200.102 48.2749 199.832 48.5444 199.832 49.3511 cv
208.17 49.3511 li
209.111 49.3511 209.918 49.0815 210.859 48.5444 cv
212.473 48.5444 li
215.836 48.5444 218.523 47.6035 220.943 45.1812 cv
224.174 41.9536 226.057 36.8452 226.057 31.8701 cv
226.057 25.9546 223.633 20.0361 219.332 15.7319 cv
cp
/1 
<<
/Name (PANTONE 165 CVC)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .6 1 0 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Daddy) ()%%Title: (Logo ING Leon copy.eps)%%CreationDate: 10-06-09 12:49%%Canvassize: 16383%AI9_DataStream%Gb!Q;H!g,7dcgW2Hj<K1*O5oHOW>,M(&+7n71_/g3V1H:mq9Dch:Y@d=QZ3#n'(7jBW"eZ?!Vf$V>^DkGWtEd8"]VI^X?FX&A>Hl%G^5&<EbrnYpK.5n]r>#(35_YW\rOaLBE$@!bq>f3V`1.^`l#&<9mcKL<bL@\k>(f]Edu^lO/8K"bY(lS$8p8U>CPENG0f>9m@KR9%Z@[n$ff/j*c*[/s97-3tV"nQN):#k-$NSoHT)?Ca.=*,NiSU-<faL=V=D?TA$M3Lur1f2uG`b)&DOd'+[(q"r[tPCcN+f=eP#b`o%B+HlU]4iq[V;d)nLAtEZJL>H"Tm7f8]<Y"c9ej)LolPcdbPr):?1gDYe!\^SouEhoOA$*t4S`\_K..jp<s5`/c&cSi]q<EN2='5/%@8fL_pTbKoIVQX@4b<UB=,QRgi1EOpkT>)K/RRtMIdca4pT2p0O(RG:(KlZSIYY"6:7=';s+Y*Y3KBiT:\*R]53tj"U]([Vae>RG%H1c"/m1"VbeG%/(eu(VF$I_rQ8NL+cUsIm+\8FF!,9iqs8Hf4#8\Oep-]o-5#TAo`k^%W77i\9a(?gqRdW#b!PY\/aVBYL[`k\F`%1m:h"d`P>e)8SU8'_&nmrX3,5L=H7iO4*UW`4(WRmqQYCP*.(TnG)$8h7o3FNsl`b4Ic"5o"]hF$YL@tMMe#`!Foin/W>2+1&tPU%o=tYW@$BREP<;cna%tXdq1O\Js8@+)L>K.H!7Q"LT-W;HL3%T=OiI"7alm7$$0JhZG0bLeU"0,62VR'%c7J#capm'Cc$=fiMmrPH%O<Ym0`)01uic]R71tMPR_35WC`CjNi-X,8FTZ,amW!VisdTRRfeJjMr4fr",BoT^\]9Y9V%N:X!dQtZu.fXWGgXb^!1g4hISZ9RO%Ii9\,g6TWlFq@SChRk\;IX/-;j.Qh2pdg)k2rdrgs1\ZV"b'n0(_Hg$@Zig?0nCtPYJUFTm4lDos(:JKeo9:APZj9SI`DeH`H)b-%H+"&irV:/gL]-Iu`_X13Mj?3cGD<fnTBWHOirffgj.ej(![D0NUQ'Hp1I7%V\,"RCoJ"MB<uLaKWW;iR:lK_N(Q1<>`0F\#OXJ6<%c2J-fiCMHfj1e+Z%r^/8HieH@RLa$a+`HAQp!`M%4c*bmN,h_Y6?sLk9"$haq!H5!=J;0R0n>M_rX\pH$GUsUe)+KWHffa&TtFZE%]ta+\>BSir,`#Ven9>Us(B03s#W'n`[rdWHXW^f<*Zi6ggLKDmTHR#m$P(9Ia5c(`6/0.:Ms_1ijO-+F!`4:lJlS[UY]*!Ucf![_%r2Ui8q!gdZS[gMl<L1$&F4@DT!b$)(Fng`ha<MlL#gE=2RfSVMd0@*C<lIQZ[Uq+Ps"0rB%4m85l?CSf[A6%Jn,'Hf3I"kr%hH=h%J,KdGn2LV5;sLjTZQ>L@.-d7bUt5Pb&6j[gldbf_5XOaq80>j@3!%1#:XP6V+/DBQe):4=qY!u`RN@"+2?>l66ADXm[>&b!05@-5%oG`@sPA]q^VM;kbQVqHQ*q`bLAiT2eH<iIo;0k_3fm1"&3/j\>bRKpA*:.`/M<4?XpYO?hDb(2gOV4hZhf#oX4ZA>7FB/?"$$uG$%f:n;:rkf_8VUrXUMLSZjrTEr04`)?L$J@NQ0t6NE+.!?PbC@o9rdU$Xl,V]]`Raf+(5(kUhtc04Mq+VCii:TKg<]GQS(7K/:TIfd%#%'-JJ%9%;Is`I<dM;Sihjo2+R>fqkT3`BY/ohZ4CfXoVro]Ue/["gFBBKFZ,X3>39W1+GJKn"[IEY79g<J+_ht\oZqH2K0a)e6/%_coq:\CCi=oM6"VV`/C6_$Sh;*2sCfZ.kPM%W8dLf,;@$FOodOk<E9iG6_^(DFXR7]W"0>S^=`Fc#)BU%^3NndZ_<[;K(9YH*paI%i-CWT-^?bbH!A^u4`3hsD[1,CH"h2$*B^/h&4W@PbrZb.GWMGB]Ur^R""tHd.Ja,I4mPhW]N;6"X=*]@NDj8s3B.*/6a,(B#G^MA%i0/9F)3.;B&"8'CoTU(pg/h0=CR-^a\hTgO?rkRjAos,I;JS+[[")4=Ip`EXY'8V"GL,A!1bp^i&`)N6p/NJ1)sE455l.PE^$bi7%jt1`QZW=\&m*B4WJC^U*a@u9Xk]>VWm!18('4nl%R[b*,8krPqGm'iCZodNm9oIjHp14E,bQ]C:R79B2N+]$^ITk3O.PA7FDf.`X%X"1X"[OL[@2$#.np4)5BQF;[X/I>Dgpc7&"c:P]M%OV'SDaC-'Pp@mAV;i9hT9iH)&SOZ0<D9C,L@B!L?^a`OB;FNS.-.'/Cm%eR%X7"EF7XqhC9m+bXeY]u$Wq]ASFW^Y6P9q\N.[*"dF)`%O:+Hco-ft/CW*m.&8Q28u4C+1Q4U+^c_u?UtSH34\O/4Z!:OpM74T-)c%kpJ`g\q</:8`PA2;/(p9QrW$J_JBe\X4Nbj.(!3reu5A/<oD9K=R,UkMsTb(S<%<;a0_Fj7UqF&hYmf,?p)Ci0+LTXVk"\Y0WKap%f$b$$/Kd@pA3sSd#pj>l:V%1i:Y_*nkOimSW+=>g,.5"1,hQc8R-84IH8DKfnkpL1!8;3U04FN^IVCeKBQ*.0l';OLF$j:2VIAj.%]"+RNl0Fd?V#.1A,&]%\f+R4%m#[WOI6r!.';2L_4UfCs7Qb71^ZfPOmh1GDLO6<l#G&]+fAuq"O5f;m8bWH2%nEc-2<h[V:3(RD%)_1ORr?`1,hFHaui^7\6?$2ZsA[<`1N,qcdMepbF,0.DC<cAm@#PJ%Br:)N/3K4\rq_E:uT]l-[%2>B,5=_hEDoLKD05OjQ($sLB%m5Y+/%suThEPL)3h4OYQ-I,mg+)0+C>j0u]9(C2O"NkqC>_/kq:K9uqd2>!#^/?mRQB5L`QCs"n+.urS`mVV]^5BH;[Kh+\(5n!Q%_?bq!8c6bC^VB-U2Ym7g`$'@*2qaboi"q4EBWLC[*E]UMJ#9AuSDc'1*d%X;7OhW/eZ^(j"9bMbqA:mM-L!G;QZU4'>Iu1USKo8!%"HrGh+AGMZK;#WO,$acj.1$g(okHgtm>fLK)Fs1hZ_lB@pXP8W7;r.'Xd"T\Nq6rqr5q.udm8jU7^I>`30?DE,:?ol9]O2!!t@#.%ArC@C1a_c(8'k7KYnq`cCD)uX$42%^<]r\'W%R9]CG(6Hm*Lgg\FpK1Xu&".4DhJu\=;Ik:E?fhk9mD8#G%JO:ARlS31bQkUa:%@%7AiA9oYGp[9V*PaGHF>1=9U]'cKmBY\#2"W=_ecjpAX=d*LWk^8$8:jQVm4XV+$3K9FI_>jP4B=,M$bWFPLUSM87bNX_pq_\]'lJ%N4^fIR4hr56_n85UgOEJ\U?U)3%/k'@HoOhgn?f:-1>Dk?1U!lV<;>PlF8Ts\9D^F;UQ(Z/@3]]QrHR1e$q5Z'5tn(GJ,n&/?Kfb%qp3+@?/sp)jSb!>ip7m5eG3NRNZIaXmWsBDi$BRKEnQOO+5&S[l4rW$]n8PNh[g&[F9>9)fA$;b/P7-AdLmo1hD_O<SKD_<3paNC%T#!6:Oq;cQBg#OFK%sLA^-dp[5tfmUI+%1uY7UR.V+ZAApR68/_k$pFBg2h5PB<6%4+A6;)u&TUVG8Cj5-t5b:$!Fp)+g&gaXJ7D%-n$u$kEJqr.<i1]0X8h::j0OT<K"LP%HJ)e%#7U#!VZ[D(O52n6+*G)dm8Hb1!@YS#,?&K(b07R6c5+X!@m,.17R^"=a<@nC:iGt%oL!EFZWbl-E>tHK[U)k;'W)VACstVO(G#9&1*"SZYV;BUl_dR\4[_-0MdlMLCciV[^8190pp5I2aB9I'I`Km^]$FA[XX^%a6;P$<%i%_2N6hUM>r*heT.roCh].:d;i$:W,`h/H,IugEl?&^1Q))1*?Y'+lV#*#[P$J<Nj%_I1oX'9m]-?:^NSs*ER[XamEj/u`SD<Z![%>cp6hbF/(lZIja2>+#S0e5GUngr8[#Pm8d^EMh]j$QROnkc:`!ERGT$ouEY2=6#Yuc%7^0%B!u??CB</e@M0Z[(Rr%XN%6BJlLDI%b<b4:DTt^dgDXk7+It8l]$`'o/@*t2>s$#"b#%3Yi;ul_:q@2>bDhq?L7)D35gV0_*@od\8$4dlSa]fsH>Q6Djita?X.WJ&:hS#!%DCt?_Tf"!?[f)drN_9D+P:]k]m]NQ`JP$K=TSh%VXAeI[@5sXIHELC7Qt;4JQ5f?1p_DCfo:P`TeK67bGl7f!nY1'BfiQKMa!]`C%>SQK%ql;[H:0W2kiG=LdH=$Y,]!jOcc#VcIZ)f!+LjO';(aT#9!rFdFHRE3f]tcTjZ32"%!Vb:4O3hd;%T1^`aOF9]0OsQfN'MK2%hEKdWCjCf<5Nq/rCGGq5&Z2)D4'uZG-_hk\heQU*[Lj'n%\jtmB^#=lmsHrWF]EF*WX1q7V#J:mBr,nUMI8sB>3E=UXdSJ!\_o<=%6EYGY-^MN#`@8!fFrB/YdNX*j9"1;do)MEC;s+<EH@O1b)_&&^BQf*\DE0"OSs,"Wgr+2i.-o@6T?2$jaL0Ot3CBdujl5!a[74G@%kuY0$EY7&uF3!3^kt-EePh0+?kB4a;Yct>AH5(:'+sL<.#H(i8Mk]1#[oW1&L[5\A2KoAMb+u-%#eHZ3\3MFq<f>3,Ng[6AFIA;g%Y+!m_S;%15V;pEDdVS.]3K8m:FFU*W'S9?u-5=sc:F<Yb&P*/6h_iE"Eb[eW!F`+>5p#8c/r67#9OOQ\`i=lC?O9tYc,.RoOtZOU%8u%0sEF]"tEd2dB3,%,<:YG\9/>&1W5@<[$Omf[DMZs9;IOdV<'5jfr@5jajWFX;aj)k5[E0cdO*O/jYcB<XFj)ukd>5U"%7]F)f%_.u0'4cE.5fkHF;Gl66I\kc3bS^-eue]W:4OR"b3rM*&a(lnnc(JrYo%tIG,QMkOfYqdhY^Z;rG=>]b.Y"s*dc.Q/D,OE_!7;hQH%s#geGH2PVllEkC7Cem`QLpr^Hcai@.r72pg^0g^_HT3FgACK$&:S\j#cca-spVZ%3`%&NS//1<Tm_o#W41n@=jM,;\0Cb/_OQ1c(%fV.WGfu)jc*J";[SebWs?cVZjrbq>&HfE5hP2CVsAo)ZZ`c0i#c9;0VG;.GoFnj-fiJW%E36_3OrCHoMqB!`o!]T4-D][3ZT'h%J%F?6N)qQ1hgIFQ";Asu?!7&drqT'j@bG4S*$E?HSsT'*Y1F8m&95En;jrF.p=iSaDURi?JO5EV_IK7s$kI+/tO`:S],8Y$MU1.]kD%`(oiEH4+6s"$Q17V7Po?+jko7V9b0RZ"PdT'JFpV$m+^5CuOGopT>3)nP`PVP:'ct,8S;&Oi,rA;jqFh^0n15OWPp7&]2.n8Y1Ss%iGsV8PfXG&6;2"9gMWRV?ZsbQM:UX7fb\pu&/G:0Gf<Ku(QY2'n!n@lpIM0/.0"I8=/qDNKkT_A!+R(;'4BXC.[%o<U.k+Po14UW%GBA)VrB>_M/#a!qi&1)<N!29(:XoKYBEOo[7ouWfO2GhI040+EU]uO%bR'?IG:.T?r/MIU'"-UpWtj:1$gjG,e:mr%-J'[,08^jr%rbqN)-2m)ukIHB62aY_YU&.r<UEd6nmQT5N(VfFq$N4ldEU`MYs""sM_DDfXo.Go%h6D\fg&1fJjVmf2X]u9WCP4SQTaC2*lH^gI%bK03jl^(9n,:$LHKBq2cmeV#`?_!RAZ8t#p$ZRiq'MqMcS46rLnWt</r_M\Tn@2#ST<g(\J]%6"EY5f+*0'%"WE8[p)(DUn=CiW]%k8\tGkEnjq(Hn<al]p8[.?-@M0JYY50*a^VnJl[rrQ'Zc?4Y.CN8tQ4=/fLd\3C97^4`OQ.8l4n2,4;UGShY7dk#VRLLriNIeI2b%]:m+)=(s-*FDe7%iZiMW?A"1$nC@SdVc&C@gF90L8I^!RK#aLq53k['_dlZaI/RJ]2-Sd6f<=`fIXoe0(lG;3B8`99]-rFeL'Qfa%s2[S`Q1pZdYK[GeebLV[MS,;m@Z=TnE8l!42N!V4'CV-(rd35paU^nNj4s=Zr>pKf78s8N;KR<3PkS\I;srr2.fccdm,s'nrJP@4%;"5c,'k"E/0;8VC\+`lkK`cq\b;EMLINI;i"ohnFF'j.%)h2L8m'iV!\pbPE^PB']XO/jl!*HVkj&>4s56t$\jhhEGeEQ\IX)L^-%'<icDAPH+jGq""1H`(!bdo52ci(X'%iUrWIc]dg[K9PO)B^F"sT;UkiVd/ilZlhS-jkd>!eNt7e]\e;VW:/p6a8&rB3PX^`VmnPH%0kg@(8tGT<=Y7=7-6<YX)hjD&elo]8l0KileUg"3psI>b27f8%^R[P.V;Si[%(*FJqDS1+O5BpgqOT;7`EMc;TY1%/^P,Q%j;n&5%"Ta0AJ5+25n+[6=q_"$aEp!bFU(.]Vd_in'IYq_K]"tFcS.<,!Gr0&&BQ+dqMud?1e&2gFTL/H$Bp4,,=^`lFD)7$u+e+VF%qXGp%4?St.A)5n;Zc4/1\iGKe:H:Qe1&BgD<h\O3V2b\3Sr\GD"j1UUUF]e-/sQ%WY.>1AAPfWc^5>6.(oZ6g.AP835Ru4<qigLWjrB&"%E==aHEO-p8#37]HUAWO1-XmIj/iJ[I^_W!F\pdZuX"4kk5<r>PLdgH`.A;hj2eUXnP,Oa,FE<`SW)Ci%CNr@hVh-U_7OP!B\ka1G%;?W%'^!C)3d8nH#We>O$,3]T%YS%[R+OOsq!;&sB;14XN6-iUYohp7T,ek^*ds+PlGjQLqL7a1-fFT]m4C(W8/BJ0A88'Edi<c2l%OI6<ENNQVJGC<[7Q*Z%u20es>N8@s<E[.fRTCqdPfgE@;$cg)@;8%-6WEB&M*dB<V62#3jk-NEaIERp;KAV)db&m%S5J+-1BCp(3%j:6r$&;qD.)EcC+B.S-u>ec2\d'I?E%+,iuS%T76;h_FNeRPjbqp"FSP^i#\Y"$B"[eVD\_1Nb?IqU'm#`]qRkLB"g0_SfoS"D$N%6;J/GhG-\6k]J(&7%'DpDPZmkcXJP4WbT6_nruo4.?-$e(\XA8kX%5A'*4dUMJZ;0o([jIB+"_-3I!,6:7PTQkKp`S;Z^m.J(u;/%E=nW^:MI`)`'n>`H[RB!`mE4+aD?Z\?O'bfOrVK<Wk8NprdjDXh4Ni7)lq@X"82[qA:Xhs-(_,#(Me:>!!kpYr+5RNSA4^2bcj0&%SQ9FOJkl/E"LEMGW5XZBhdT5')akHtE&.61UT/Q#XC(-/2`4ueOA<Z_g-G"V$:<'t+G<_qW8r`Nk7dRg4atZU?Q<a_;613(4V4g?%6^6*a^i.V'A[9c[V'60"\IiZ6-:g-*&.MR[22Bij]`%Y!GHQrF9_QJmOsANCE"@a^i0FNEbi<*?nFc-@_gpY$Pgt8?_fXo]qt\'2%"9O^D%o*k$1^XXto)n-rV`dkESP"*UL(mgg;aZKpjNE=TkI:jf/AJoPGKZi1*2JbfVgae^Z_Df'VkhtETB7d[Z563uiTFGekkr8h%]0(#gU0(WFE;.W"1`l*aiaCWWT^%a9YVL(f,SOcm.S[F^NS3>n=gFQ_Uot^iI<Kgn&KFWf#Oa(P.o7=e_MJbGA!4%X\Tsd@UGl,D%@1Af7F/adq9RUm)rPn^p*/g)V=_['+=q6=^*2oo"Li9$D&Qks3Eqq<Jqa*)MZ\Rr";>0E5ZCh,R2#C\Y;W!kfFkV*aJPhCA:SmPB%iNYh3nWbl*V^fFc@.'hW&T[d$!hqg$1APLhUnb9gl3;j9(IGt.8"i07$Ri%eHNO5@oNO"8F:mX#^g?lQE\#S]dZm.9LqBJIV!f:6%5P/nLbLIZt/m62hg3L0[rCKEmjpUTBS:4-H$e8NlN+-:(-;G0S,^X]Y`2@tNq`U?BeVchE(r)dGBQJj_%Zd5i4MOJ%PhoaF:GDQ>%?hQGY)H8<>QcaNFFbMtC:a1%6CsH[mSTsK?I2K&jT5a-Lg["\`GY6uOfq`>hh5$rnaHh.Kf1,WHI$4Z.E'?Ub:5!r=EP^-NW5#qi%nHEIqlu)Odph%9co$`*2o=+Jagh$9?1O!s^.>,;..kb@\5^+NfX$R6;;5/=+<"C3disKu2m<mQn)LV+%J$3"(gYI?-IK7(P_rP.2%GT$toZ#c\_55$6cr<(u7eBYnN?Lu>A.0i?7C0HLJKb(kB6YeQ)bJ.Y-pLZ2rEugSAdjNB)AVg-Pr,k,6GSKXE-Vp!p)2)a3EJF2R%qr8pW%pY]W9,Gj<M\"@Be^P$+pkZt?n1oH=G3X/g(=,&I%9&UGhJ6eTo4[C[c\$Zq3e!kj1\,Xjad6?a5I5;/p%qcHbQ8UJ:;N6d%I1]!3=LbOKc3q,%-Jji.0-oEg\BVciYfPL)STcK7U>eGp]8=Rh2aAqF+:dsF'83.ODtU=oXRhko/2-#KY-7WJHlj1$4*s(D2V6$0%1+-Q^*^]1ER'&139N#LF#s-[/QYP3+r'^"!b9K(WAu/UENc];"-ba]KM]\qm7-Us8gGdM9odp?M_=#'%jMkPd0Mp!7/?6=8s*WB%%%tco,d;_b?878P:,W3Z.Y&e(;$G2:9`K/1k=Ce-UjO%"PbD"`pB=X-&]W1B?d3lJ(@Z[qaOpcbPDm)r?jhp(O2]C&]]0"^<?10S=%S4IQX0=cn8`.Z!PXal<^^>."u\9UOlLR$iO:F%/cWaK1_*tKFBKjm>FQDQ')IgOp#]q<":\=W"oB8"`Z0n.Z4A^fi"".aKC5H]^2%nu*[L]r9reRq(`fqEJBd%-.p-'48H)GD4O0:/?mb@pZ7N:8c'E]3IB*mJ1[N(E\+t5E-)da=ilA@(li+aAY-mK:qBe5IbI[M;lR`%"Ml/PnY;;`PNg8;`F&>hZI81,XS=N9iYDrl!iu,76@1fgjhf%mX,2lW^ED])7#>%*@[6]U^\\__&&*pdN5#TM7S4d`fZrmE<!@VF%%\@e2:iQ5hFMrU4GPI%^Km?&o!0ph22B3,OH0O5s]V<PmY!M5R#d]Qsfu)$E="fJh)[*ou'07U@e**Qg\`$.@5$#9`MLo0QJihqB%^6Y1&9:N:eY)c0qIKZ$JnW3pZ!]dN2<e`JV\B'YN+$jZn5l"U3%R^l@-gEL9(1G%B?LRbr8ZI@/ah$+Z^7'GIAg#%DUE%5mQS3oh%hPjE96/mgUlJu%2*$$8Z:*>KpH,pKc`hDa)7#k"a:Nb.fX7MJrMV1-49#qs>!nplj_fMV,Y0sS96V3iJ4p>q,%8lr[E:RlRi&)S)%RI,0s9cXH1*kVnY+:iM1<Y+Rim%V`C.X*bQc\g,iDccIn#'4q:HM`<!m$Bap_@&ae5,hdZ?<,7q`c(OMNW\BqO.ZB!#i!)tbnm\T%!7!i>Qf<7p!K2S+EH#!:1]e73i+pQ9?fhd8YdOe(bAf&V*l!U0/pfQ/L\*d?)-G?omZ7_S(=#RPGAL)"RH\3R;i[M&d?KZCQ_=Wu%Tq!M,]BM]9TiF.=hhDF<FJLV7MYEa>>d?,UTrmcc3HuIS/^QF@dt:tQrs.\6("-U;r;L(W''\K;:=#jjkIG,Mnu4DO=Q)GM[]89O%NN%PkGu$2rhJp&md(Q,j$tH1)pk<'9eHCB6=Y=>OJ]XDQlgAfm'l_NXl%%cD1LQh:#5jV$ZWo;TKm!2"O7ZO.F-\lYS[ViZ(>hCf%TjV=_0LqmESf;d`_X5UkD,NJK<"!&/h&R2<m:6_\g"0]8G.=;b(7SY5J#qGZ04bZ#DSYWR0-_/ErU#-$IiO!`rKuZKLA[T.$+K?/%e'S%gZ$+7kg[F8P7]SiY6k'>'6n7\iZ'#_T^Z!XNVpH=r_u2u96"d1^9%?n@P'T#+#.SmlYMXOM'QAc4#HuXhn4QLQJE8j3:[/RE%bf,%l-s,\cS6tIIMP&\I!1%>beKlM5QU]o0'GJDKW3u+)aabe^Wg)pp44i`gfCllTr\FL?B,/!*!Mm&n_8U`Qbn#\_n'Y^DrFc4O%%-4V3b.0$p,bLbaJ45q*)H:>1'^J<W.JT5(3O&C3NcsgehGsRP4&`7d^HpMQ"Nm+SpSHI<,Q\?3:5_'7Of";g`5K6^o>;Dn?$T+M%h]N*sNo0pRLd].qjhl+Ol:cJGEMi:P07u(!%#;^E75k6&HP89VmU--+j]t0`X<+/#2/p3hd_T;Koa3;/ouj]$bBH'elCMgB\X!Cj%I!dK2PF4pVfL"sUJ!o%)o%\=4LuS*'CRMRG<#L!2IcP-_S@@%ProN`h3EXHPF,aAu%NVM4"8`45-@D7-_Rb-UV1?Zilf#M-9''OZ%Og,#9c5tIRi&srbqr4UDK/07K0>ULG.gJmU=ftegNKY!Yb[7!M:\S4kT=O:I1oq(>^l&)`kV[1pS15?G/5%0%P!DHQY9,(+;U3kX%Y0h'N%\rW)],\KW"i\+Qo`Gs6YRn&ED0Qd[a=l*L_Hm),cEU96b_9Lefm3+/pN_gMWYXJe6'$0`%[S!;S[a-O@S[Pb?MAo)6)iZT%nt:j;;R5iV$W/!aZ*VC%o.Q/hn0p<X`o'P)KVL5ib8<qNI1FL#)=c0<qZK,]YV)'d=X40BGQ&PWE\[ke&A%h4N*?*i4SVsq?f!S=%Fu<KRp!2^;=ar3njc$$M#E/7[g0G0-n+`YFIcUD*W&.1nk.uiQoIZA!m33GI?&Tc\[M)UaEYaKOJ'D*f)oE\&VHNT.V>;-[E53N%%cgp!R<!Ln/X.pI$pbV26:h<_FQS69XO*n3#!!7RU,VqFPL!Cc=^?AW?*kd'AI?Afdl&2.h(O\%'N1gkS%mc/GpD$#]gm"4Y^#FqP%m^VeY@Im&K$,5lS,>NIAZX2?aWqt9sGl3_h3GR`OPOm7>/N(cuX+toho(\?Z/P49L<:R6kE*YZM*Hc%7/4MB1G4.1aLkW#4?X9n*%/t#P+Xf(lC@LJal;b9$;?3?AS$'jG;A/a1CVTJDqQ?aJ]p8RIDNA3@KYgNn:4TsEZGpH>YmGj&`FX[g[M.s94-%?H>iQoXXhL6jk%OZlDkB?upq81W[MT0@O[>9\LO3sR_"KN:GioP52V2:=j!:n#g]aVsCIrQOX_l*,olj4DXQ"4=HB%9!0UfEsa*XH@N6pJdOfT33Ao%.<iURf`N&XghNukq>.7-K2gLr?Slga4/D=EAbY^a6]-r%Wb<ofCuD*0^UGKXo63ihO^8.l-M"GIZXFXp"^Z#3N,/7iSG^6oSg1V9%`Dqm^ECXYq#U&6K$`ruH=LLZ@%i[Sd%B7@h"DpeXh=og\+>%ej;*\M@O\TsNX<#_=:i-(%0XdS=iD+>1&GIJ$Usf13p4n7?:G5a>%WH,#'d?"DFj/VN)Dl!POUtiiq<IUoR=jD,e4?`0E'":RcU_"MIU@WGq\I,s"hIj9*1K.XIRSGL/&CU%LGq[A"@km:2"/Oqpj#>;l%0'46dU^s`'$)u:Q%rM^%dds,JR-A+HW]ubn/#46dFJnss'aM@;!_-rpH5;hC[Rd`W[mJ@Eku3CQVL)7#'_.QI^pVg9XkScZ/<MjJ%NXorgSj-:Po2\DEk3&<Ce8=,-Bh@6RqX2#lg$U1=Ol"[RYq=Cn8tn)Z83ME[\^m_6$(J=g$N@j,h0[E[l.p>@CkWRF1.(m3QCH^`%&GVZg?5hE=CS^-QcgUbj@Fu4Wb:J+!OWs\.37jd\aSrjndPCK=q0Qe7[#keh:Ut2UKG5_?&DGQV9X#[ZZKf%`Vs4D!CM-[&$I,h4%^O+rOd`@$e1j0BrYO`iT_uT1eA=i+6phESo3_4s!Q=caM46J=r-BJO7NC`*Xo^d/@+cU2,!K4$%l>b_QY##=ug$+)<Hlf0kdc4^a%C*Ki7=)J-Hd[+,5e3Mm;:#qsn"Kj7ARoiXD2fq`pmsbGfo%]1'l5tdlV!6(4EMh9U]RTqm,@upSl?/%"@3K^JI@B`oV[J0B=s3<[%C4GDqG'O-[R0Dt/jk?K!Ln?i;I[X&a:4B^P5G)+CT=93'eB)cBB(Ij@Tj-!(?)sm-!p-B,TAM/nVcF_5g4fU0]LSa[$Z*.JrL,.3%bj+F`&fWK(hXjcQrT\3bUbe(+p"Lkk^22i4FD:>gG#17\h47_6X\g_mIm"G'k;LY?\+=EJ*jBonqm]1T[kZ((an&#+Z(t(CJmrk;%:L2/ri_s:cVY*p2fK;;*hA-UiZDONL`Tm9gh4E-BgUpgO^(l=eBBuI.\aoJlL^dKO4hh&Vr&oHY7;SRQJ,cb%"Cq&qkB@mboTId$%+'pRQX&b1lCI,4ln<;#NMf6B/hCABKib@_M3SK=IANPeBma'(_SOUs%m18LD/+@tmA,4W(GM0Y=qTb/(Sk@GYgSMs:AhSd&oK9k_%SB7B[0(V<kl%0P2Ec40@hb0VUq/lV-%Yjq;^3BKsJR\-H-kst`Kj39cR7ZU]U.0MDXJ@VNlJ=JN?<$UrU7d6QU/bm(O">\;g&^T!%(9d.RdG%`Y/)Rqi^>Mq'NdeT*nRoZSX1a';F?^>YCRLsf!(PG]@XK*V`*%*pJ8k.0Ne8>l-%-c5BQk-gUNQo*]U][g3sh\=P]iG0%d7$_=G4rq%':d`eOnq<@+i-p#mqSN)qg,VSkh.$A:AHbZMj,^SKn^%7@2GZ6&UX#ETf!s@G]c8TnaZ<D.i%;77EQhC6AII%h>J)N%cO/+Ccq*(24]8GnV^LqEp.C+I]>)+]+U'D%_jb]VXbjiLgEtKB\VCE:Uc[[6arls=ZoE655ml!b`"$WGUb,fHa;_<ZC"p1-O2Me_%njdTaa;`Zk'(<[sf9:X3WmXc62)'@SS%K<qo<,-CNSU0tp2,-D1lcr9qFU:fJR><,d%"*Qq0mX+&m]`D)N<atdrWD)n65qhIj^U;%$>!4oY;ED4`b/0Ea"aD`hr+DDMCZ7$Q!U%7p-ChGSdP%u>??(eBR62:"M<:JX:_,O-bamq5PhXc+pa[d>]R7X`q*0*_tiaVlGO;H%RbGqq8q,S,d#=F./LRiGSM0\dPqMWLe_C<:R6'I.If':&K-AU'8(LLL:lJr=CfNtj*Si5)(\$TOZ<ZuT`eWZpIS`tlTM.^>HZW-_%K@#hCCG6H^<M2.d@c:R?^7=E^a-Ah8\!Z&-?)q2Scf<X'&H?G"(Tg_7><hiVpA/UYqF/_@IR3K8ij$H?_IsIscGXb<I[0%$k->W)%*.Zl!1V:]rK&&:n;'1AHHafNAnWc^$4_Kc=em>#\''8NET$THBA'29Yc?/e?&^-tr*hjmcl7"k4-@,g[m#A$cj'TA9Y9gdP19IJt%=DIt=CAY;8Ags"AkJk_c4BT'_d>oZ'dWL+a,nrYsXOO\l</,4e`pOksl75TRBZ17VT6HWcHCr9?h*@oFlg702Q(H#)ZO6*[=]qfQ%LZlZi-C.?H7`1I^MfFB(;8pntk>^mo^2NYoouiT!4TAlrW;5NI#kO/g52'0(99j4c3_k\p!%Z![>QD)7"]B!S_.MEFfIV6KSbfMt%\T=&tbfQumg<!qYUSTC7+g2VDZ=]"Q]487=aAXiH./G*&6(Gm%i/Q=5)/[P9M6Cp[a>>Nnam!0%OYOUEr\8P14iqA$B]4Z5Qc-+p%PSk_oVBpf&D^7hYlW3[XO?[n#.,,T9ANll?(V:EW<n3TaO+5.A*@0gKHV`4u%teftS;Ds^QWQ;Ee;f0`eAgOcV#u*P]66Qab-LJZ%"`7O+=inD&"-,R[@0N".FRIaV;G@n,E:P?k\q*o(H!DE*>@>Y6%]=:ap;A[>4.]f-P+#I]"c=0Tm=l<2C:'6T->0bt7Uu#`%l%SP%>",/`>2;9k`esBcBKWWF'$[+kBW^s[B@YSHp@oFDChmCOC6$4kONPm!o.nYD<X=r3DXQLVcAqiAD<+68Fm?IIqg^T1Dn/-(b/KFr%1kNtW1/gmrfZB&0ATA.J9EQH0P3#N+B`U-p1&I8Pd:AZt.g&XXAFQB]Q6n)2s2M/VPERRm28sDl6h6hgS)dZIe98&U>7H-X;WEGs%n5`Rd+#X0%@G$V-O?EN-#.:<0:jG_^Eo/6K;?/DcrDhm+g\Dkf0@-.[mVthji_8qY>idaMT"I8=a1P*\kj:&=#ipUjh*C=bF0<tE%-N?9'53SOB(]<N#^4O=l>7n=RHfQR]&W>Os=;/BjGX%Xb"<?Y\qK2-Ll<^&f3].;T?&$9HQN2L*T(?W3rV)!S$+lNnM1T;)Z&=k5%WTLrGS@j0:"@*+GVDjV![l-RN$YF[DoZ#3+eXI':4FWciK\Hg(c<]Mp4A2u%lsAtDF%[?SZ=#5%dOI6g]6k&aa"C_/jCFh<1h7M`%Xu&2.9Gq.#Rb<ra'&V_niCqF1OM9LUPBMgJ7`JrQ-ah/32UH>>1R^V\(lPM,#h,,EOI)Eh#-Pf*kt<+I9(jdebso%[2h'>sKKRPM%?8EJ4[1pEP#$=RmDEYir-OW(qVU!2J7FVoNZU:`G9DgN>W=&kS`q(-'X8Ad#gc8#uOcr';DnJ;cP4(-SS/6?;h<(aLY_3s@+["nW%DahI?9m(IWl`of(6XIa4k$[b%H[O#q(^%kp7\f@-@lPE#+GTH'cIqN*ng\TZ[!TB/hZB0bLN"OaC=jWH(:cF\LQn`S><<7<+5(1D%ekWlNZ.a'kf^J@`3>)#;/kN$`5<XIrpfu?_@1/'<ZarW4bE.6jCdFgj#NjiWpE$sN0`+Qd`E'S*5siASbrqm)KF#hn9kF@E8u&L3%q_tQk1ooC8L9nE[]@kKd.u*Y-]60F9HF'(DAfm(NAuf?BYQN$+Ji7Ec>5K_JD^c2C!!.$cCc^)-p>CR]1KX=[[Xkg_/U:Gn.j_6.%i)`j`!,NArMe1dHbs"g%5Q+t*k)[;2kOEKWTV*M7&U,.*.3,Z=\'esZa+jqjNK6>4.$gI_im.F!3;/MFl]PK?-=C43B)S69@8tNX%(p2cQ-N:]08Y:L;/_ho:6P7l^"/b@gjjjun\Hs?pD4r,Y!+6c/>RI]%]tM[mf\PgA/P@U;[u#TQJ0NabNNCd'Q%*]U`T(;4a-AN(%[Y9TnC$hEFRoi%A/OW+GUREd!Yq2Dn=mJ$[Rf0pb/_"U5rpZ.q%)^X4J8r9VL8+rN@]=Ip=J0&1M+?gIdoCKF!-9HJ/j*D>`@oCa%39jZl`C><c.nR+ED+&L7;U1hV:I,[kIV_'TZdJ?eO40MPA1aU1P?j!2aY:[cbgM-G=gH:"gDZs_e0.Ah3Or`Dmm!2cdbBo4KlB='%T"c@,a$ss-]G1FrYM$;Hen(]6)[(!>RYdA/bY::SDJ-bpP),;2a);uLfshlQGf&G//T:hRTdoY%_Sr1<d_ZL2V-7Ci#Ga?gjA<>i%55hrnJld;n0Db@t7$Vb7?S!(AZ`9\ippX0hk?L<^:bf=h%@qPD*Jn)]YG$$?TQ@+K>c!2#\Ur+//\$6=ST=t*a1n/`3p-i2;mkQ;%20@+YF<:I*C?V0<kj[hs/_&--pVYNW>H"6:Y+X6ViAR[/F0;1"rNYHAFN+F)p(_0Q.rX24%(q!7;"f+0+k^FQ0D;5R#IfcJ5o92l%3j3J>PI25(92:/Och%:0/lju*DSO59&[4K6[M#,HX)&PIRY>#_K10#j;2fjL%`"eXcOYB,b:Dc2cS*"+?<e0"[$e7J8G8=09@@2X%6Wu%/6eTj%MrrgZRYRh:X:8fh<\'hHi@"toICmB>YGLXQc&o?-QGl7m:!M(.=&7X'/TrqAKNp)`W7[G21WE%lS+X4L3D*IYm'bJB%&>QZ:_DpoJl9j$s@0cq2<\k<!^EPAl&M/`@.hUg%:"^5E>?!ete6/oEHflU`\tIYbpkIbEJsL839NN\uQ0\5#Q7sqPmE8OWffFW,%S2slG3/fDc8\,Y;!i#@2X9M8n_LAO80RQp;[LVY<k3PjE;TItuklTK"m(*qd'?9l)='F%p^,.Dt4$L%iP(P9%Q%=]Vfq3gsQd4.X%V=p4GJR>+2DrghuJ__(+pm0LLfJA/RL0"T1*,UJ;[%.a)b*5nV)6M&9'RO.![B)bNqlPsF-Rii<FX^orr//q>6)RjtC@]Er$m7a7%9+)SJ;7FeS3n2?@[=oV$:#X`*5$l_!`tIX.*UgNE@Q\O[]nOt=6a14pN<gm2Yd;(N#ZQOi)7A\'=)FdNBVI/F>B>K6G=Lq/*r?SZ%jg)Xk*;3Tq-FUB0L@2Y\bK/Z'\Q#+aH(ocT`18!l]M.("UE=ceX=BN8$ouo8.$Zuk<RMWjTp"Ca3>T\=BH?u-.'"(bb9)?[q;%o"%<.E,X::$TtEHNn?$[@sGat91.]/W7q:b(g:Z,!Zf385UElB+q(gI`>$LEWq'=YZf]4*MR1AZ+!_'ZE'@ao(OdA,::^b/gf6WQC<j%c:pdjR',gmIS0"W77Kc&j'*-Sr1%YfOYP]M5h?(,:X((.URggl?\Z"87`M0+0_N'G!Fbq1/QAOK=.cro7`He$NsN)YUqOt2*2&;L%MNckeP/tob$I.%d^?+Oth)NTAg,<[YO)J^p'*E+R%?cFGD'u<8Ve1'lenC3%PbB+O<^.jBZ7hE1X.p%qbK!:H([S.*QdsWgG*^PH%KPJd!Gs1?%3mGZ)<XLKE+G,O;lp"CEk@Ad,o`4T$^iXB5g4ITtZA>4G/H*<G2X98BH'fmlnVuknf(o<tlLf,IVkCM)&%Bpm<S-n_%92;F'W?)Q8jGbI)=Zr;:(I;oa#Hh8AB0Hd$D#\@]*mWcWUBoM<leu)r-"%,RE4U2>+6hO#4e+qlB!\Ul1+DO,d$a1<b0CFVqFm^L%'>sOXV409'$`>9$PPpuqbNk9'Ed8:<.3,7L_6/!,&KFa=]ZOneIgj6J[)S\&=cAiPcbM3cBK(qX1%T['=nWlTcseL9Q*<7biY[>F%^&?!_dVC?J;2puVF,+'&G&&`k2L<SJ$qnnWCQt$O]Q'V=(<#]NZB_To@lR4mkUq2#E&J7p4VSIE%DR$Qi7RLr>CTAjp6[]=B)KTk%ZEKtd5qRJd&^<"=b$h!PV671(5cq(X^"Z"FlLXH[.oHE#p*rt4J%&7:9(29(W(:dmS40!B\>r.(3#h*V?+lW+YDOkONFhmlC.50"%cTpe`@dA)`=?miiR_%c-,P4EqF>19KL?[WZKlEC1P"XbMp"3;<iK-:4oL+a[P&$<!fr`G@9AqeO>IlG@>:m!_[hR-[%AGfG5>hi$%R8qmc.@a[mb[l/+p=#!N0RZ1=U%$0K5[q,S_OLM/LTPu$%2GB^l!rmp&%Y:S,@JM%O`00q[&:p)%'R+M@&ugN`"T;^E#aljTIR^1%*1\./MrJ?tOBcgZ/j!fV*omaV-+PnYP+<?>%ptDIIQW%7`Q.Od1RjcnlQtfgkj@TF31rG669]C8=5<262N,V<k4R-s4X.[[Pmcdn%.$X1mb?ZHVfdRQ+&>sktq;bb<@^kr=I4Z3afYKY+9!R.=mDFWAI:Xf-bG5MA%sGp0pU4(7k[m$4Tu%:HX)3JgfL;-A^Xs:5/ZGtD%YkCW8[G&&[dA>QhG-tEq@tgJQf^49'F@_B;@/-a9'rear%:,&U[&^Fk64O`R469Mu(+E7d*F@A@7JH?J\b"gm?*W.R;mG)K@#q[8%\bi<K?+>sAhrp]?m#YO6OS?D2CPro!=K-C@2Ql<dq-\dERs^^]4FEB4eW2:YVLCp>bWVs"E'!.`@O++.Pr-qrF+3&kNi3^>"Y:'s%_<K2BdNc55%i37/LQ$RJ72H3!gm.RQRD,]+ae`@iT+YKjF(IS7_NOMdcK@=>k]LZ"a][FEBDG8eNGan`0akJ[dBg6]+ibWg[H'F/%`cHQgQcLa=f=.SLjD=!lF75UAZareb[.LL%f0jh&Pg]%Q[Is!LF"]3,A`(\?3pu;$!kMs2hUS[kf$2+6<_[3A#A@8MD,o%fe^@TM%+(g^O3iedDKtM5(9kRI![mB-9$JX4A-gfNgVDF@R>[+n<C-!kA9>;%DE]'Cf;")[RY>S)-[83R(Q!:8cZ`9iXm>PkTRa*D/@f.k6%2QH#CEp['&\uf^.L[SJbZ'rt<QHj_uF;rbP<^n%3r`6)aXG19bZLR)-FB7_jnZV#F\u;L4>!L3Z:`EE`/V7/PVskVTFS<H12QQ(C%U=e2MFGlg=\(%il9t)ao<i`+(MQf3IYGSW-J8;3p>"rW5^pE]K3ih)"Ker3;=4:=&d[?l^c)^*1b/]H&,MT/oZ`9iXgR$0cl)]\L%\1MJHeT<Dn\[G=/B2qUfE$+!"!T7t%.,b0QFMHJk&f8GsJXFbOGDj'ng_E#`eeZ39f_0`9<^Up"0%RV;cI'7C8#N1BgDZGYV38Aa%r5=;!iJn)!1T`pY[d)Ol:l@\]V$^J`0"2HX=Ug4XmPo2`:[aTE<X1(D1lMO-H>]S2:s!:-Lb/7kInktM_;^ii6Y9)+`U#7h>G5ZR%qO0M+GHT`3jJuX/B<P`=?0i*6^#mV6P07,SSZ?[\4.f<70=onW6DnmtfVZV>0!;a+P>OGJrOO**N2"3YGA_/\$;T4..CF)pS--4E%$F.W1O^5"JYOnBd8Sr6c(<>Z4=2hAdO!qiod_UoYGpYCMB/+p$e[)%%Klftj.p1)h2>KB7((0;lT)J>lW\CeE`8S-S%1u(^as"'Z%D<fHka_l"K_E)_BT'51Sf$IQL)p3'5#F2@/f=4YnHlB#q^!fg&D4ZJs\i^G0jC%SuO'CRI;Y_0`GUinaZ2GZPa1iO_oh:r#9#>O*%Ps>bsUq?"DKpSFu_SDHReiMU%DD&"j5>eMGSF6B=Z^#_6<Bp\g0O)Z:ZhO8-0ZMYbE1QC%-09>(Ca,^6qd(;5#ir+AbU9?_c$W+3%P"=C%%/%k;Y.MSGH!@ns&D>4.<G^NPD$q4^Oo=O[eO;jK.j#;=S%98e`NKuZ[9JXLXB*Y]F-"kg-]6NHQ2.#i'eeQ$$&EXG_hpOg%aS-#p'J]f?QWBun'Z5oJ\C9^nXm`c(9+2VS\6K!il;_`3F7@3>*I$8:Hn7aqFAq$/nSrtUhH&p)m-_AfGug6'p0O[jEc]XhauA*-%\aMDeR)<*V_k#PcR\N5">:Jp%O)*B<YO2d6><?arC109n$Yrs.D9J/pM]gMGq7)-qg?2hDlLn5mF%,#gRa&/77KgN[6=DHtU)\8q%Nl@=%Z2ZGHrb.;ZRuk'i9Qr#;[p)Dq`4.>o*f=*ViVgcA/`"*Yp)fST\,e4>R,0)eXC\bJ9?W\<.`0tpmCIGF%G^D25)c>%b'R3(%C,\RTDiuPm?U(\]Kq<1?R++3O(DR`_o[[>'YN-O`MU]/j1+$(_@3H[J3JIf4+hkm\\9&-$C`PljmUF]bfDPT6m?\_B^KF@Hcu*&"%[NmDE]442VB"k$[blfd'AXT&na+meW^Thm%_=;EZc*)J1:U/#_<V="0UHLSc@EMRBlr<#F8M?>W^W!;D.:m,)Jg;AcISunaI4RR,%r5H_I_fbLS,\;$siVKpCO*:qbI%l@UEAf2%iUIG<_iqE"VL-s5-Gq43H8ps-'rO2T>]b1X^<j3LTcPh,ctV,IiUL8`s.OA4f?)$a%/c48:kt\dYYXM0LYOe)]83MEB&"C:*b`)2Ml'f4d8r(nu,pl@8Of9sW@D:rc]DnlQf[Tof"Dpf\V"m)h=bI"o_ZW.cpsInXB.CeT%h6(C\l'#'-h[a5<_4#0>`n/hN8GDG`YHAnoSeY/bhRDSAjh36sWRCT@`<L%^C:Lq'N:[`-eQLs=/=Q,0n8E=ZApRnYXns-kp63g+%/%D5;XrqbY$dqg/PBF^Yku7ep4<H32rT'=nc<=@4Vdko&noZtA/S=li\*(f%D"CTQ\?E]XaH5&@,lP:p&ugD#(t;/J@I+>jO<30)%dAj+=mD18^%b=&qkosM!K'$P,XDVWq.^!s%b+SgZr8l&nX4!<)d$2km]&KWmM)j0NgJ_A=aQBcO)-PET?<e0"r@'=g:Ne2k[*KDh%-nc(n['F4)Me?OZl7+u(fXuZhlL)j&Y2jW$Y$Ob=[kAbBYkYhM>PW#=$*F2mWf^U\>M/%gWBG0k++#SViOb)Rk#P^;.t6)rc-3Kh%ltC)P+/)+\J8X\lQ:<G3R/JHc2u,2WToh5h2HS/3G3[@oG,o'*b^<VLZAWh/b@GSFp<4N09lP0%SUjmUp)goP9%dX13F+.f^C4O1%5YtV_eHN9D@N1/J.h9R=[6h1[D#'VNXp`?Xc/1P.<d3XDX(BSG+WIHjBsIX`E7D5mc@H@A>X,$<F%RC9!ZLaFALXPA4'2-PJ/bV_%U!=j$F;rsQ1YfuEG(1`E#oDVW<nBA4>C-,6.MQ*5^Q87`1>ATA]1n0&[_N[$KbqEi9jZDM!d%WKBKjhW7Y-qbcr9b?L)l)HA]Lrg%!7C)8?Nk+L5J%h!h$MUhWW8T*3#;5,euSp0Z&3CO\TeV8DM:!Z;3+Oih't\-OuUqk0%="VP%0[polMqZ)HD=]6Sddr9`()c4:AJN%Gu#qtb.#fYChmD#B=oh^5BSEI<E<Q*Qgu`CO_l&(nrXbLYT5dX?HS%I&m)[GDiIEcXKlg"^Qd(7IcRV:b3/Ktapfub1Lq6IT^(==%c(Gt6Y"F=`DY;c(\"V0^ITrf4g=j$02S7Se3&Pbcdi,-$/ar@Rc3d_(=KQ_LT8>'m\,*6(D(,"hIa2(>gIQ_2Hi7b]8A<X#mb:R=%hWs?^P;g5-chV+-/p"GJ]m_R`\[HI\+0">,9BW>KA]&lnS>Wf?J)u"NqDmHu\(2!2(AIYc:WWBclK\-?=Y>p0=3]@,f?a92RE`46%NRVrPIUlZ1V"=F@]%>9]d,A9%/_o[TI&l.^?_F^<f?ZJ,[5eE(o"BKQVl$h*rAMBND[SGkmdKgiL4WKV$hsKXDlDkpFDl9)T6&tm%77HKFp\J$2W$o.OR;QY>qd.%V@rV9KrKM@qCR:s?p\Hm#1QTY$Xa@7DjZ\[h6BEU0o6^G+%pU&(;V/\8cVVBaE3%m5GHTN0f?]k8%b)L5,hWs>QCH%'5[rJUDoBu)Tp[N+i'bB>QI%/_N=PrDQH8UKN]me72`:g*G=1d)1fomd@n!i5#kBs>fG,iuVS^6g#[r\aFo7"%A%'Z%BTqDmHu\&!K?.icuV\rUdiO6NUPqJG=X^88*AMm#&jhWqYn<I?,&Ze<$@$cNm9>Q*'/TagJ`;q]@b<kidWdT1R5CjBj9Hi9Ji%SEF78pU>1Hh_sb+Qf%,lY3pG]Hi6nl0(28:mp<cZc<ON-laM<t]R$WNiI5>9Y0tHM:JSCq3IKq)V0i/WoU+tL/6K/7n+C`ckd6FM%>4Z&b]CIq!)9(C_4Jd\uUiPLBrDnh,f=fe^TXYbTp"SR"T`/7^B9)Jk9_'gJf?`,)<-Js6][tK?+BGhiS)*DnI&iln5IT.VISNWL%nR8kGYFf#@B!Zj_N%8VVe^(M3G(k;AS;kFL.SeUiqDfK"fi(4AQ15%L;!/gQ9^KXUM%A'ZV:`K2+@5A.0"$U]0l=n_q;ArkCsf'!%\EK2tpL`;*p;%i!apT_3og03p-D6Sg-2#Ato*HU?&`sHbL$$*O,&e<1l`!%D;gg,ebV\JjInH&aQp8:1hOX0s?AM:i:(lT4.o>UZ%;rQc7]uM/NaXlMrQ*1f^&$J<GYBdT]oFFF9HD(!iM0]"cZi9hK%_D>Zm,7j?X4D'`;WlBVhqKJ@WI6V<0)NPU9&aZ9qc4",hqe^&%d.[YBh>"O:*.1F(O4fr^D[$<,`:!GE`k?B/:[NQNKHBHMgINf7(<l^ErR?trqaX(H3_j&W_Cq01+-UUO,6o5A99lL:$rt$U.oV_h%nMsT`S:=+.s#;@M^G:@S+F;m6'DKV6QC6W.j=#<QKU0Q3bMK2GXnX5;5>QKc<&T&g$;"P?>[NqfcAI\E>ePNL46gK\5a$Hs"8Uh)%CLR`eY5*4H#C`tC*=:oC]CT4EC9D*EoCr#dGi+"#Z'RQik5?+@b%]eIH#gj"p<SDJ=r[mmoN[91p&/f:Mb&-);a-'6V#Ca@1+M4p%!n5SZN:KrpMpK"bBZR;"G='Tak-_1&ejiMk@klmB`YgR;kq<!_Rn_,D`CPl%-h8R\RYA2Ve*P-"om*\i]Uq\lr6]LE[<L.Q]U\Cj%nP#AK6_m,g)Xj\:.X+2N>;/s6qWHsJp#LcY]qu<'r^+AbT[DbX8tEe:MFuY7@a&&a)l41Lh\`ZhHg!jc%)!)So4U6oO)K4$(p'Id%G69fAU(TR)_LDX+Z=EYc*Pm6bY;T\b6:2O+#lqnM'`Z2@*?Mq]ha1*rlJjc!R6@MG,T(`"5L:f9H<22Aoa_E/[e]up*7d9aTtBTb%\Gj>-d>.RKdQNERSU;jsc9liRFJZ_#;VND*Zc>kQ='jo-oheBfV_UhBW%B0^"TFoX"\V(%<N*7f?GZsZco7j8(YNcqB3_(kC3Ol?%2unW?1+#X2Sa(Ujjm`[%24MMk$*tUnC*X@\-lA3+4o"W'`p\FErL(Ko:Mf$l3FLh%lUW;-Hao!*6N"M=s.L&9opCX/?,Q6)N+@U^%=>A2ageWE[!]T5Y')/N.]qF^@<UMO5gVHof2,d;e0Ll9UW5lXnY_pe8YbBP,AL^h3B*5j5i^rmc-i<fq_gAt"@a:-Mrf"9<9PF40%/$o"<Mc5JZ!\C[B/-YDFk0GH;<s3\ah^!0Z#J](nFLuu76@,a36kfSad=,X^W=oKeXkdHOhmsd3+YWEE$:Bb\lO/4!-ffIV:R(G)%/$4i/%K9BkUIsX@bN^.^qUd_X.a7eCY92)%\c,IMAEu0g.cf--(i6HhqnCG93JZtSXUcDiU2R6&4@HrTU*%G>_5T*a4)(>mn7RdK%qP%Ws<F>NF=$h4#PZ8_p%SSgdNtm\$6BsbSaV/Ra_F1R1NgaBM/6l,4eI5o'8ld`lV&%Ge^"+.neZ1te81:E%T9Q@1#qGQJ.*sZe%fM_o0bY_>BrFuc<&("@5UM/\ZA4YX6njQBhS?P3:^n4F1=!BQP15]$T_Z`?o*l(\]#1N,uA^YfA5u=Q:-Tkp#>*#?FmF5T5Oau"S%'Mf7['QbtJeMVb@Y0epfg_lA7rIb&'cp28aYdH`2-n`iLP)Z.-4i=`_bA+I``]P$R9%GRaOPE9R+]"f-q'a_45dA55=*iuE\%8"O%&*MA;=\cW$(pkUPV"9$_=YjSZE3!mmS>m\a(-lit8t;sEIUoA;BH5SbDqI#j`^hQsh_NFZ;\,rnHGuKVnG2[&70Q(lIfVr$T`[TI%mjkbWRq5$6oFSr'S*4L&O<qTUBAfQL9E]du6>=.3<SALi7)(I6B_DjdO7Sf0H$R\?kZR()ToUQLmLm6K3jl#9=5dP3F0>6Z5X6%X%jbV<sP]6=KgqjO.q,.;5ki0"ni7d/uEUaC?@UjpJ)&N9.EuLb.dCtotjDtQckJ?rTJ<37*Hf$e[,+jXPndeN`:)I]L]m',XlCY-8%d?qX578Hl,]]t?hHsWg@Gf3"SrcZ=)3Di>/AMk*Fr9-3`mg9Z:KLQ)$Sq6<_2$e(n,D%3JNmiWC6@uH07Vi]=``+.0&Z"tV1@UH/%'>ZqcURB!rF.Yo'+#eW%a!<oW4&IuROq5?$T?3%_&(OW'<+"WHh_tlKi\=Y$5e8eFq#'=[EuS/#"S(:U\c@9RQlQJ1H/&kK5X+N@%!.\PE8VF`,iGK)!b:OJPE(4u6C#I<6.:S8c[dl7ofY53>4T5Kq2sJ7M9EhR\AHG+Fjr+@C%=A>]Ut]%\opQuA$),m8kQ.JkiQX1f%$:uG-@p%"gEZPFq%aiOuEC7c_QP98o#Xn"J>Q_f+%I'Z0`2gBd;jipbjnZaSf`VEuSJ3Jb;I\='14%kWd29fDVc(c0e5$4$T-X,3%f<:A;%E\RkhmCt\c^bm0%6Oit=BM7K[X9iIM+MeD.u5,r=*FfhX*erm2(>Tq(^-fWXY3u9b9h%n<95jTBiJSRZdMrIAH3JOWTfC1%V>]\gP^!W;jtT@;'7)HSmHf\7bq(X+M&jR%OV6_\Dir9Wh[p32M(?l[nh^J<&+k^[q$gYK1It"?,5N/-_lJqS3?)\#O%AO/^5CAO%&D[fUE]f.&2/oSWpj3cE;Z8S<,=k!>:j/lODB,^u0fq%C8IDK*F#(T%+NZV)n"1jF$7`6E'5F2=:BQ.gH;jE&+_+7r2,ghI[>=fJ%4eh(jCAM0HW6q45+JF9=.;67Eg40?K&NVmrY"s.>DLuVtlTD1snB%YDY4FW5&s-d)35.ipL)BKOQG:`VU#HN6F%,r$a$h/'dn):q%02>tKW&,%.ab,LtS7J,k8,!S.?!L7*=HS=[?1d;C!QlHjO5f4?llHhoMhgB4HT8iW!*BU#JW05p&]\#+I$.2FoNjm,KeK.Ta:FKH%8_oL^*:KX6Q@RE6nQG8""5'Zm-=EsjS.B"G-k37sF-J<<DY=Ut$X[@[P.T#!mRVpZrtKo.$(=]R^9=W]263uA"GN&PP&.-gYnVH\%,S*?'cLqtb!V@7s&G`H9F%aqZ>/Gs75I+:rH1Jb`bR[M=DfYi\rQ17^'9U&G9cVu1:?-9J-1N/U(r4E#a`";p_NC!tC,*;1;uZ=L%=F'DX.AHCSbB(4lG-N#+76Mcs^5=D9,_%GdZJ=7H,(r8QpTM@oK:R7]^N6YU##>E_;`R>Q,*'Pu3AJZt+WSAYPR$2Y4rjZ!s$i]+%26%;a);_nml.7DfUs5XNTK#^)+N'*I7o^3\a5Eumd]\7KRS>r9NjI-$=m">+LaJO\Jq"sT3KqF0*gDlER?Icm[qdC_@a%)i?_c\6%)R(hDd9fK=Ks4hD.'1Y]4JL.*]j`:8/glt#O=0*pQ/)CM4JJ5&]h'h&H4sBO@8CW/rQkJa)tb1q'"J[E^);(6AZ=:nmepp%*-^O0%^!Y&np*Oh)_T>B40D7HeDU45*_SO!FC@!%)#:0`hCUZ*CJ1aX@(I(f_6$;qeW)`bg*\ode_ng5HXWF0Hig%QF&rVOZd.q1o(]EX:%U\BhZ0/?<^;.?foMc"*qai)j!)\IXK'Rh)6A+/NaGfN]fm4$?STTD3UeBUK1kGR!:C77^p&+AN>nKW6^P+EaEr"2l?iIhs(iXTZc%A\/OF-5:nXcXAHRYO?gFo_,ZqK>5%m"_4YT21'Y"d\Ra6lhsmlW'AN$@\_+Z?_e?2ThsXMgT&1^4+";M'&-<D2[l/dXhC?>U1aTu%&%j)^Dj^K4MXc(cU-I1FLh]3R/P+;]&;29$UW]FlZmoC1ge`gIM'sf+-8\$;CU+?be5Da4`2NA0D`B0VZ;DY&^Yl3&njoAp"mu#P%<?BX=?/eh=^66Kn18Mrqa[UBpoi7'b;V&9A?@dVci"oAX8m]6[TZAGhdAH=?VX!`RAMW'[9Gu#/gP.M<2R^kaXn;D?LZmSg![k0f%-s&?k*rkM[Ecj1;D:dDW9'u,"n\>aP#$t3W9\NXoJ;-@I`iNc;Gm;CA%-YqDUhd!EB^#6F6I"kbeI:D]d'(B$UZpcj`k,YJigUUl%;sQB>pu>UUo>aiI3e/e-8e%NTp=0^oYs&6(peU\T0ID.d9H`YJO]NW=QmhrI(g`_#s*b_2p9u,<8+>1CG42)GC3?B`Vq25BW^"j_%)iB#]-R4B<)Fg%CbY^bGE\/a[n/Il`!;AT#hGt$QK3VLHr.*?qXZ10>dfijDcN`(*$*,jMI`c_,Z/UHcBd;"rjWmUPg^Qar'4a)L%Wbfpn-Wpl@>f[CK<keaSO3?\aQ^pH\8)8[*2=8.$>KKQ+H4\JQaTNecfK1E-jKopE_u:$Nh:]mi=)>?b4T=S?\a7p5:q[l5@01Fu%J!!YqoRj_b5F?T`=U)NfV<<IJ]79<<"-&49S6qC3TZ4+T+cMW9Qg#HIm@qH!D_hLWG6@[N$2M3S0@&;sq?#6([Pr_hArF>''K!SW%lj_m6*aA(B+G\RQ94Y_+oFN$[Qr!ee(m0YOS2O@k4R7hXIqkoM0RY-.U*IL<`3pBni.Q\U!foQFGjN-o7#8kl7)5G;EnDL#]/"^o%&f_^:a851c?r>@\"kLeli59;&p4u[3+PScNNNtr_jc)%U\^Y$*\B-"GSpZ6/VGJ\Hnii?7\sW!P+H-:E<q;o#f=6nJq<"X+a.T9%%6C[Dqaesfo`7j6q3K:s(@j%U4e>>o.3s1R'\=>fP6S>1h8[bC&O+1(>RqnC)e-:S1Nee=6Ot!ir1u^-RPKdD<K30KG&?XuI&]@.4%K`Gd;V/AJu$A*Fe8kh(*m2?'47KF\!C>q,,WRM90IYk;[&)FX4@CdjRm2+1?Qu)S/g1$90@TJ?<`]TQCDn%c`KRq1p!^XA^23l2t%VQiO'/0=t(i3@DmKlJ@-)?@ukAe8hqe8YoZj]pUc1N'i,/Ff1ARk-<^XiXO%?@o[I4!c=D*1s/n0E+(gp$(BdSdi[g>O0bS><Ej@%go`B%%c63u?o^G`FZOc"Zb^;eccPECZn9u%p_=@,&^mXATb/YZ``-#\NsT?K<R_d3>rk:Q_7?AG-VS`a%K*+4[e'8^.k.?9"J6=H%g@C\c_G!KkX+\$D'.d*r01dn9VS<g>KjM(jeEri=&5&+G$^IjZ8"K]i@Z(d04A#j>:@(=>H5O1QOG(geGFfIT\j:Af54mM".0k?p%[+rp<`a2>PhAn!X^XKFp;lh#`ftScebnM6qBOugsfP/EpfAc:SOaiib^#EOg9I\J;PCI(+Gm&^H+Pn0G#i]>6J%qS#)qN,C*V22(%U<.?BU&-K[ocNj^R,8Fchs(;=9p`9<\NJl(Te6s@nhKb9E2!T$QWt3u+&)=j1;3_(6k<&a+H!:ekaDEG`cD-44/(oJd\s5(H1C\.%d*h:*jqH6qJ'7RMqkJK':J^Q.?LiRQrf;Mc.5/pk]aW6)+$=;?[lm%4f1Un3FjR@2M4?CQp,fV[GgqoUGgiVUriCQi;Y6j"V!f8p%4n&Ya1t3K:L.<Doh=CgqI.L1k*;mGK)h'VO!*!36BO46'0uV`j`MOJjn03(*h)I'5R3_/Og_N6Gn6aQBb!X9<Xa)=?fDt1Ir,E(Y%I)E_6]kfe[YQ4.9qt*4#]*R#RLClp-bHPtM`?r8_*hM>u5DT#0>%HV$T0e%%cDEgKSP=UB4lNq6/BU&)$2s8Q]Or:G9#b"k!a7?Y%>QFO`\gEl+dk$"e65pS6nfm7.i$"%.-,tY7aMXWZS5.K6ZnQKkk%Uroj'fo;S7+fk)pC5nn/MMSa'%9G_XMPrV,HM?[>bp\64+"C%MQ&SU1P1tPpiq[I$*bp?Se=%eCOu4XI%3g*BRMNgcI$Yc2C5#YV\%ZeB]7qP`U`L>8'ui*iIa$\KXF4s'k-=Q_?,651r+-/8O72Y%DfKboT_3^54j,Sd)?,7(l'-XE*$rOKQ=dN_6s)/rnfjMQ)lG]`iXkjZ@4;UZI%95!TK`fp6>Zuk6RU9>#QfY!bU7\OaJRr*`R5SJ%"j#o;8-(B>KK(>%&27FJJR?cm!G-C*5f4k9-sAF7(Ta>Z13bN5(*lXl?sl#X&;dJFDP@;Z)d%kiEq*ZIBL>^<.Z$t&1kDCO#-qDp%Q""la'W-HdJV%mXnDcbB(3:Z.1e"8e[kVupkFc[jDr]oh.]Wt_PtZ12h>'%S+K;c1&]efuSE7h<d"m`]]M4mnmLTa4/Ki>:g2rLr%`Hf<h-J@Z8MVHML!W5[neI^U>M)!KWkh:PQP%5O`T8[h??8/`@Yh1M$1p@#Q=5$c=j"WZ^@ZVX->@dHT[D5E)=:V\r)INkrT"6hK%0X'%oV-s6^J.<]HNp!bbJ>KXSTdZMJ6??TQRl:(Je-=nUZEt*og&e$?0mlmV,*0.,HOjf+,&O03`?DX[eAD=t(U-ql1%7jdWO6h1%\i(+1QGIYHH/s3['/.3ZOfSUCdThs!gH_i/gm4`=5bPN8[\c;_l<6HmM%$@X$5_nlJIlmqah/NYFn@eZ@R`&1?>J#E.KEQh_m4$@%haMB=Lnb!'b)7q\?=[1,,0+jX\/=`oP6*Tf+N:=]q2`6a?#p4'T?#)QBk*55F'sDm99KM-C+V7IWX-pMCL`Pr6P"<V0E[n:d[!K<%`NIKX)hUU;?(4;,)HfltC"&qV%0e8#S=XIL@?>S3)hlk;N"r:g[OH89lIqJjZUdOEM5V&\N^5%6>+7!KMtFJrqs]8W4EL:I)#^,@%71TV[9<h#.",g(8mi^3^-jpI.iAOOE_$k$0*75;.(9iRe+U],dP!Wpk9aoJ1W!1[#;4eg`Kr>1Q.opF/n#:.qUrZ@?[S"X9YfKB#%qLIsaEQR[kd,d1AA<9I#Rp'd'Ndf+pZ),$o-],`m=p.\J/L&AW7XWQgTNV4Q!G!sB>"%B-0VCWrjr"#fXpn^RSTp%.Ij`3G$9,15%NJ*05lponF"_7h1NBnVAL/$RB,`t&8/S()d02Nu<iYX_b?)Ro]cE1tT/-DrnOWf8GAFqGTb_b>e('GVU#X<8IP7gD>OZ4`tiDA%@%-Ue(uKj4r%HcSRi$OY0'NGQ)<74&'ab@HKsM4jQ71'43m'c/7(;[3;s,qrks]^3ZfD0=V\LtIB4pHT+")8J,gj>U!]ju]sS31/Y-%)4(1A:Ws8_+oDEo>a"(8(atMUM;a-hbO;FD;CRLnl6$+/M_&c(OHr3C0I+^n&N5uF\.kjBSUbti2%VEApCbOmKj@%4-(/KlEU?U2%\@o9#6=*$S^h,EWHqb'W83A'F,4crH$RbFuf8rC@X<'8&%BtH2!fP%XM1P/l#W3<m,r_M%(3?JK[nK,M4@*!rN3\D8Cs]bd(7Bgu%?6W0i)-AVMHs*9T[A8m%74h*,4s"YrZF%\?!65uOU'8L*clsZ0RS0=[+\D#S\>P"FBJNki#rN:R_J:U%4Q*tGN`-nD9,(eroG5VZ%Ok7![!c[%(`a0j6H[8NH;fJCY*cNc!(_3JfJ4AL\TLS-E$C`$&*0:/(jJa7dK>h+E&q_SA8U2WD"rJUBZ*I<D,K7tT5u6u40lAsS%H,,sf-"`lSdAq2Y_&LGIJR)0dLtd0MH;FuU>\F[;*]446+g?A`,=VA2:a%)t_pKE<TTm5``6'A4^Bhn,kE*$46KX=r0aEcW),YRm%PK4O"EJ&D2;37"F-\^\R9.GYGBbJf6Y<UBk6=L?T=Gt(=aJ2t#Taf$Geh&G2oUF9\TYjY_R$_nu*Oh0`!SY=^'C`4K(1hFm((^s"%?;M*42Cb)eLjTV'cqOaKGZl@E+qcc__I,Xor(q4L,/)(X`!$]J'_"^>A6<>^+q)Hph1X0kZ9Nr>R7'[Q%4Rl\E!+-*W=Zn]-W*\F%/N!7PpbeXF7C4b]J:S)cB;@)V-k\0uAIJ.%W6bim%8UuR(XHT09]6_"8MV!:h=5^t*ZYDpr\:eL/F_$hV?)=.RPlR)KJAP0/[lR]%.'dCI37?>/Ma0VX>J,29:Ee!u#eS.d";Zf'%1FMsLDYRce44@,Kbp:WQ;cm[<m;`u;N^_7;5quo_GO@`-AYjHU<<uMXp3W)Uf(OT%^t%&dl06Q'mp@`Q.T>Zo>3j*L.7B9I'uc^b4?<sQ1^(1i8V[#baeU'E\5dDhlmaArA6jgkjJf)].Ea/ad;ujq[$3j3`:@YBOrKM*%@$P`4SNmm>]5`bM0h>lSC.2'_*-(7S4c?ZZ;10urSEOl,\Sq%[oEMK16W(H<K*$'2!Db0k.liW`;]=d"<o:3+<%X5I/pTc2SLFd0%1sW5e>R\u'?oW8B(P@lkN8>L@R5a3S&oW`=9IN_KPH<("Tg;g(!C\5@.&7)]*ikY<2MF``.%h];j`jX8M.fA@#t<6/M]b*$WdV\Y%*J%<2@cnln@I_,J@g$e36N%TQ%oeDt?_J'hK[@m!lKC]9$6(LM&5XN#CM:L4"Tk+%#;AW-AHcmoE<9-W\]&_.)eIMgnX,PujTem-%%MBJ*6,??E()\:.:HTT8o75Gs+DUn4%#DQnN_.6f^;e5489K#N"GelinZ1_^!fe&#J&9?"9ir^3.XJnD;G!BeK86t#ip&f3Mt5R?%Ijn#^]M\$f.ekh2Q:>R[J[f&Z-Vh*j-pPnJS.KWLN>$[XCucWNc)&#8Zp58*Fj-0lnmeAMiE:SJ+Z&)Z/g?sN6S.Ms.?l$NENlGG%2p`c<`.4dp"#)]D.ii<*JHuUB69dIc<PfLir$`[_:5&ddL_<Thi'\fu,3D`AJK3BZ0pq[+'%'#Ra3*A$&n*8oFE&_5'@!?F/`;a8%"uSfG^egaJkTa$a;2Q]"+cCmA<@EkNj!:B$7DN@)UqI!O$r,]sUVeLX#SrU.\"4*@L!g:#TJ8Lg/7<r)n`UCmlr(VsK=cZ94n;$l%Fg/adrBO$AgnVGN1EA6\\cmsP+P5k&fjOjDNN.^MPWI+7.1T-Zmnq4sZu,mS+h@-=]YT^(rf3dLGj*EtgB0&E9f?#$-Il&TOk$@L%",i86L(l?BZ<mh%^]X$;+!3hJ'N2\.b&(TD/j#<%%Ob%BU'&B.KGMc5RT$8*iDRVA#3[K:$+oI@Wq^hs+d(o,$dLj9YsHJC&_4AL%I"0tINLjco4iPTk/uSqls):(jk)NV)QM<mP)iES;'Rl+[;6,<=(.2_2^'Tcl^qlk=``Q_&:q_K^T1ADPp+'_;lj(#)1rX7uR?#M&%(7[Tdr58P-gUlk*dO!Lj:JgMaDZl/R6*9ap^*4>8+_-uS%'e$.@0j`E%*S&_$!H'3IX>YO(ulPiF&f\l;+@=mru-C4Pr%SX%O3/=%A!D1Kp9Omg\W@T4,1k;?\Y.Msb<dfjb7`T^/0f7QU@%dEDG$^.gM-O0<3:tfBp!-rL5-2u3SIKbrQo+W[]<i+>ds-Y%/U1UddjtW%(B#kd@n&BG_em)Zph<=$O1,UY%rP[aPgQdbLk_mt%F\0BnmtY;R2dqB_fXl"=g2>3=Ej#(B,npQ&$O@^>hAp9m=sGCE)1O&//(]5%epu8j^<lI02X0LN=:anf(%rL1N_,SaqUta`5rQo?$"]T@d]41U:p#@Ceq(g-o>SUb\N/OuYr'4T,TFg6BLbZ?c72'.8QG.1Aa;>N%oX`S(^ESG5")L?/83X)T[AL.Q"Cl<1&!-.T0,IbUC:WQoC_=5!8Joj"60]^uORr-#::SK]bbd,_/BE)B+U^'le15RAnQjG"HS)SI%_95d0o[N[/#oPn)pDkkV3GaG?\[k54h+3`I$E:_:*U7@[hK-;Frlj6T#FT4l*Q')RY/@M*XW&j4d!`[a"eSLt>d3a$.rnq(I<fu(%lag;^@Ba"!Mi<AR[JS/:A>*Te^GG_l!fI>icS&?MYgJ)X=OBBl2H&h>qII-P6-a[G@Un)u09JY&m7N:BYl3s6kte_]JXfN&iGJ#8%5rs)OLC:=:/UB4=@t7W&fXe`I4)DU5Q2t;4[)7gG"hC'ja*i)p9Xi_)LB+YcMT\RI<n-EZ5H`&dK'h/AE'!COdTtVX4gZiM@@C?U%k)gS:C#-hp_<E4:D?U5O@J0+#42Ueip8GCL,2E[lMcN@Djo!RX1=#mlog=C<Rk9%-L[]ndLWt:]flm*"XQ5=_T=;Es(dHl=lK#KN%PP*qEc)5%t%'2DRIJ"eVf0-Yc>3k;1NuP[\g?qii!X+G139i/Pp:=7E>j#>K^U@<V:A)5rD&&^e]@3.0h<GJ5XTHO;o/;^'(1(V;%32@C_>'dL>-0m3imebHu`aqBV6d)_re3mnm%#uS`a\f+9Iqk.sqS)!O=sm`oGUhG5:-,bqi#\Xr&PLD,@I)YPl/])(FJn*paHnH%%hlT"Ik?SP:MB,LE)O2MU/3e5\\(Z^ub6d5i#4jkYcM#V&G9:(mg;aY*S^Vr3_,(ZY<b1u1)T(!0b'(%u>>C^embYRtN3f'-V>p9e%=iJ2",tiUhZjdpog7=8q2?;4hrLC,9Cpt4PbH0P9Ak%#F3Q??Sl3Zd=[j&k$)=p\<pT<B,=uP5OrJD=-2opjb]+@O#F8@S(6u?-9%GoofsY9q#u;Ncc.&$i-3X%H,Of3_lRJCCJ.nmSA,9d:">rNWfcq=J[1QIG;sAMsbTI@R),_u89nVBaWjQ)f"6jXLf;HB=^k^>Ns9%O`@k.;o_i$+DgbZh+9*'O2M4ST6F!S3itTeqsKX-Vd?8CQR;BH?pffVZ#PH(:@VPXRq#\NQfU"-O6sH\Fh$3SQZG0p<pVO,8IKPY%cKaGm]H\p^/D3"I+/@Z&r:>j=E*6PY+LfnNZQb05o=QWPkMVLDDTdjeUb:<p7i^EabI&l%.rnd<"H+*8XSp^mh2ZJiK.QuV=o5_Y%:W.t#+N'ALIbuguV-!ZUC<'6kL%\.XKkkZR6(XjD_m_WhF^:9&'c@L>jl6;uZ#flbqRW0/+q&QHjf0K!j6u$-bF&0SE^Rih\,c,f%Y<RIh8KpNGf>i#E(g*3=C,R?U9^$UX6o!-t<b)&Fr&':^4R_7$&@2NUloO3fI-FoE?lA8.U*5QSh%t?gL&#f0<rHM3lJmq\Eq6<Q%i@]#`@*>VeI!$>/!CO4:K2ApMd=#h",L=)CG`$@rf3O\`XJc.C&1lJ]KS;]]BMYV`a4PWH5h9kaXsV_Sn@n;P*/4^jPN/dJn'<q7%Jb?f^]`CtHm%@^9dZ;u>@oiaGbl!,N>E8FMC2V?K#Q%Z8aO+3ZNe*fiY8NY262MUeq?8=m8mV3L*]fS\^n1H-)6sN3q"9@8I6$3j%`N]2!Up7GadBu$0SdThN;6_eSA`u=4c=.mEni;>Vp=V!GVId\n\9uS1<NY;j1pVF*O$s7h:G&Vb[A#GG%FL9?m>PVWSHd2MAJ(4$%EBX2]A!p0:.9bOiXT"mOe$>J8E#8Z("Bas"T$:a#l,LRh]>*V4=h^]ESbmK-Q&kW]$au)^g?n49O(BohGJo9CCql[XjI';&V6'@H%U%\'L;Zb8UVo41O5j)Y%^ginKkN-oWDh)mK^I&PmLS!n?h_/971YUSjhB:,?_/2:1clRKUf["`&0A("3J8j6&H/c26&??jW&p>MI%l6$HW5J4:V0*c^Z^<U(LDAgSc>.G/SO>oGX3KEije)#PM!:")h5n3U,4l=kZ>P[kJ-F^R"a78$kA3#*/VqZH8,4AS4lWDhh88^9b%O8\[P6Y/#h^_j?lfO'@XE0'h)A)hgm`is7F@r/P]hWEQS0P&dBr?31XlVH&91Ed-(16<mEftJ6r,^7c;=P?MmiA?3D(AIK(b^=cJ%g/\kbLWf@:4jHh<^VZSO[ZQ8+#NMPk+oSB$](R=^2rn3fFr_5b_oP;1VrMOT'?E_P]+:a+9k\!,#E!9Cp?qUb.+H/faJbK*OcJ>+%jl;D<crKKPHZ_)=o'<4.FqFJulM^TQEuB^?U>tZi30B61iPh$Y.c2/;cIVrjlrTaiJd8P*_r*Bq6frmlG1Y0&g996:Q4=1GN*b49%2D!afgGHNej]kG9H8_c3Ia*fsh7OK9D#-9c-l@R@%(GO!G_gq!(c6mfk?GqX2#XrO@X1S>&t.VO;:BSpD99mtp[L.M\n+#WLQr"O%W)OjU@30U?3[#Da6t7%*/D]=+bp<[*:6@X2BP]4>[iHoG'#ojA=m_)mPZuu4>D"('.?Mq^OSa@MoV";sBC($TPlkXbn808[07-3s%!unFP#?fPi,BkQ26f7#6G.UMaD3;fl?9m9+DM-0q=+._UfQ^QoE4D%h%U!1c[dd[Vg1EM\D"N\IEY>JU`hPP^([Q+S:7lm5TT*bM%Ze-YiX*Eu*6sHX&[s"]."qCGLau[Sl)L-;X?i'YRe>Cf%ns%18Fedb"85PL\mOT]-+f)9YWPk-"&</dj"Ym2jaMk61Dr`t3p?BIp%TlPtI$SqYCdumr&Dd"[fjQg2oE;$DB<ojt8GjC-*NTm.lFKLf]6n%rae^V(3W30P?Ca-F":\?WM,5*\)U`#9=@mWl^8&'T,T5>_A%s*J*o[ZtBjbeM:s[U(\Z$5.#&>,HuIln\3W:,VAIS<&-]fe,_6&nK)T9-3Z\cD-u/4>?T-P83r4.9JIEJ:JI>.kO:C3^0*j;W-lB%?ba&bG2,_6AVHhWB+,EMO>3ujc\<b$J-BKEfp5d4o%2!8&P_U?EdDG/_AoC;1[FU&I7C*%i[GuK%W4!!V&<+fKqb)(Bea6JM!s)2%,JJ-56\7];KLrk5DrW0mN-;gA9",;:,"Kc%!2D]u@o+?1kd,kc)j-f&h>r`#MDODdGj/.(-s9q2-A$9WRlaMabTc*6Mp<t6-Bs^=%>8q$0-<-6i]he2c`1:`e96X^kcCk;*m(?)[jJ[NfDO*rWGV<+JlK$h_<hZ&8:]XTi\Km@m&fbEneq3a$Pa^SRiTKt$qB5Em)l&8T%jCA%m.<IS'G@_%u2o%%s[<HW7@g&%t3NBZQZDJ*F;\%sB7=E+p/unY?G#9k+qPcRLj,<C%.Jed%[UX8?S$UpQ4RrUTR1*T`n^aCB%.1)8jn=TVRL&X7RpLj.;n*[[)P9;=[$I'IiIQdOE_JHgLaD#nQq6n5j/C='5h`(ERCn-M"[ihq;&6^'S""bda]*YMd+BU;L5s$i&%an'AdoYKZF@'tV^Z?f6`+&+uEONt<h#Fjs8.7-]0WLoe=<j<8F;WM16i:6h;,B(rufJV61/98\&aP'Z=g%g$+1a5?jMY5-fB&rJ?%@;[DWL-0"[Ag6To?irmtl^]Y"d`V<j\$Ls`f/5tpf'33J;%kt^pTo]!"+)Rkk/>te%gdf$^7@-R;E@=dC&K%6*%NDUD3$Oj]u0Q>%_m++;B<qY.bFkD9?MWhaR0UpV-'++k(nshT30"@0<`ksP+LQ`\?$8M'>]KR7aA>\6[V7*`W;X*;UDX+Da5X//EO1h;*QZqags<:t%ID.#k+e3n57I56[!I\mK'5P8QO<!63mdAW>+ZK+LIL1WR0>h$dKS>QO>CnEsP_1OX9?L]Enp!g/6>rd"m_j#D.)^b1^,m`2)i@IH%mAQ:gf5;u3k<@e_>eq)1CIPtapI7#uJ+OJ\CILJ[k^Ft0gr.N`qFjEFr]nr`i\f5Ha3!T?bK8Fc=,q7>-.IJ8Xf[S2<.]QW<u15Q%2JDb>Ro(`Ymr!'16BFFdI4Qh\h7don[EEb?a.-eBh=4V!GIrsu+)4ko$0fb_8"@TXeh/Mqn[V!87YFe`i?A\,"P;f&b<tpJKZnfm%mtuj_44R3^*@^_sDH+/YCHV7^G(W8e_1BcbM?9+*LND$?a1Q=PD7*.Nk<rkXS?ZLA_B4K0%JP\'7O8pE>*P)N8X--IlV,AgJZ1Wm%D-De+lI.c1W^P&DF6f'u'r:puX,F#-L5jA&'()p1r9WJOgP#&dq7aAoI&H2`Is(kHa*aD!Z;aTe-\n("Qur&2_;&+^<XhZHS%)N]%E\,N%G4*Rh.0?WliNm%;(u9s7;0;F:g$K9s&^&^2bNa&3#o3KS/5GZoU"dX5OE("JBkGNJIs-R'arSllarU$#nV70?G,-fh_@1O,%]P-eGHaoNTYIPCm[-^Dh@GUA)fW!Xu!;:/2WbUBTJmXuD07@3Yb!glC-.h7V)Bu)!+EsIZ]$7^Z;H(p,Q3m9VXc\XNj!J:foCkOX%)Bj_aGfWP',SJO("Jh&lURELWI]3$@IbAd!X,Uj[Y6!o490jZjBWWg>k,3(-:4HfBRJLT:1uG0Io?g'gheL5Whtn5M]5"bR1g%R=%[\54[0SNA?=8PJ?"g+N9o!>(`Hj_ga=Y!k\S'A7YBjWKXP2[s>"ifPRh/9,cnKfVQ7u$;1mF3LpSG8;h)Q\*&7[/pu7XR8I&[<O8%+q(#*.]Be;-D@U'TmQ#_TirA6G2m+f(t45]r"`t2]q(#3fQoeXMgREXX#5:fEgu&-(u`qm,Z+s*'YkF8hTAf#@N!b$R%Zq\-de&b%C3g:,mU<?gSN\8oAPfNuII57O29O2HV89g%5A[[VKT(*#[t`"p&>h#0N&@JG\:m&[O114c]aiapXHe\Kr*!!6[0+lM"C\]aJ;mO?%@afXoB@PTA$ktT@8Bp!iiD=#\=u/;MIG5WN*fYLeF,'MRr6flR&W]Lt?Xe=sG#VMAfWS&!VW?8tZ]u`O2P?#X*?"*^b2t,jQ/=c-%MUZVHqct(UWfR,V=D>)$(1d'`4%1^S/lq!5<c]3JoDdZ3?e2O3q.P>EFr4IUTgMXb$ur_PHJr7'D5UB_)loHRp"7D\X)I^=#1\#a%n&g`__^!K\6+9aNLRES,:5=1U>T'ElQPmtY./'#>j[:b3R.`)=e2P;o,\G4mM>/W2'GR$9c")NO\C*ZT8*o^MKiU/CW`g"`jAm)[%Zr)nu8.1mH\!8M?ooV4-&4L\)>!N3n5ZWJ_A[-6p%mhcd(0CqcXO<kcA7SMn[ikKTJe=sISWcTQ+ush6rAph&?%PBKOX65;0eh<i%Nd"p&^ct'P.NWVf$G&;#79G.N9Op)D]JI)`$;(`Gl!ACT@N>=9FedLSlo=*_'r8P%9(``YhBK9Cqq:!@1iP#rC?9Q@Rl@TNqkCJ]%hHGStX;*6@LD.'t/Kr;c[I3)_2rU`IV?aGeO\;p1!h,]*Ug[eEajc:Pn'VGc>V4QbeK2Z(a'/pmnFs&NnY,ugGWOhP6G^Sr3K4.0%<ai+q/V7rL[`4Bf2^S6A4Tj<RCI7;j>0u\`^^d3*d,+H$^2''8^bm@uJD_?lRN(s0Dcaco5np,"m=[Kfd$KRFQSTkR"/XHKSPY@"%CMpud[St1"a0]:U'(ae]'"cW:a(g',iM?.XOo0>bU2S*&.));LGBjkf(glC2Z$^pB4PhEd,h%cE1A*C];XJ4mF",M;+C58sVo7TU%$=#uMoBk&'ZB^)L9`8LalWD8:X&O)'F>K_nNtFr>h!gH9=OXd<d])s+[usR^%:g%"X,j_J%$hXZOW>sE?gl<CIUoigJ70DWMd#4%%47XsR0eO6?qEr6j?Y-[Z(]gZDlI"T_U%5NFORU\8H-GPmZVFP)>Q-7Qg7#/3E50\Xp/Ysj<VKOUcl0C)jjUb)\3E*%T5TR\,c;c9%J%,XgnhX1qMD2EHY7Sf:>'b=H*NiSQjbA_1m<4VnUJ#]&]#=;X7X+tnWR%9a-C:9f)Ea0sU_;Roc37)6/?(;u+Y:s'S=q1FUg3:Z%%j7FYH4AYj/`QiK@-%-LJ^779^lFZEf3ZM56Q#%.0H0nYT.8D[IU1#bmt9'o&3btBac^A9+Y".1#H$%mHQO*$B$>'o\ON_[dcL#?%a1I>R^EOL%;!(n(..[kZJ'!hWm<'h1#i?LKofIdDBfq!5Et1UQDb,Sq2Hi^,?U3i>?Q_k?NZG0)Em=XIe8f&iJ%SKX-0EDJS:E6j%<.:AVF8`Z`f<%Beb(ZTrBlb10;Nkqkhtu&khFZ!*o@`cTV+L3Tq)-?G/QQ*%FKNRr=EFtI8Ml=t`Oe`:(QCb5E)\&0?sJ>m8,B<i%)5*L%,`A*Yc4Z?t+XQ)_\1HFsd,BC:e5".=ckgQk%PM\;bEq0-`nW+1-!0p/]:O[+*,86pR2m>G&O"!O@1F>o?WflcVR:5#Zm0nQ%<M._Q]O50RNonFOQbS_W#$V^#RBe'%Zg)[(C7oB3FUp[n&lHmm;/SL:KP'sRfZojcg-/(ldZ090caSW`/>uXqEKg.)!N&p6`N`la%Wq\\"cgf+Tn_-n[)Bg2@%:f62kEK3CFmpm.#1Ba*ma&A`kh[ZPea:2Q+^G8`_><^BQ9\H$hPfG]AZU0#`0r'gjZVMn5bAG+imG+l%Ms[#^a45B^^,H/q/fP:O%F#uG/]bZc>^Nc[Np.U&aJ%Z`Mg>8+E)8a?`=RH%Ib[r&\=EGrjc_ET]ZaAm$Jnp0>^7U%;n:EPDS!$)%N7%%iNQ)T.QK5LP&5a?T'3!Ub50l@/%G)/(.a8U6*NC=sS*5&oQ0.CG`t0B&f`L,[@*^P>k=X?@)%bU-q9o'O=shnGT.e^l3/EP:%7\7jVPc$L@KREE5JP2Q__cLnLFql.U0FPaB2k9!0!BW=0o/9;WIlhRH:*hKCa4l7VETh',\%p,QMeAq4#dnt,g=)SPP\Gq!3sJHO%P@sX%+VF-$Eb!S'@\H4NUD\-.lXmJQT$sRB-M,pfJ=_GW:WT_O1Wr]<LQ9FpfR,=.+jlL$W*>2ZGftPl+(fFe$$m^=e%C/oWd;;Q%$U;AH_e>LH#q2AAm:_)`oiGIPB&ZVK#H67YUdu!I&R#'VE(r[:&b`PB6%ae)MJ>M93M]c67rLje@Jr/fK(NmiN-Me\E)+J>!lU1E%pgPX1c1M)pLlm:hiuF+L-BF:G5`k7%^?s-,PV]##BP)762Sp#!EcS`/q<0rIp66*ngn\3WDO+Y5.U$f7+b(*8j-^J/m*Y%F6s;:f%"R[s$%L_Q;JNbgWB$UEk*,^#ek,^Rfl=HKCo;Xc>EA9Wj.$Q]1LQOje+RX&3%ZYOLoTBM)rJ(C<>qN#1_.#R-gbF0Toa)MCn>'>K%g%*NgZ("er3uM?r7n2/.UVG*Jn,u].q:/Ask:&pE-J!SdbKB#Lf4nAar1=)'S.??iH</IEb&$"Wc"*8WBmDd@H)Wi&BmIg2d(*2D%0XB3R)%lf47K--'*I!Cj4cY.@D8Q9Yah]$:'38PFnBLZ95Gh@2-XXnDjRI9@3d5-+8'd^`8DbO$cF+s&lhXQj!Ee9PD_7^?b]#o?%SJ:sInE2&u!aP.eZl.cS,<XFu`)/7ZI;QS(fh3Go[AOTb$An*=efj.\G:%j#BM73G(#SOo=gR:=9"iI-WI5jK^lO6bi=E&LOT/=X%5@5+QAuLY3M/P>:3U$\#fK,aI/`1d'k:9[9fcWh4OH^Z:%[-%,Hj7`<rm>d%3"($Vj-;b*USS1I([jFoJn1;m<Pb78[Y/``[Oi)A%=^Bc>p_8:!5J1U!P%mU_K<%@6KLOQ*7qn/fLihL?P>;<uLA+G<<'5Gt,)mnpZnQi)'Tk9e8fA!j42R+&-6!!Qr",Re+i*@#HFut>%5+.I_,e>#.@VhM6@.E?b&HJK3@s:!a(?3#i$]%BnW!5O._coch[O.pmoP^YJ_VK.53=bj]e2u_\!"RK>LIc.!]->$Jj<VbU]o7X@%MX\#?3obdYfKO<uoCt@Ln\oY%L9'^J$(H]C)0/(d-eD4+*&1qF/Yb#t=gEu"1QF_8WTVqiS\sAS^4uDU@&&@_+"cq@J_[-_7*)[d%l5t>ZT[:?s,&'P(W?lc=`)eWsA2B[B</e3M;0b'fGV,@fBqspC=lK!7bjc++W2shi7<e]Dgjc&J?7'd(W)af7Hn8@JR+or<Q"(D-%e!ETO.CB)g)R#H\q]ee'j3bhbD(HfH@S?P\MLt8c%?Z$rUf>C>gCg]R8hjiW-W7l2glZ#<I^X?VfF[XIfVEbaN.oTe31N?jTV".<%G%=^oWgtib(NsEFoZp<W4!4hVm>kX34*$p_$4B\L-'[a[5[N</@ISWPAf1-jW0b\Uh[IVq>&8:trZQQk7Mu.m%Il8nMemNt_l(Yh%]WAo0l-O?`+4RYGB#S"!'k7/c,"13GSD<ht6pl_Gf/3-5m1ed@q"1A0Il%sNI`i"`J=H3qJN7'?hO'fhFq_@CANEFS2':;0,3p,G%9;"C6.)IX4q]VSk#""4EB.'K9Vh)N9cC<I;UQaQgMaNMW+=aZV+_Elj&IX-iE\I=okB/]Rm*':;E['gE7?CA<P_qsi4c.5ulPCS^%p=2>;0"f*>@LmN4LtKFp<4gmU:6TiZT+[k5C:JT:9q3eN@k_Ptk_Q*.f$Y>/"XLEM\EO$)&M2kn;KD@;>^V<hFi7iR_m6a_.#_qE%GhtNSgSI;"1+Yf]c#]C6g2iVLkF%"eiD%TrgI5F4@JaP=m)b^n\Mg9o2KF^;7P']lOpb^u,&St+\jJmV9?Fp^3C:90i.:##=$lAA%m3`iZf[#"kqNic*&U=6E_54fs*+j?.!`,Z&4/Wg%T@O?YI'QZ>GakpG./;IMbQ9]a`<=PL;_>cpm@@ukSPh)HL/^/2UEq")OSa]1%Ucq3f*6_dW8l[%l=chptYI=fVkt#8hN+HN]SE6@'^/a0PcaS)XRd(M?U"gOu5`5.1lnT.%7&1c']Rr,nS5$h=)P&,1JIMOG"hnVf%L1^g<%^FB+YT%XTZ3)@F,QLmQm"i>9OWF3T&1EeQE?X09('=kP#@Jg;`h5GmGZTAe&e<./mDM0M>>n/VB01951C=&b@*jI'7Eu(B%>X73U&l2#P-<';b=aK:&aT^o@H4(a;.P7#V!%))V97&Kn(:jrs/*f)8NEMT#q7=%1p>3akl0LXH^gR[4bWTb3010%Z+^0W@r3Od+%(j01s('cqZSD+0C;7\hb0b4_uj+'da'JpgZaf?Y0HT%gEiV^4YjZIUXrYtS^0rW#MASr?8A7?ce.>u(ga(/?<lDr,09dJlC;jP2-%;t(>+nlgUZ[ur0ba#XA=KZ@?!aN2NNpM@3068'R$48Kl8P-2N&YnuT2)n-u\_$4S;-r4b2Sg-P-2Zf5Bg2:kS8_inX.9RcXU^rsg%PU2<L<-WS0=cMJ6@Et=/;0.RXk__j$9tAAEk(bt9a#n!WD3_XGDY*%AB!1iRBW@Ra"E,BW-AH_5Q.S=.>G;CuKSKu($W#9mgik*!%FMtomPom\@\5H0G=5@H>.?j/sV_31r(VA4!q0,QMS;>6D8)6mjS9ItKl'T3Q/#7(."F=q*GN>8\4SQSiHqT90:'[AR1U$sk7mC1&%%r>X!MB1NE))op;YqiW.X_?YXKK3J:fGqL`oc.][Vf;h"7R]sk&eFW<*6&F*L[h]*'QWioa`]3).CQa/6tb_,`9V:qcc5GO$kFSl%[HRo6.0p5OJJ]lMX%^=dYVH#V,C-eP"[0ZX)^<&&)a8S4JhnIb+%*du+%Y,@UTr*8_?b;-SLcg'[F8^C_BcXYGFA&<`SJna/-D)s%18EUOXTQT`\n6sF5R&5f&KTF2'*JnQPXm7q^kAFa3t6f(gS$Bg',8FPjejsge*AR'Uf/>8F?C:6pcS!V=GiDG#Ua?[,Taf27F[Ei%$L`C&]n"OkV6M'3>5Z)fXeU;&N]h\-[un@!+8mY#O)t'L>8:#?4O]?&IW6dtdM28Q?adR;^%WsCEg*GG3<t\+SSPb\.S\u2CAKJJ%-gI87M$*-VTR:aF$.s5hT//ALDE9K($,?=(6jdqmg5=Gn#6FXd_PYhFZ9,0EIbAT3M!qtB/ZVY",7PO!R;/W]hqT8H_.F"e^ZEV_%%R^Ys=$oo&L+h'9KL,,a$@\TYgB3'?$HC7/Z^oukTjX/f&hq=ucu(q9%pd\rPi^s(CgjA(3$['[o"pjKdVQ+anWn&E;SA#J+'iME%dc@;P*5?\d`WC4mfoVqSGBjnHicmuYLrhf*jS6l7C4R)r->@s]..qg@9#>Yk%gdOMU6'G^A+_\uk&hI+at2kFM*dgd`tdjo+C^K$%VBZd*2&33t5"rqI^-o7V;_6"Be`[r_%thS^5@I^-o\:n>at7?Y<mO0+W^^'G`JB6:eB"ETq66W&F:<36lP.C!orpY[mUuq=Uff/K%O91"("rKZg+u<C0ZL]ZNJNs96f0IDf)0n&g2:Y<-l#gMjq$]A(PqRQkn'hM(hclgRN0<Fi$A7@4QJ(cT>h[u&&21;F@P2PO.^F$/%l0*rWR9X.\nMXg_X"49V>FG%]1;F`deMlqQnKSP1<&091?eE]eMh]`Hal9cHi=osZoU%i#_tHg\OY`5()7rV4$#dYS6?ikeVSMh$%9HbM<@L@+h0+-M-@Y]>*+NIR)"m3BMGjX!j,5bXYU0ftDIAR/["GQnD&/\jl0#+jc)Pm%@Xe-Tf*?"bNq)2Z=pp*[q#JruhT6&"T%b]k*lOf?Jgh[Q1,D'<YO@gm9P.lTiH#VtmYkG$fBGpHRj>409jja2ugk$1&%>gr/LrDCjif^<_)nEi6Bl(b5n9)hK0!LF9'GIq=g%la86tqjom(Dt.bH\?8DMNu$=Nq[SJ$<4=b2LW">G"6=9b6t.q,qce^dVrhhpi.>!t-6^\PC&:7%`c$>`X6k?N7.8Us\q3l;?OXck%gB:NR%6EEoR)RR1gP3@)gsu`dEi`TP']5CFh^h3F.`6$J`>u,uCAY5YA8DZ^o:P>P4h;E+11M?'f/LM07tR/,fo`O9UOb;eUgrLX%qU8!#6jUXbp"MU?+"a"lb>;TSS;@YCKX-HEEP!rCngQ[i_VtKQl(u3i$I/CCZ,B*]Q>!1Z0Y=WRk&6:4R\K&rh)h#7L`*G,E8Bbn%=3M.&^p%0.69^`!erR9H/,h8oL2E"E]h>c1%e^bp<AJ$cA\@<EH^!V:7JdF%hFs:Mct+)EM<,![aN/m;?:Op%ZB6JrQQ%^Rm3J`i%n!f*>OTK3[52R]gdaKm>:kCKA7oRkm9:Up!G=T$KP1D`gdK_!Y+?crOham.`@787`b4aDIG<]:AlWZEX?5k!b=Q5M(%X0Wc%Ou$n%J&YNq5c<qNB9OJ6Hb,G.F0QLO[diOfbP*>tHoA!g`b/Me#E`,A4E3^L)<O]Op<cFMr@*g@%j9Bq5,%52'"^AQ)TWd.V^%0hbi^F[%4dc>lXfZ8CoEA8&C5-ZI8DH8a*\G_e-P78UG6[nA%_W)2OL+(C<(26`lS:VBrBFDaV!7?(7D!pTo@n^cmJ)hY*DN`M<hiO="7uoM%F"A>a&[#=3<q,)D8)8(;p&8to1uqn86X'S=X]ISm]%ACkl4hp:r&V;XGVbQb<MFWm(9U6/naI*D=<6+]4gqaEPVij+NL35.1KI(i%Tt#7+k]129H+#^34D!(a]I(KlNBCB8FF:\1pl+_MO%\\<pfHH9[A-1p*1FVcR<IV8i[JpLNP%44?[eM2^isQgTNfp+Z/Nf2LE4U'%XHu5&LnJ$#aclj_/^nG.45tkP'VHgA!\SN+)'mdj$d"(gfR1s7+m'GnC:>8U3rC[RMI1*Vi+>-d\`U>j&D3182h\B`HeC)u1Kq,B%H]8nH?B@\;[`?oe#Op8[L>;-Y@SPK'<:l@EAF6Qh#&B#f?:K&dUJU2V;AF0kTXs&/nM@Uq4;n_dIL7XM]4bg-qVkr".b`UuS/]XG%<+0!8YceZMKT[e0>OPN5K6a7Bd(g^AQIt"b3=Pk&l1QMlfTGi7IrF$5fK8Veq.T!5kg#s6^p%UpiTArh`fG:$oQJr-oY<<fig:DM%BXo3F;b3F6*M&E35#EALXQYq_\==X#?Q9"j=Lb#<l1tC*b$ORtgs*7"SYKBX'#RXoRF=4%HsW1Io\%)(nB]!!,c2Im@NuuU.D+(Q%Gi0/k.AR,dj`T_CZ0r]lrR&8GYe'<1_1Z!?BGH[G$62QAL;pSj1Zr)aTLS&p/rXH5F1@*_`W`Uq&,CD8O1;'#a0\W-Qr^+Lm*j+\%1PlOFkp0)DN'-unnrtRb?Qp!Yb#gYhX<SHJ`c]^ET4UK^S:@C!%oiip,"T$2GH;'OR0m"YatkLHdAKJ$[ZgBegd78WdRN6BIV.8L%Mf55DcR`tU$dTTHA5?RDCB%Fk-LO/:<EQT<qDbEn$TDu0N_=aAY`ND'?2'#X'?+k$&f-@PIAuHoXjilIMF.kaq3H[.?L=_mFq-^1%Fh=/S2]blHd]%BZN-[/l*F!%2Nk8>\m,TICR<WRmWfs]q>El"JOfa>>dp%F2FFppVE]W[_LWK>tff5bXk7O+(f4Keq[>P%!c>6A"%/[qq'I]H'nCVR$.;N5M"i0Q.F***e`59"-6d;`"LRmDc>PhBUCqd_?i3=seXmCWb%?MXQso-$`_HHqIa9Bl5?PioXXdB/DEpu#'g%B;5-3%V#IZY?Qc&GEFGh68"jrk[EfI+S/*kS?iW?'OB#mgMLc`>VEMXXG`K_6*=./PE2t.GDAn8PClcO,_*c@Z>$;k>&K',[>`3X%Ls(7LCu97cgS!(/p!ZJ'([t'*FrdZf+BI2X,40?_ddC!;.q3O1<n6o13HKIV2i85*K><(Q)HsHjc83H.DsaI(kqXSg#RtdHAM@`G%j,4XeAKp!l+CH?`[#EGEZ4e_oh.E)I1Bs\'+krW!WZgCEHFk/8<f(l#g?<&FTc5J9<jb.NK>YjGC*0q5_62%>nf3)-rq'MRO=ffO%[_mV*YuE`nNP*##f_sZ0VfiBSo02>)D?]Jb\3ZLG+Mfl:.101,Wie<t)^nTeX2nQ@,G5b8=NfT="T6^d!D@0EZQam,lUKI0%Js4j%/4^_4CkE`G^"<G[C_=IS]JO-Z/6F`A)I:-`="G`V5InC9b[Lj`-@&58h8e9'Q*3#sCO[hOe?2QBN3qV<5V,mh2Yfm9C:4cgB/YYC%P0NPi^?]SL91RYc<l8b!.]'3435$?RGi*j@cq$Q+hKM`+HhF_`S?>rOqF8nb^lks<16g;iW$*092'aD_.fc;M8$lLMmb-$4_fN);%N)YMBfZLn%R.[A1k[WHg[hSj,C9?%^H:i6g^.?8m]Z6;Dkc/S37U^;hG`_GpOPiX\$uLf.UPZ_T5(72WpC7(Kb6slR-u(h.AG*Ph%2GI9`@<37N9RY\7>Yl_ZP8FJh@*CD^+N?0G`qK<g.Dn5cF;/<ior[paC8!Z,p0)mY[H1g-2#<$Sa`G`qqu8bd81Ue5*/Sroe("au%Rs;jWqeb_=Q`*P=hd."LaQ^G;[e5RYq;8j`Z[_^&rpi;PkJ-kSci<nbs5EGHrI=\Bj*t=,h2d'UYQ"Mcs7iq8r)`dOO68`Tro66@%e)12]O8ntSqY1$b++AV:_r(EJ5QC7</5Q4?bC<_s^V>'KrRh)DgV8*I#l&'4m[qL;rRL]#J%bdKrl9&30'C'V`0Y+<D</3cae/O$%^\mDIqlg%r?iCn:lhf_gQ[eg<Q`"1h+FXZG9pI]9)uQi$?IKP4aU<U_\^r*^gI-kPFG\>knuK-TF7R:WHL<X^j#3%[p04.rNkc_P%o`+i8dZ4A+PIAb,rTF2`hf?J3bRA*k:SFWP@;NP[PdF#"N:[!O2S=!CmhVls]DAA];ep13pR@3e'<gt%&\XcW:J<%/,ttcE3oH@E%E.:W2j2>&]MpnO<j6_jbXP^%D(Q56!]NC!\EHJtjin'mcQIifFo>*W7:Dof9]"HhMoBsun]`m&TYL4bJr:F,l*p\6NZ'cAN5F:?$%CT+,pA3EEqa<(VDRV:UArB)p%a:e5IlgOTJ;[r%IHfstsdQRNZOW$5Xf6u2@PoX`J?41^8aPXY2G`T7@ZO`;/H9YLFegkN9/V;,9%rJ;//[i1;e(o4OCkM4E8V>HsLiCE4Gn&lCR+f&<04YK^umQ7DZH/l%_+euH+L:;MU<kA3\k`le2J*T,A6&`<&(pB4n2NirmeaT5Y%?rX\NN<jY_53fV\7F?"<YEsB5bZ*=?.'[X,MgtZ3QY]b2k^@@afIC?BXY8&-8(tF8lPMrP>KJcM05[BmQ+NZ2<8f`Eh)TetbNE+Z%=rjobLf(s=U>QMlYKq;rEmb_%/DLtm-u`KA!NMQfTXtaR`RL/2JAURIO_V8)m571!6KtJs8sP1d1.::mJ82TtS=_o4hFnOl3(p.?%%?,I3,m@'Wm-@AK#YB8h^$C@d+^#a:6Ig%-V4hsXOr+#(F5N6/HL@f>%,BDFd;+*qfB+fin6Km(nlXH5?)/9<Y,IT9Pgq(l'dKSG%WZ*SaRt`Q'9;3u[i>Q^Z8mFuc,g$7R)2eR3af]".Uoq88<k@bT9_lohOrUN5j!%X+F#a-LHlge"!@H3p5P)@5%^bMLO@IeM^;hL\%JWW&-$Sku,8K0tL7aG%VpnB%($mpf[dl6HMFNUe%ksUc3r?;iMX"KLGdlHgob)m$p_AV\@;XLfTml?@_(='lfAm-YjA8P83Xk')@%l;lK1("lYK)e\M@&<3"`4h0Uu77F6S_h)RbK<Qr)Q7T-2gn-he4B['7R#kY(E;\9!U_W-TcUm4J'[,0QX\'oVS"8i;gf8KhF7,$-%rFA:k,4W6kl3]Qn>AB>V5hZ&oSYjk-&l8hYZ9HRsF3^rGH>MA_S:h8H2h[4J?b4M3HQVOeF;n'N>s%0:4#n`<=g0#kT/t9r\"4OI%JZ4^[OV.KiC\qAUc0+gNrr)R:EB)g(!JX=4Y^%K/,F3?A9tp4\HAJ(]3-)sP>F)K^V#5h/(hgkI=36nqWOpoGj)T4UFWV]*i2\+R%mcOR]JJI[=oN9rdl@LV/pi&jDjnb=Hk(Y1*U=7N:!JU>deZs86)JL\V/]bKnUT89;I_,Th.n)huE`YQ'oF[N`@%LP)[!)(U`#BNe%?:5nFkIKFKrOIg"bYPdH04NOb$nC`tN&fWsC['JH'F74<=r:0@VINr7H$#_?\o#@5IhWe?`J3Gk$Z`m08_a6qZo=SWA8^U=*?jWh%p`a;j%'!913]K%R'&gt$KIg+[.($CBBX/YOhUPhD:Nq.c9PF8c5A-Dul>fBO*"#T9'L]GFoZT<63\\ViF3dC=&B3Cds&$&?!c^k9%"eECcV?5q^#m*\,1+>2T6f)OG!\4)UV0_I_X*IHVRL'S>Z!-E%-75PgVJt>Z<VF<]O(nr6dS^ViIpQq:S'MfF?1s[3['P#K.J0VI%7o^ml\Btup1SWs*:UL9ELK@$mWCZ@]:mW-(Q;4-c`jX.R+]^r0qXM>nL>jSai<hLIhl/=";-G]*YNJ9@D<hW?eJfEIg>?M8Fj2)"%CQ?[I6nj``KpPMDG-RlYfh`E,^:LPT-+O1>Q>k751#>L-fp@Qlp#Ygohnh(^fj`=+;"`#K&c??Xp->lXh4h<RUGPoqdM2-!i\pK,%[!id#_$F=5G97Tj-q4[`:>t,F&=kTo/q$7>=`O^B_s2'I/.F))jjtfnqOQ.Kb4F"^MVtm"TTX-aQ*.p"L1]-%N==dq=7b:rrntJb%&nR6;A=Y/m+_=0PHi,rZAFInU_E-5<i2\)*#<=][d=RDM4^%c/6!I.V\pJn:)S^-[PMFShT0@s0#"g/poRQ6#%&sm5<"$i_":;&H%)SrlQKm4dlb^i`J6mttl21+<?I*U2$@lmCTb.8:_)2>FVAPOH+))G!QH.S0\k%o?m^0=gITp]4f[1,59N,ApD>,NUjGX,UrMqStY%D-D#'Re'?db4U]thQC/G]'Lq%=42ne"4XBG)E+tnL66#2H=6]>J[jei/PhY97!5.]]r]QCQ`Ki7p;<WNhs\2>.K:*.XghDQ$.8Y/%J_ROI#BuR]aoHu;4:UDLkeM.1cZTJn\QCIl4m!VB:YbMgQNO'4W9M!$.bHNSlScTH.u'R<K'8sVA:1jj%LWi.Hu+!:OFJ/"kEhtB%IJ:4'2_?H.rI'L+,k6_K[R]5O%Tp-soi+Ra_`]IU0HlBjcACk\Ve7hac:*Kjnsj1qOk>Jk?3B[lDWg;e(=1&dC%3`o'Pm/p,.KOQ%Nh&$5n@%fM1m(*d,0!EdXPa:hf`3`45l0\(:gskC]Gu5!SKLZWYQbKp5TjoL?JsUb)N2N?XYGbN.hamhl)K0AZu\N's)bY)Q%Aa+%?.+qY'olI"K6bdU^!YW"2,Er8KgK-T*b!ptH%a8S[)%c*@l\bF;r\s&`ibWi;L'IA0+gNPIZNb#LCI8,4`a-c'$W]-RQ`QeVXpct%r+]pmdWqt)FQaUo<`SB<@L9t:=_5XC2-UnGWueX_h3s8Z]A^52;lI<_l^h7ql0h]"!NA,]]11A.NbI[V(N*Bd.+1$Z!3J<9c)+^^%M2\mf_],+4@SMQ^IYbI3&Jl:[Cgi<$^#>-G$qkAFMED=]13,67eIltKGlr;VG,4LeVi&QG.ksHte>m)#f]Q3p-$c"1rLR#N/]ZP@%r/T=U1"`PP;'cPhE#llR+H6'u'roY-0\_5BORII>S<&`oLq9Ii3QCs5-!m#h-Ec2m9oS[#4sU9P4e^ft>WLQ>l1sFpomJ%`?)@#6%lhqMYd`3YlidqT\%g1K<4U50gPj=?+_<%<0oq&8A]`fi=(IU.XK_Um6\'Mlc$Sk,K!6\)^(r:Vel35ABE<oMI"#llhFph3n/UrZt%K'JhD<Sbj_/]W=9"s;Al-r!5N9Ig#ZW>E'n@%MFZ68G#_aR45c#B<D.X74[=>@k"6W1g-+/QM(tO*AjcN$F-Vhn#Y!,!%'1^,\T_%-L/73KbZV7iJo?NQNrd^4Os")!On#C9<;\e>YiV<Xjtk=i2Dt\`492-bEfMLq8<`WTLYKE/+[5APM,ibgc*:>B#JuX[=SiR]SpSf%Gg>%DX7pb?MLJ;Q=\dAXeg[e-OC=>!ppU?B1q$W`%t>;lSg2.\*L7;L=%W3S9-[^&MrX?_CI$h-#]_O@l8c><S&X1E.S$Qmi)gth%2g\FpEI6f&\pFiS&iU_o004.2QNuofZUf18-jX.d'fhQ&a0)TL;<d$$;Hgk.A$@_7/(_Sa)d!62hd6lS+9!\b4mK*3A;"B=$9_.h%.CW=P\f<b?#IWU/B''LY[G.Zi5f4iXdcl%M,e\sO_O4ih^q<0BT@[t^l_T2iZc9-qYpt^"iNPE:go8o#-j]U_K#jQF2fp*C\.Z<d%W.o#^)S.,*StiJQH`5=P\\FGkg`<RM`'8V[Oqkb=R8*h8pVd"6CVpBl;,KSQi8Q88ohfgQnpXG]Q,Lr:8Kn/Emcnm);.qi50cKu@%-/E;frMA:W0".:B1?i>\?=<(qEZ1O7WGL_c<391,D@gm!qB4nP=_IHOe]GGHWQ,"LjmQp9LomNi/5Em=W6.L;>:hEn`E@XLs-Nkf%BN2m56^pRW2A8?Gp@V<&Chi+/kN)H?4Gn;m\F`-a%3e#DU""%/n0,[40k)B[hA%IhGT6XBU\W.q/*7?k:boisMbYqdV0(U<b,eE*%s4$]'Q2,<lY5_WL<96,YC>>I]qOL0@&?f>=,K$_+G*]oASX].N-*"BhPsD1JG/\EI[21h7D^go#dOSi0Pa5`6!Tob:+scfl,>l,k%fW'nXG"KYlS'ORQ&_NXm9JZ[&K=A1GW:BeIEuoO9k\G(7fla#eD@Mbs_SL?:;h'itehJXW@SSSFEE9LZO+*'GN:r8GGF]1O'CG]m%%'o"/#4MpYOlQ''%f=@-K(qa)4+#@\Rl<07FNlUC_a\rY\gH@%^-JNm*D=B8@b8m]b('>Z>?Y:q8C?hr>GB]\-0VQU;k`%Kp:ocD%i!#(9)?-V!XiND];/K*feik\mG"]qo4YgAdBh3Ac"U$\N%YOT$87rm9dGWWu8_ZZC7YBP&W0<0fZYbI0+N[dH5_P!O9)N6ie\R&*%#S^#f*=e)Dpk)nPo&@q^`hJ1%T#Gqhjt_gs>Lq"g2ag*de^O=@9`M)amWaX(@TVK`V&c8:Ztu/u;m<q?:*<s+\Rf<S8j@L'!'2T?%bTS"Yj'NMdT>qH+^;e3>U'&B:4fV,e,6J_Bj8em^AcJUic4q8c;!$dJK3OJbpE5?LW&HQ?lHi`SFf`T$]jP3@PqFNCJ74Ua5:S=L%'7Vp5]]9M=J]Q0oN4c3=2^o#WjOX7LX'*Sqe`0QjGIOl>6t%Eo&'L3t1otR&eMpsb,,Absp^cPZ_82FgHc=o)%L83H1ds;a0gh=u%*/fF1+X,OPSYJgPGsWViUh5)p*&f.9S/6@E/6[*^gI)bBJt7eWnK@^(OoT&=f$eZs_l%A>Rna"HLl@-l.^M?MDFn0[1&p*Im.jpI%/KH1EY4%OhHecgH?AGG0ViLSHgGn&l2EJe1B8:)"(LE:*&L@u$-_[Q6,qgEM3k\R9"f:XU1f]\HnNkR%NS(VrD\O\%9KmLAR^@)L%Ras!"<e0b2[0%(K,<E!$rmqp.;\;3,S@A*qU[PZ_a8iR4)\`t'fhQ1`M&/7/N=Ic@SNOa2fkY%`\W]g_+c%HI@`gZJJsdtG)?_5&%SANF!FBD5Q.<);^7FXlc7&br`fI6FRkjQd!.`!U_%'6XhQ?*A+Vmu=p@TJiQ.SB]kF$!=WMp0!f>qGDd'VA`mmC1=YpQG29HTpM_%Yauj7KN-lhJ&7ZMEf(@]@C1DWgY&fkgVT6<Y.Gn!o38tPA.?:k;n_EM]"`0u=W-+GfcU2AqE=.OAOB.PrtJSb43EXP>9Y+"p6Q.M%4k6i/:Rin2V2-,Ta;DO(g!I#E_\+2?Td-fg6bRLk6onPfYPFZ(&Z.Z_7iYKJJWKltOA_/\.8t8K*o@H=/t[#r*EAILHRXWa%:trN%(k_(+R?.F/]Q(QiK,lFt!HK(>j0o^$r+Zso-gRcVH^,bnUoR)#86B6%JRr&V0.i.:k)R$6OQnQNFJN_Ia\Z88I[O!Q%$QuP][i39%"*pf?L]D$P2'?XO^;+aM*HAt(.-jc(Lh.2s(bL%T+:8V]mIW,AM`K$V8"sLII:aWR#kPBj`TL<$qjiMSNaAPHpmb4)<mh`(@#S&u%1Rb.1*Q:dCQm:?_%7lio16U@.>%48f%CQC[0"5d*PdgA9APVj.Li$^O,N3.!jTqVHJW+$aMOZK-DHba&a9rt1r\CFu08KE$2SOgX%XkS72XiPE;50&)Haq6h:oO!pa"?P-Ln_p:@o.N*7h/dmN,6&6AV18H8\sopQ8%1Pt^`jauad%4)ef.XENt0gdp[O&'cj`dR;k_N\%fR+d/Gm'aHNpHGML@+dNq;P<q%"VkufSp4\pT+;%=1I%o%]mN#g445<:<hi6%c>*=@,+24SnInT8bo'0i,se=@?7aFNVaW7``IsY%c9g=WY(#U/bs`1rVS'hVXRA?-)WU@X7fE/5<.(UN-cno,#)dg@g<<me8B(TtaQagIW;Ru7Nu7&SSV2\jMJJfI2qW*or65TWnGAk)%po+m2:4M6T"USYO'lo[fd)7,SM.F'C_9U*'5ipFcaBa1tlQ1;L]HW9:*tAW.Z6<Dph1H^#c]jW8hlN'/Bmb@i\_g1>F+Hra>>hV/%*A5o"V\P*:kMAae;7Cps?Z*SKF\A'qAm:R>da4QO&%l/AiU)G%_T4&/ko\cNWQ\M@4&B8/oLhF;hWg92)uuPSm`]@/b->c@(MMo>%cB(&+H\PRm5.A0cR<mPGU>*i^eq$,SG/LWN;5^cGLY5epfmJ6/a5=@PQ7:W11<c@O)/g`f2mZq=Qi,IMoN:K!&t/?,d_L@u'k`<c%N\Z_I;Lp9(+F<'hDWsF@N`;\=p&gmnIF\'`:<onLF7#mP_dq:Dd\A$c_I-%$j__nq*5k/O^GP%=EWel8/4YM<Uk1npQKA9XkU/*D%&Z<o&]dZ9R6`Oo%>o7CN5)J0@akN.JI"")_hm^U6;JJ.>$C)rG\\'0I,Vrr8\<FH"05$N=')](^`@cD8@6Naf$4SBu,!Xm`%4IAZ%XQSdu3o_+kSLEC[)"@bI\OZE@R&8=?)lfKME9i.*lT*>?eq.jO2C*TT7iB3i:4@[Q;r;:]Q<CTiKI'j5rYi<YWN9]9;/1YB%q8i-%TX8OVYTB'Xeoel"K$t=$?8]SnaX$:G\M`[(>nP;[1T54.gQBai:3A91FeRi<UkCF'\.eA]5ZG/Cr&t46;9Qol-Y&NrYA@k\f:Rds%@<4Vnd?5mY?:eN+^I>-Fr^n@V4G8A]:ktV*$]fTkFP.Yr,)?o,FC_<gDHUrhadMB1Y[kf8);-%dZ9h?k:Jr4_B$uEUP&*WA<>W\e%CLPgm6$."dW85XoPldXSK9Ks72jde^#YIo"@AXJ5'H5,MYN\YtVcN@'5ipV\Ae$n,;reES!sJ?%O[]6h\#`CE8BR07pL#8$BQ!(_%72[.:+D"qV8]+0)!-OBdf@0glfU=mbdip4+k:<@FRr"./92M`e&6?&kg?[Y0X]Ris#pZ<7-2CfXPCVY&R(&9WeRn)WWU4loA>!ec%BhI%*Y+%>[4.Z3b^I/1(X#n:i:!JtY<[q;q2$=.N&1<$Kf/ZE)%&MeeM`E`n,<9+&;iR]/PgBj1c6pMOK(&g72Y?1tVP-9'[!'OQ%bSh^Q[b&eXFfb]pGlne)3#B[h5HU1"BCd&-8:-!0a@@:[M]?X!>'JCka,2+&=O.t=%#=Ot[:Dh@b<&V6]Ha>,dnGi=RqR%Ib8Q>N%(B$e=*,An5*Fq_o"k$</[-^D9q9r4oiOlrT0HJG"3L<l9X^0KR+_*s&Se*'[mf\Ap$;oZ=9hT-X810pm1%4K)9mY"*As0uL/eE&H%:H:dE*99%%PBTN3"$?O=[pA+i*nSg-hPs=2/RUql>/QA`VdH^;41Tg[B"1lNSZi=Ol3S:#<tWcLGha@dc+#cU3[NK"1#@MQV\o!\%-F18f:<RD,!j)-U^6LZoQ18O]]`(Z$G)q@'qmlqJ+bG&&;HLoodPhTf'tGKYO=7rTe#X)cHb,Q;Th-;j^6*+-T&#P8Ia?+30.X;X%8".l];qO.]OU9m1'M],bne(NY88otkUkgfQ#?+"L?US3rjsm;WA7Yh1E\R=`S0,*?WpJN&m#a02]CJWVq^SkWltF=bV_FQns.i&'%rF%'MblGup=[:)qE_$D"b*R-F*X3uYEC7FTj;FkOTUj,0^o"$*_k@;\^9L!^-&X%S31M-B3*[$BeKf.\CBnj!bn`#.:;1Z[c"mF/%\l%#/k46Z9^@jU>TLieT9VA<#EY+4D&f./R=nG7"ZqqZ!HE\>`i-2ahjFWK^VpoU2'C68S_,(]@">WmRF?Zf*>k+G<0F0g03+&VW%c))>i[OYUeg#R)6<t,#6`!PB"E)T;DhMLEMl+h@-DnCXRN+$uZj.V9/;BIo>D<&-GTN[j@I(6jFMG^^,63J:?bgN^=o41&"SDs!2%P#[N0o<b"rY"W[>Ur')6YDdBSRqqF>d:`rSA']VMcT/QG.M?i!%q1O6a%)E!DV)]7Dp=-)VHC5#?er%2AuMQ&&3I0O_!APuR/Ql%%,eoBMEf\U+9EJ[F>W$+[.a8f-4#<G_E@MgNM+HmPLn!$T*+#7"jd:sd<;_pV:^nFeJ\eqr<4W$SiB8X)Ll2RJh>p-ng^/!Vnsfr_%4X\s6&EbnU/IQq1>8I"#d=6U*-f;BXYM'pE:L.X2f_7>DmWE%c!OBU^n*2/u.LDP*!E1!VM*,T<QM\i+=@p9#@SJQ6VrB224"HCE%?*bp'\L/lU"Q`iK6;*F6#4q.$n?sO9##VsdUJs+?geb6\\77fE(A9N?cS&qiqfXb=>:LRi]:"0l<rbgbO-#5]EG..J/9(9+4V'd)%5=DH;G#'!U6lbk"Ob@S>#=S'E_]g!QWY%Gf=o1R!,7u]H7e/4Y)p&[e4Q`eZlT,+#,r_Im7)aqk&EeY(ebKr!8JntTRs6(VLXT*$%BCkA#/t.j056ri)>#)@j^?BAcRPrqXdZ0W6h3eCPR<H)f^pse3$Ls3X>]lWZ-j-;a'<B\O<sZD`]ZF#m.OP#'3hKc^g$a$BQ`o*>%nPa*A"/P7@:KkT-H"Pq':8L:RV`<%GaI&:s.dDcEfac\@J:/.@TD/T&(,c2RanAXUQXgGC2AcL;mAhN#(160N1,lSg,P"d/4a\-f%kEht@rCI8h<O8lI"FZ!>L<`Ab"Otkp32[^6S69JQ[2-K+Dk@\SS_n4=hV$@Nd,X=6?Qil?8[N\7:l4qT"-C;(A&OVNTq`j3<!QI1%naFT"?qMClUtKpuT3om[pW]ki@,&g%.CA^l42fO.bnb?^lAEu?<J3+t6$j;0P>45FV&VgY+iGdd#:!?^aekb'1?h1o8lIPg`qj1n%!=FaM7?Ujd-=gXfPG-S>4Hro&@$?bli&]TqH7"<7W(kb9Qk;lR*"(b1;YtW$GK$X2K?3MLnbk5^^V665Dd-+!8o3]498[hOjSN8F%o4d)6jA#_9A[nU(0L_J2(bb$Z2,2?*L"E]'*!2?H-<L#08C^(6?'][N"JLu3`G2?JlnA2m^VM86oE58DFnOHt#q/Z_\rhc6\KFmB%JqW\\mO^kL7qI*-U'1IAheFXq3H#,^GM]r&/u^`J;P'uCAoGGLXiQnt3WO29Yq$isbkJam/dGF6P,6ou.!LKlZfE!H-)cPlmZ<0<%2U3tYQ0l_AI^re"mr5\rdAMTfpJr&9_W*>-G,1(kPCWd59[93"SA_5s#pSu`9J#.oJSB_4cOFM[f&#`ulrI5-eah>a;>EB0J%=mf%8MKlHXE*l?7`NN%E%m?+c-hto?H2inQS\,JF)16$g!ZK3E9-4u,TQ"/,(o)igk6M2cE26"O#SkX["%C%:"&?KAnd%cde!E[ZqAf#%@O%]*!0tE5ekdXa:-Su`pH#@\NN/\#[+[ItQ1ud_=^M*qI.+9k(rqAE,X?Zua,Ur64bu(&rK34PbmhWHT],I<,Gu"[q,I%S.Fh>6%f.#7e!bj5deT^:0g^n+F97:5mQ4h,!D]JSL6P_\94sK!R;ed8Vo2(Z$SqHOND`KQ>`89]keT;-bpG]_Fq:4'l:0",qFQQa&]IcR(%OL1N,8pch5U*o"gh]RhXjR@n_`40kUq][8;+l3!SLrJB(>=Ol/C[*=^&:!j[>C0\Yr19m_CI[3m/Bk/C)4p#XKD(iB3+Z6nnBT>t%<,/(nh+>i?OjebpSW>q[G5,036"CXO9@1h$eWEICglWAbiLm878,)g2q\#c@deFekSTX`6kD>RfHmYMM.8br=dB-0d=eT"e_02WM%Zg@lX^RCGVPl$C!AbYl\/=3oe@cT<.3(ShL4!!RlWo?KcG%m5__`cU=KQ%2e#M!m:h8L`9:K/VCs7VrohME`/C[?4DbTm``P2GOn%EB78\Dl#3S3-(mDCFpSIWClA0N4uYA#\J.qF-N=)&l$8FUt5]t6,-3[Eb]]sad/bK5:SN9OqWA"VJ[N,`/?2&Ocl/cFN7f[9D4%/%Mf]u8q'nHcK^3a(`j&'_4\mN!Lrh4=U<QEC;nEVNeA?>.]%W5_1D]U:]NH*\1WO?_pcZr[%5]`Eo]s]2qn?'=n^Ic::SB)uUgFm>%M/#@6[IN<,J[NEp9J:\:k*_6;8a'RH)BGfQ.f&UK75\$pb2d$3.H[%i*PS:+^R%W=XYH)%R-]J3F!t"lq8qWZB;Vj.k?&LsTP#?`%-fk*b1jtuQB/7dIB,(;FBEBAK".CNA!JJdEV)f0o,:+MpbY]-SDq!_C,D1-7j>;PP8Y4,o.:U@U+8D="g6*p^CraD%^+b(J^]HDT%^-aaa*[*p$UXq^ARU:_<//$6UD,%^'kfVr?.kL:l?lTW-kN6=cT3on1rsuP.76m(G@M9RZ)i,!B-m1EAq0#d[;3d)oPJ,k8\Q>S9%juYqYFXpG>r?@g26(k6jo%$$^go4#T.`Z>I^4_Y;^i1\n`13k*D!U!:7jaSSb1tm4d8qXA,,.Zsfbi5/1Fn'H8kZpXp@HHfpqA8p%MRnlF:T<*F9'8#8knP=%Wj?n6hr`>8VsD$IFnAkjL;?9Fc",U%GM@1=`$aa>1$A/<[q?pW:@7a[\M*N4NpKJ5&\<ePagK/6e+H8`%\4.E8^7:P[IssC.h`'H9d]Qj/R`A3t#H'B04?=H-"22kl?")t2g0epDoq!^=XhaJ$W[XW'')b'>H5`*slF3@rSjdL\KoIJhB?3m,%MNI#nS[^&(fPuHSR-R[_Nl:t-1eD/0oSk0A)9obA$R.3@a85Vn%"-r(9l,aYSU:cE`">r/Duq<EN^P'<W.CX54H819*Pij9cj%h/%^o#(mX&feW-eJPoliq(E2&s^q<+>9$@t&0Y]N"HlQN5DEp-in'g<NHhM&63\krB-5FNp`9b60rBS<iWnnk,pMp`HpJ6>o+f_Jk)b%248'NXmK$($`#PE7PWZj,80Cf*4(HBk%dA(Rp)huGmnPiaD&De%u%fN4:3eRM/K>!RHJDGH5X(s?Ol2lm7R749q_KUV'&^D0jE;N%n9Zp&A1LeTabEnur+5W.Pq:g#+R_jhh]mF>fY[oZ&UN:#_tf[m6BE7Vg!LBHfmsaQj)<?^R.HB/Q-_dcVCWD+mb5%T0U<8:OD^9N%kcd[f2\8hHbX@Z8+tmI<q&rM=m0#YgSG)F+ol`Au3W#>s>Eh+f3^L33i6p'aj45pC[#$TA[h-BPPHsOVJs2(E`smO5FghlaAb'p+%Qb;nAN_TYcaNDkld]7sn$7;B[4Y:gY&;I8&ieSl^72,i\]H-^s?!BM/QWa.Wj]m4H+o5[>:O-9&%@AoBGI/!QOJ.S[EMS(>RG4O*%6K,,2q[/',.AnMI.>b1N'QmL\N;JqpG^fHoh\iOn8[XdUrH%8$WLabYoRhl<>1lk=gDScoKTbrGC78%-nqg1>ajHq?$AfXg1AsR9%U::3p8C[_&H:ic!Ko%XWd&'@&$@QX2]A?Cgnlta\W)`h9pJu\u7i0$B#.l%SUr^l=BU`qo4$&NgLjSHke2KC;5&j2jRtm(`Z%C52%gE4D2_/2`oGl3P"Alq,Fo9ect,Yl>A3@1H>KhC(rNh!80*@r;t<%((FUHE+WOca!sWl2#%\(f,F9NQ;]CuQWfDF?");oGN($l7MJ%/M2ml'=QIdWtQ.0Wu,9-$&K5J.ZIj%oDWJF'4U3D8DmVSI(<;EDgcoM6Y6GTXHo/1aN[q8TAD"$f!LnhbiZ0MY2S-P4suXO]kBr=%HpLaO!k0u_L*m\DY\D.GmYj5&IMs=(I&<Bj8t5r7Q0&d4BobY+*13eB4im##(-kNR$6M;fL<%G\_s_=+k<%#UT6N!^$)%\H)/o"L%cJN.R(82>.8Yq-3#ulS;"QA-NaCVuW3>C/X%FLp9a!CObd4AG%%S-lRX+arN-ED!5:(+k`9T`b"&8'?>QTS=H4l,?d;2B>cL?q1m%gSl>$$;2M_Gi>k%.E@DFBd='IVhMmt,8J$.U^)$aF:<U'/oiA).qC-+_tiIdV4;W:.Fi^tm<D!#'N*lG"b8ekkjZMCnPdmp6F5".%Ql4M<Gp;XZ3]fR`=;;+c*jQ)4Tg%,T`HC"!9<nHV7%;>[2R![&H=5gcr;5kAFbBRcV"jcKmJ`mg._:7$)-;>A"Y3M\H="V&We/RU%?Mp=:%4Xl6\[sO+Zn9kX8OrV+:/e7YrdD->VW?=he]>n>>*`A/U_gR.j[+.4!*KdUYJqh?AP.3-WC+,(7fJ2`8o??rfs>(c@[7JM%a>jhbbl5`#WD*.KE*F[fLfMa9hiYa]qR(aSb0o@42uBU"d#uHYJI.8$&X_=_.Ao4^>c9(-*B@CYQZb/h(&&.i2m1'#OHB'<Qb7D;%egt$(>ENqEe5f8!7B`h\0FQY1cmjl.9Ai6ArFU0WHXtVM;oPID$#rTdAJH1#Ku(U,q4M%;EV]A:5-prFr!bptaI*qj6h*b_#!.*g%+Z=HcR6(hc`&&(Bf9(n(WHXf5f9*[$3_5CtB$og2Zuc9XL=0a6IF3Ah([rQZJWr#-4&^1%H3^#SBgJnrkSsaYL%p"D9P@?:)a\dh%l8GMP6CCL30d>.CdE:r@dk`91L1k[T'hb?'8kMPU2\e,#qq8hQi%ZV9#iZ[MT3Ke@b[G+1%-M)Y%_]^a\K9,BSC/It5.&L^)tKB@%*8u%OkhXgqicZ"1IJ-IoAiBG;AR5%)QmXk]@AfJ#5*`m=b?AS#d>=l#f=h-0mBL[ZobY],fnmWT3^OXOj`)Bf8F];C=D3/i>8C3Z%f(8H0ie'4CDE_"?Eukg__o;Tidb]hgf%f[ULIH;H"j\hLk50NSR,R/3r7n$3*uR:0YG)Tk!q&g"o/N@.-I3f0)CMS:jVjb#6fNR_%/Vf06S\RDA*!qHNaZ&2I3S(Ie>b\,L?)QhgP.J]]JGCY"-;Ju3BN^k:][H>g0,*jQEa$1qO'?E9Z2=-p4":NtNZdU;2Vrt53QE(h%B@E#i4GpXAG-`eD*s!t>?KFM&9<d6sQ'HVIITV9\\iVJU(\NB;a[*)K>7Y^m]!pm,T%f4XYHN]Oq_mPAR1"H@I1"fBAgQ=+c1r:X%HETe5hF=L\i5$cAqL[3@pW74^],^?)qg6M,'?,;O`o6:]k@dUDI/K*YYqlJD=9[]T37BE^Es=*Q.bra::IC!^1K>3@+9RfC1(<-s%Y]$s%6&T9<QEGRsB6oY67k9RG8*U-_dTMu`K<L)Y'm$Zd0@):QdJ'b=+,Ejo.-,kVhDspXX@MeeVP54.MrF8JK#:%>)KBMpq1+12%%dhSue(5?u&;#c!"5k".CG9b_nshL_jcq1^]o9u&b;&k-dD(p&K!j[dQ(iqD4gjGWIlEG\@ON6K_XJJW2f+:6BR\8Lj9bm4m^6W0%0bDk*;3hRD_)LhI+!<)TGm$0+[fLm0M<EL<@M3;45g90`ZC1:WS48;:_l751j+.6oG\C$KZYV^KcS)3g4'@E<.S;Z4R<H+Z9:7Y-%&0_cHa[B[^IGdbF-)=MN)l:2NR4K`AlPLTsW-M#4e:8jDW>TK3f6NoHaR-Hcrd=#dF7dUAKC`X*$(J+TK.I,`qe`?pb]fh?F,O-f%26Bd?V:K!K@2lh+HW_`H@j^T:;KEsTb!%0j64IE=`2DtWZD"+@F7*58pHGK&9"<g$_[a_5Q(@A(O01kHO=:J4K-rYS76=[Zb)EfO%j551N?uMeQ0(;V>RNZCcke+a9X0Q8P*+_Q6AlVS8MuX`6&B7T0d[:o*&J`hB/K6J3UfMJmR>+!NccMpN95c3\q]Ie911HI1gpM!I%o0kQ4'@CL^-@9`QGGLqGRiLIa.ARW@hiGYlO!-kK3D-gBEJlLb7Xe&6,V+7sg9)`d_JV<kkM`&+@cAbd5rZ?1huVuNrQ?TMLghD^%7nD9,Olo\)B`_IKW02F=//D)oXOMO><]T?UmjTPKR*OOG%*k-m=%[Af8Gg!JgI@@?5!'/9<]8C/[S'XO*M"SeCQu^3go1bkZ5`Jk%K%ruchR$OkY4F5LH:>j,*"1L>BlK9..^Ye"l6bRRf<e)6HH[G/+IuujdA#9p"TI*h-4co]I=EhUFY<"86+MX=Samj%ef47.E\ae\%Xd>Ut0(NuCRqo(7KB;q>Z:rOdi30tH71ea%.8\ge*@]\C^X_NL_<_A9FE%"2daKCh6)U%%d*!BnDT[$%)*idY.e!,o%@9[ne@t0F%U&lsq?[D-bltItOj<X_](;e$(2_C_'NK[#B4EmhcI8Es3+fA5VB)]n%AXCf2-+&tH\F,i72b8.(k7)TaY3?Gik<nt8WdULdIa)W;%/9=_lFVlZX*%#5;Q)aq*,RKi.EF%#i/^`TtW-i>sQM2[*`2gY!]1b""X3n\[IE)Tf\+8e(74I#YH[^48r<5:SqF]bjF1UR9Xeb*Y%F1:qk*%&me$]/*!ShK@[%Eg?(jBmO49.reBh9Tfgi`\;inh,N"N]eOL7WiAg!-5<ts,[Vb$X)7Hp=V\\[hS!U;A+U6HGg6O/<%k#%PP.K.2M4!CZP^7#Q)BA&c:CqQ;iX#6Z.d:*\Zs6&2/F6o'+>jZ1^@(&EtBju*=T1^DD`OqSC-ea'rk.T'7H6%SVT1);1_=aS`KhZ%hiXK#=RA_X@huYW[9?*fT.knL.&;^<7U_Sg;ga^''u]^C^19_K`A<Rnmk;`E]1.8LA(a2l#$m7Yh2bF.j1('&TDb7or9Jk0YQ+H+%r`E7Lj8JN2bJ3tYCHl^71.o+2L9#T#rbSKS)[@O?/Y0'3&,LjWII:?iJ,&;As![Y*=dttuI&2Iu7oj2<G2?M;mJDO-XfUa8[p<oE%\*RXLL#/l1kmVH:p;bSLb)fSu%AsJRL8=BM;sktI>^#gNRonmMJ``L;)9(]Y_H.nk+?[<u+"kU"bHCaf.B):"p/H;l(%3E-h_".'%Vjg9$B!kIL-tQ%tG/9D%&_]jM3%lFCcFJrDoi$)_j^=;mnRZC+?OljT-D4:sT/FIaeSZ`jO2rr1,DTfgAu)ur6rS0#*/I;uW!Q]-%iJaIUr,F_"SWHHq)<B5!HC0=1CnsUao/4CPSh`I7T(:$.CB'5GH6&O=QUCIpP<iVI*F,6.i10+`::@mclCLiR99<[;bqqJ0:e/P(%n8!Ku[FFcm=%$VKSo]s`"sB\i&<1HYrW<JVB`K9X;%:Ubd4$^KXB%prZ/_fYR3\$1`aih\;DcH7i050q8DX[/RYmJCae8Bg(N>rJ%GIG"oA3YT#leuifVj=8s-pa[UB2f*%d'C2oE.q'.&4:n`T=\)g)EUH'COa[ZEg5:DShri6E1Dd(<CkDrAW2kR.Pibib3^V4D!as[%V1P1"V4l$L:.[!L4=,JWk,t')j2Nh-:4MZ:hfI\F2Y^jErr-s$IV6*HU8-!=1r\?3X!ePBPEm,-dn*3G3@D[t?B^Qg6q?H7YK=W'%)he,ef8?&ekNK!g2!:X2Z^f`lWhC3N64R^kkt#^U\8DsbR2]s(OO#S8pH'BX2'E`;bS;P00d72j<_(:g1$;E2?D5=g4<g'u>)gR/%'<n63'+k%*L%"dghsW@&J7V3P9ZoW!i&RX3p*V*fZPCN^=Qd)r]Oh'1?kHO0CGX0c^H!0#1!GSOLlT?,`/5(\NI$.V<]`"]h=Jf-%rD"e8.GSI2E)m(;H_\%>T0TPZRE0#\S_6JRn#VFUYN,]uVJG;YW"eZOZ5jgk,6sm?IQ0L\XfsF?j)tC^orFZkId;2!Pr\son];3\%*9"'OC#kUm\*OrWNho:lGWB8^8'DY[mMp$`gh?M'-"o-e;(LB[,V2NE2o:??dO=5pk>H2R>&n"Hf5sA+'69$R*BKlAH?I;h8q<S*%'4$b?BpKA,K)K_s*,kd+&W7K_Q?=[07\+TJ[%RsiM/%?^a:u=bRQ/9k>>$Q+WRs8,Lih;]<C:t>B%JSW91Hh,e[9^n1FkCocPP;4%%8T?oc7KKggfh6i2,Oh1<4]ej:DV["+`t.Scsft98Y'PY_),<.&(P4&#G5AkbjX9WJ$](Iro;?(r5[^oDp(B4If/:lf)La0rS.@X%r80^js8D-\Ujq%spoEq'p8]?Oq9Rst*e418b<Q!`$i"(XS::Ah5Q:EWA,#$Pl3I=?[Ia,s/K#s^j&ikLCY=C-'u\&%+@YpJki]m^%0H]M-ZXMHBSGRW^?5bQ=/O:n=iGPP&V,QrD82>(^2jcXiO)gttNeDKfe-R,DIht5XhdjDZ(MiV;-eM%0SM'2VXYU7R=LDu/8>rrs%B@Qu11>)^KYPW_\4Ln`Xc!W^+`f;H%Se1Wrc^FHR^D;[SD!(Jk@kaA?f5R(1>i]BP;D5P5$XL;](?E'A[:C^:6@PH`^>-);)YiEb%qn:FnK4m5D0u1]CF-T6YIB2-^XV8j(;[q'l\d&*^oJ0*D,`c)io1?'>o:R8i$Li>b/^G`EX@THC;U[0[.JK"S`OdGBh1r`m^SQ<>%p[`@P\k9,peKtj;*7pe,b?.=d0I40=fs5OsWbe,<"KrR1ZQeM-1ZF-Z-24B<55BIs>PF?5VNUi#%4,2chmX/>[m*_=+KO==mT.#'%'dI%8ULZ%XXl6pXS6!lESlcdn?4[RD1.T(E\T3.^:\&BfUiTmlkdd."nk%[KAWVc]kIrU0/(\2%A7$G(h7*GBe2F8\GEnT:5W.<H%JrJX7O`@;ug-/RsBRW]8k_Gb1@7$p'/P"+cN\E;EA&7lAW',`\(LU<V*<S7FY(4pQ"[$*Ao6:FLhj-'0<)g;^p7]M:VfkRS@,0)Y%LLhW/-#nj-[qe\u2NlgkV?X)/p#7`_pF13k!:%3)'A^s!lY`km'JG>dn(T$GP`a@>jDC$0b+N&&l[%St`F2Ur(M);$BR9,n%^_Jo%09P:Nj>KnSfN!"ukYIoL1;R+7>`de3gcQ^Yhs.q8:Smn<+%@DY]EgK'g6Y]C(<+[$/MZ`nUX>]?%:+n?`Ys_:U+]HjdtX<+kaImA%1:4d#C/6V$'Q*J?WKpVHR<-5DnrXY$8!F.mLIOdD@;BpSL=l6od23UDdl!KG2=doBP:+]-TM1P#7dld@XYsDWZ`mu]D[T#dCO$n7%2Gtf:5r?EZq-s`>%%CJ$DsWcW0s)\Z/k@Ps!Lkrb<AE=-+eLd.EaON[Z`dO&e,I['Q/I/f2.h+rp7]=QqY"X/+NG(XK;Q^^(>u$:%S(1#D4K"l#=HC[Q+NL"aC=`J2er(QeFj":<<`r'0V>NW>TRNu68pI_'Z^b?E>ZTC1p$Y1leA&1FB+Kn2lq7r)U,jmIWVhKsqa3lg%c;a3fY$NI[bgkRndmS:t^`Dtda`iAns'ghgKJJ_C+]^m`^;IWu+h%-Yl"2:"ELT7Rj,u+,k:tdFd"3%/mRtV*^<Vu5_S^F+s'SNS%8'C7OpLt&X]u#Kg`$$-<Cb,O3#ouj+QMZ!,a<9r_`NRR<<>73a#ugV\6JMgh6[Gm1Gt9cfnNcZm:UqW3di3"7:)QB_ZYiodK/?T2%iWZk6Pl"nMS+t?OpR>pp%WW:.,qNNVSL<$pmuW;r["cM8<n@0?R+\3XW,5:.Ol$s(CK:p=OSYq6>F[i(NaNH7JQdQO[$XHsbmm?-%.[J3Gh@_$8.Kht#+$d1_d=u8p$.;\"ai#H(32]?8F\m)tTFn&tF`#/Sb^(pV(SW!5pHoL'QIolpc=dfLffUj.>\CB^Dl[ee_G!Tk%%=[LMHEX(O?]5ri7/d(gIf,IkpR-a+.:H[tXGfU;_J]1KB4i.*:L-p5O6,Pk0Dh`o]FoY,-3a@t"Yk"C%*kB9T3qT!?T?f*b&!;q%"fdd^3J$.Y.'Xh2#\n3Z.NEM!p'DQNk=)*urBOiZR'Qsur*kJiA>qi0m`7)bq[Fasm#kbMhRWJS/*W<t0!&<ERl>U_LC*[P5./+7%cr!d?[^&Q-I$^>.Z;ds,Q.^2b6l,Dk/BMFqn9a'cL<A:k<Y_WKbfBPR1(-m]&^hY&4EM1p8eut>1'?EqS,AI;:46g2a)N(J1@oR,%Y!o6j3NY[/;hloc8<IG4M*p%^0.kON9;fnM2G7Y?374:;F#*#AeL6JaG%I5&SY%/CQINo)K3A7$Ma`$Rrc(NUO6MZ#o[^9?Z'F&+%BY`E-1>8BLO?Nia4p,tBG8lB?E"FZ9@#qRk=DbMU2reL&m<iHeBum<9\iXh`]TLHTGPTFnHa"\s#SNgqkHBCb_(oJ_g!En.mYrSs%X5fAn&LDsD7`b/rIL4-lr?bYPZr#P?'%4)k`&D\Z8jiahKnM>Q=#(VmZfW^='?"S=)6UW<AL)&OQ]]#12BHW1+fnUfcQ8lcnkT%5%fkNgu6hmoB-jB80#ca1CU5+)o5?C%KNf7<>SYN8ZBMhM[KBXhU(#o1kII'PIrcH='&q)[/-&4Kn:U)IZl][TL*R94nT9GF2p4_6^%oXCEjBL2(\>mj5o20,T:ZV!bbjT=d!GFF!8m6F0+)Ic\P)h8O$e`rPK^Y?JsV37u*h]n!'/PH+uTV(E$4$aL;g<kO0rmGJ:!8WYc%"&9isRM,@:gsiUe_DV:$/^$.b96)PaBh6ipL@G^]OIViX_nOWcK=[7>[(P<A`Mgfd\#B-8Ds(<lFPg$\X=6Fi/`Z5oSR$mIq7$se%"N%31>n'O)=gLRtOYUM:#iMd+P=uRQ(Gqr!l6M"?3"^L<7n^oGAbhd\[)`ZBI,rWVX/1`G=_J*lP#n(XVK&PXU80Q(YVF]SB3/XZ%/[ClYZS@>tR-,Sg+&trJP4C/D6+uu>P=[[<Rd%m_lCCQ9gdSeHes9Auc't'Y6OessHp0!S[r]PAGNNW7L[mUk$4;+C.uRiAMN^IS%0Q1u+mWQ8:U;07B,oI-=r`Bb>euX?GiH()R"i#:OMJR#a7%,5lje_;te^>l`dok6%S'C'cVXZB"g<2^++?NJ(DrrVQWmCUR7>I8f%?@+:p6X-dC]ZF*_C+>!CmB@cpGhCm9NT0aYWR*-/hsSIi'*2Hr:BPnu;R!RR0B?Eb'sAd!0N0*MM&#Gq]tm[3%(]T"),1\0Sn_t?%%t-77a+O#eZWA\4%oPotCP9'A$L7,'I#j?L7'P,t6FM:f<(f`+q%+j4RfeF*DBDl-V-Y:Xm\eD=%pR_i]A9G4bfK6imN!pUbF7bZ%eC&eGh;r]<"B/356&q4<b8$3VAD$Qpf0@dU>[.P9f349j@H=2(WgCnLlJBh\A='9]Qhhr+?7sj8Bi*GuLqQ+/mp4P))r^jRo;DBn%j(C[l=HHrA90+d'jtCpOT$qqkhpQa#6M1)&q_;.S]?"&94Z?9FXN5AF/Af>4N#h=VlBO=(Ni:d`OjX,O4a3;,mS$0J28!d<TO)Rj%)(!1Ff11!p(mp^b2nW/1&Pqq>2oIim3Qadqqa'm'>*.%4,N38dkbr:G^A4p#iFr#_m<qi5=L:<%kf?H,!&Y=`M-H'o$Z(e06fm'!%pE=B-?qt+=:>4MQk`X@HMh(!C-@Y&f3W"\md7G8bH8JKpC@1(B[J\DF4B+%-(PN7641AE2;[JnUb>`ot]nsa*Uf!?l'-aAF^)f6q%%oZ:\6dfqa*nC_64gSB&B=+D.[uXcA5G_pknW>]b7A]628Cpd1Id++9H!&:^\0sN_f#.@<qn<=Ha.88o8t87e5l^/+^-KbL)Bn]"%?3]s&%Ee[\2&XJ]q0YpQ:(q/I1gO#rX[[j9JrQ"UqH.=og2kH;>cl+A7RK#Re^A->j_<)hP,dbmp*7^#B4phTH0m(C*U[PF*-WOR%eQ&cW,^%,cm:<NgpQQ3A_;11:/!\D+mJM+^oC=-eCV&\Efr4Xnb@\Ehr(_Mn]U/")S'R?FK_;lB`=O,H"s,h=cd'[17TjU1r%gY"%<:eK[eB(lR/EB7[^2P'pO8YcIK)V8m"(I:=BAg8ZKQ9B\Im@9tG/;SOM,a7aBDQU,mM.VJcb-ECQT\]na)i+CA$58/qr@gWX.GKC%!+MB57,r?hbBmJ;e)2dtpTA/8n?H>53nZ64bU!l1GV5Tda)G*<T]iZ42-n:BX6uJ)]VFLHingqenO)&N)#"o'%Lf?4fDM#"N\!Cr%.tB'POH]:+N%''Jhi6*Oqp#L)gl^%s#$LlUj'S%Geu<8e*IC82"he6-7[`Fsj[+BkD"sSjImM7re=WeZN[-JJPaffc9$q(QU!Mu;%>5Gleig0>4gp:!Tdcj#Z4Jk8j]e6>b[24pV0pD%_F?"@aDZd2Q[d41@R#+P"mb=`':NS8`Qf`r1iC?CKO_QM6B+tGP^,eNMa\I]O%_5[#FO).<9VcZG%NYGH,$/->7e4V0B4OdHer[Q`,3`!YOf2GIh%YY4-ECQ5=hMN/[q+Pj4(l\_.L\88#A'd%N%H.J<e%!LX0<h9+%cT*^#'Abn%q#]`PcXN.;nO%qPSs/Os7S`.D0eHQAo0EWILrQ]H]]gIj0XE-_H!fuC2)KXia*:*Hhh?dFcFRR!`$-T(SKo1`A6iSO%*]=?[/BFZn+M1`C5$Wdeg_-t$4aMmG*@53oR$[V.;"=DU9,<804:%;a"1LTLo]n[fBp%1'YShH2_sNmj#W($W+3mtM1*NEm%&*Zn%3cCP#]RAf):)``dXm)4-NI7W,V@`n\?Z6Z!40se8J,fc`1\,L^%mAf`As_[CY0QJDK?ZWp=^k->$4W%ao[$0h4>\@Q!+*bM.,)Oc%`nD-F@&,/F98_BjKY*_MGc_B.mGh2jh.NQ>pMNIXfmC7:S`#jhEbacqPu*M,C;O63Ju$VM+s;o7h[!C/+3SS:5+Dkf,7+E;]-65[%Rm^[.n+0_iN@.)*[TnQ0l5LD<&<aKUAb^N=q[cC&V]b[F:=Q8/2-YT?i_2Udb7cS=oIT&`%oRlBAA^cqA?g`@\H;j?2IV\bO7HFC%*"-+f)o2?Xo#Q=,b/9g4dHH-4)%G=Jf[PSLYcNdGVra9.r0=GMN)&TLs4.L13f\oK[Po=1)VN=SchZ:6!/tV_PM$2d0+'M",."8#%9Za>e>$QU-MQdDFhMK`'C:P9Y"L?n?:;u\j_"\(pC3[0Se-bMnS9GTse-V5Y?"qfdpsQJm`Nni:N#86HR&O"8>>q5q8s!2aOF6&e%DFdm<d"=Y,3$hjaBE@febp39m3fkVC8HA"@h#1#k[TlMJ)WJ%mO8tqT34dTj$j[1TKG%%9H>>97n\F'Xpm$7eqC",1W,Or[5:6Uj%#PbHl!::!D<PT2:]!Z]!H=\dk3PgMg`ktK9@m.8-?P0RAlCAmK0:*<beIDKIjd/:'F)<0-J@S^#OVj%3lTd.lM+@ipIP<`44J@ZE%8sWha:boL1XpO4@iM-t?"bCA^RW(FPNC%KBm)Y!)cStQr/F#H.[=f(@OlC9N-npHFNr"?^e#e`G=tsUXNNi%uA?;E$>(Z%gbo"8(%$%Za^,f(*gJ'F/&2_cPH$"rpdW?KgeF,O(8c%6YsgI\JT=*2VO""Uj%=;eD!'#c-^TuFbY3ZcF9",c-_l"J!E6/>@fN0?euPNfEK%Q.lpsZZj)nf-qGX>2#4&=#NI[f.H!+l7V)efZsb]%'gN=H;);?Bo`QDp0]t?rH-NA,7a=CbY_E*.dA1#CG[0g`27!EfWh1>d*e'/%r4'lkfO/okl^hK\6a>S].q#eDo+]6LPmm$*$Sp/2g7NJ1/VOQ1:.s2VaH,Y&-3GW,[k`\=5.?05mDSBFqrOa&UC/1p.RSbD:*KKe%\YPs:843lMRbZmgDJfF;f.bqL6Hl]&jVXuIm*M7bkKoaseoELW.-hU_#-fbnV4P:4pB*["&3kYg5`rJqTeG.4N0i>F3I*I)O(P:'%IU!jfng;-;0tE\@0u"oU39d@-Kp'oA(RW,[s/9XaZQI^3_t[I/JiJVC#<@WR&"b*;EL8UkI.Pk1IQW0G2.AP/b6d!ZY^U=CVNEn-%p'W?\hBG;BoWAppHX0CcG,_YZV=TuqGuX1KG1FcceunL?(nQqeEr(]o$@7X1F(c<!R!U>\Q$J2/2*b$*-PpJ<UR.k/k)4Llf:-e^%42X<RapFVc=tX]RN5i]:j@E(V_HC8P4j;?mc#'n(hRT2slm@BVOUaUbkV/^h[DOYSe&Y!4bG:;#>nJU8X:+'1j?h3M'F:1a+tibG%O/OW"eq/(9e$]E;TLrSMNpER1b9\q:YSbnkJ^@jF(LB2\4I;Q+Vd=d+IIhRn\#(^^)^h1DPqll&QCFT(=%&\dW-iX@ef?adT6WMf%RHKb^dN4\")80&3f+g;-@0jqlGDOgZ(-sN5b#H3OO<*^oO539kN6I!*9s\DC`S!7O.T]54.Tad9#NW15>d8^9%TGL$3jjQMc%qrY%--^>QD/2=X7uHatV0I`AbY8=Mc`e_+a`C&[e`8d9="GldU>Xgi.._Kh_%@d9h.V>7L$].W=g/9EIf:$2;OHdOF_#<DRbm/[5%!'q%J6qB>3[(ACTrb$Cg?.\-T.8FH<'BPff%.9kf`6/ZAYK]]9^OC6k3$Tu:S209g@WkrEP>:Slsh),I]jpTSaTpG[rq3u<DlJXeJ3-"%i@*b4a?m.dZ"]JB$l=S9B5W:rD0?L+eONAXlVk#a7nKCQVfe2hV'A?)F\DC$3EQ2*U3q12\YXFo8nB@,ST@PLPoMh97%ue50!`qQ%&$9'!a_VsRD8=@RJhB-o2"a&Cbt'uec8+S\l>\M:2^upD.0_KZH#?-X;t@5Vo[a[4*>ul(C?_7p:*Ytc1-F/43R=3I;A<bOSQaae%\Ht8oiA%9i,%3oMQQ`uKkI]U8+96F*juM"R/!mD-(+tn83iWo%_CG7e)fa&1:4!L^%bN*:=gM<uB_S)+LE8fcE],E5;@.^2GJl2q%=9O('WKXrnCp1_AC$7D8Z-Bg=]4C$DA1'isDEo*)4#0],g"Iq_RGU52Iat,Y1k[VI\YoCr+o*d45pB`ArB)j.2;:F(,2VL6O?G;J%eC,%OF%\J]-u4d$k9T.O<"==ZOf+Bp^Q2sRYnksn*GR<3$l`;qJQ0f413o`Q+%`QHVQ2l8Y:[#"dV1M?PI]JDP9eoNCJ=@Gg@%V-%P%^IY5SEHGjtA1V/'?*GAWM'!RnFFQR5d/8\"`0CNX.YS]/]DG6KUP1^eB3L7+Cjn(gmoo'72'+!5R9,emO3So]3YD"Q26FeXHTH%;?h8SA/0t<V.WR29),pj<FXU;q:RXSAk*S4:'_F4gB8Sja=6LA7nKt/LdN<$pDd2q*486L9')-=df$Yf9Y#OM<Im]1e%KjR`5$U/%Hm@2oml:00PM3"0P4S8$XLCb7.eKW87B'+TK(qB>ED@LFMI4m%&[*QT9@>,5?sDuiOE'/(:GgD.g(0sG:mQM_M<@"K9I<aZ'1(Vu%3R1>^HCI/:Ij]qP=]-83lE-^3\j>j*MJ3V+3N[eRi=Lf>SYM2no5tQgV]63*k#B,C,lhH;+E`aI1'`08p6HHc*i(0R&*idk?Qsf/%5?i_#O?^G*Bgu"gmSqI"4.R"j:-/ZS7iZ`[7/Sn66(B#u33utk9Y\`/S)i]Ora\[q78b]V>1.=Z,lN#k(idaQ"C,[5/Vk4_jEG+]%Ef%AX'Cm4;2Q*X9*A-N96CjFrL)rf%@q7T#3tAZ?D0gi8EM7km37PDJSIuhR9-3.Bk7.BX8>rU5$UnlS4E_FKRUe+laJ)jfXC==@%BI1j!=&j*HJi[!caH,Su]Ser\XVI/YR(pfJ8OE0^)6'<lLe.u6m^gqgT5R[%S!P,ZT0cn+WGhC1DtC:3@f#Q8kW\0"pJ&0BY5XT8%r?YD>7_VBNfmXZ%.kejs4t##:75\BZDeof'pt`--4C3qobXFhQE`5*]V7t"m/OQfq=7TPCA6\n@St'+2jo;*?$7/d9dOZJ]:FP2m%<LK2a*/l9B[;=&l?KQYW,UH1`Z;AeNct:i2HJt@Fi](uloiWJsZ/N)5c_bU+XJ#:X4tdY$k!D?Q@?,q+Y=45T`JJCeGV*Cs>3KWP%Lh*!kCZ2)"^s\"0HS*2.>-)Ej%HA>Y'UF"n5\&X@[8>,\8)N"5gCe4mP89WcC9QaM[Un-(rMu9'gQm*=<[QR72(<>7>5<!;OQM;P%8ntQ[f!\T3XC5qG\%PgegK&oqQZTDJ\#CkO1:.n#s%!0uQWdj*e/R/n-1c07PV7BcE42m%[TW"$("6>d[CQ.&>Af>*D6(0`9"inU%[B0`/=uC1Z3#T/AFX!/0g(Z:<Wm9!sY\1D9k1*h("T"=YK3F,*D&K'b\K]d6?cs@)9-8"D,X(hjYGIKGP"QmCm^4n#C\aiQ+;s1*%aul:_?OHREC]&!a!Ejr"XVpb7=(na$jHeO]7Ba+X[Pa*sgqVE0g=/oEWQI"'NP2.6[d)2I3fq>#5>ak*8jdYg,/8/&\S,4+kZo:<%WJ'n4[A<3FA`ISVV:[<i>#8d7FCe[HjY?5A<lF+-d*#Z*B%(d)2Pq4TR1%AX/1%Dpc*j"a[cktGrlS7]B3RXalU!Zd"aOF4p2"OA%D!&)>"ko7Kg6NCuWjCHc6e`e5+7gr08uTCg=o"9C=BaCDQc^pZrKkd>7?Nth1,<p])7Q*YfDL$^hPZUKH)ZJ'/XWkI#Hb5U[eS/"%7=)Ztk4;dGB.aTLX-,;e/MZld-),\F=hFO#qh"g%LK)?uaV(!(4=VA6hfSEUGo&o!o<hu.s$Jr33fS&mDpK#A.cWA]8U\DIQLhRh%6i8tuW[[\>!mT*mN]_#>&EW7lmZ*mt"<p$G2UX:&6lqFqA,Luu-1n*3n[$H+$Q6Ju`T^9Jc!tW^LLF[Q^kNP[%]+I9'@]1A*$Gc*%-rkYAUHpc(&>UmI%0Dg$Xr>u<eP+@7fHTe>c4nk;$pq;sSIl!:9uRp144-SR%c@T#kCbgB.kQ,Cf(+P_,s-=h!G">[_)sY##^U5X%'-Ti#\L.rIa`=?5]LM*&X2/cjA&gq7,GN"J6O2efN#ADT=B_t;SGH`7b*'`Z_+7C;LiRT/q9`V[j/>K*IL;b)2^Ln3@,d[k_==7a%Xma=:'M+&b'5@Dl6H/>CT+8?.,9qKO@t(7Q3Y8Z2jHi?7!r)8UUUcSn@3/QHk:kq>Q'^K/kiI2j)!SAi@8u(n7h[6\e!,a%UQsrC%,F+.U4<646mLf_p=ut]!hdH#7E`9MaUq(N92Mj`npI`*](P#Og2E\gh(p3&VPS:Bu'n1M?C+hO^s'ls?@a]lo'\n^mf)DWg-H$,<%l6erP,6g[siIq$YK0QI#"+f:#-/^2%lm/0jp<?I>`UiqM8$_GG]WP$TL`+@k6_@pdeM*NPU*JC+pKh"?EK=8QkBp1@d,EIFIWLl*%O""uN<'V(!XEqn>U!`tb\<BSqk-HF4`\c,(nm0VICK`1t17sZZUF26KLm=2OAF!'?KFba].1ofB+aG,.DS\=A.cnX`+or=Z8nJeN%EU6n!C4_Ec=d_h1XLdfabR(RKnF/NbjC;+VSK&b_;])eL8Y,t2EKTnnEq0O2/b?..6nVJOKKMc9=e;$Z8!)Sc'XnV[8R:)5G(b[&%89tJhMR3bb0']t<.m`juHk]!,m5T,A5e=1uoI3`R*X=i9ANVH"k$?:V.ou!n-:EG%0JcJ'#M2AL,9Xd9kFbp:"p"cn%q"OnRfOe=%S0&u$+Rb6@fT6b!0mXcFq%_khL!4oXij\e5K$:!\GsL4`AcnqWQc+%rUNXK]a:f>G8keI6NC@4ldo7A2!s/P/ALrb]RMdojOn>>p%'5m-s"."+G>Y%FoU/]&l$dS`#2lr+q][B,d7l8U>l$59g(hMbo)OaK_`9m)?:6PE]jV$@K,(r#93!"?_UBr\h+tU3S'rfjuSsgG8%Q+]jG0"t=u=:Imt^-77:b8*V(QUiD5[2#E0FN`,3&XLo9=B/d5c"&1ZSVdCukkVT([SnrU;JlO0q,EZ2<2ZF)36`lVnr=.%qGSu"%g3/qB_X>E*AKH9"ZZhaO'.&@hgA'Kd@Jt7?U!R1@*jBF5+.k-WUk6#+L6:lEH/j-PTIOQKiYV^EJVFR8kAtBonT'V\]%m&)Uop\7%(<O!3T\QbhR#OHBpLYH_.IJ<K=d>M'=da8&q^@qu;i$-)*K+JuRaV,),c*K83;`+?MJWB+j()BHgZjC8!"Z&f#.5=WcglEP\4GCo%mMVsEV;T24a^eKN'RW]38IWC)FehQp7XU>_0+Go!AZV;R:_dMaYbt.4@qY>9#KqBe4)dkkCO<h;l4HEqB."r5Pjk<=EBr`B8`G]s%7dTGl!2AYHbe@"BA2Ft9`?m>Xf0ic%Q&k?CiL<#pkQhD<`pW"P.'`7JEQd*-j-5if+;5*L&-;H52XjIE<J*>R91Lg]Z56<aJ:KCd%,uPn:CnLs]=?@Bb:D'A\Yf2Wui,N3ZD!q_s?<4,L*=f:1V3a8!ls5(CI.V]f]q?5LT'69MGjb1YFpl7_DNFN+]<p^MY79i#T1B6J%8W4qDPB10m,>p6OK>WW<><Qn)j:p_8K'sZC5Ul]19Na@uK`7L&?N6Gt9nMM75!:B\9n#!#3':A6#Nq!i/D43!9P[[+Cb,]0L5ql^%MHRi/b8;oOEq0k1i83^MeMUnKCe,k1Gj#MbT%aPk-DYZZ:b'KL.bq<D-o)28WLj'W+&g%JfMc;?fa_m>^YIpC8+S0/pUTNZ&OjhS%'JZNLn!9Cf,=+O_NcN*7."IMn/gsK(F(@n)_'ZONq4&D`RmVou(j0HgM/O^I"[XdrL9%1p,Ta3]."!6FjOo9`5^@g>5m=M\20-s[%Ps)'&@=M%X'J/#+7!@,f,0F!kT@8@F6;6m17?7qK*46[2Op=9TaAs<!qNY7l[=ltjP!%0nVG6R]:0@f@%)DKql];l$KNdPj/8(Ns%jL\ltV.18fX>.H8@Yeh05A-\03dk+u[Q_>t5pf*D):-0t5eZ#1i="(cBEs][T--9Y1"p]m9gdoDiHcem;b'I6lUW#=%4pm00<g2'%B.g=[-$M;1d_sLD^)2Zt$^#,4//sWo'5/h5?@`TR,ILOCZQ??AOB=iF+B2eNCDC$?:A"h!2-2]!\h[n^-,5fA5sTAlJ*.DoCSpFI%C\m$aPN.[W("rYI=[aT_$XHO[I9UkkJ.e(oq#ESrE^WDif#UYO"#kSQdS*.\d6MkbNToR-S_Z+Ik^oX-;N3ddV(9l[kNBcBo,Qm*%/5n:)pJ6>rT79"GX);a*!.52:Hsg!VM*FEN-^HX0K2-g="Y,sVmSB$h3YK0Gb+@K@.'@6dX%'M_"PIsVe;nON1Qr_X)15/qT(q(u%CZJ4+`HS=OF];`D'iK6q%kQLr2Hej4(48l)$8&,_c4ce5F0u*[s'$:J\!N@5ca!N)1ZLB7b@8ZU<3Z4O$Q1RTOf)CNk&c\5Fe%P&%^dX50l,5JnM#XTjGMR9+\C(MPJFASL%+p8OS)i^CZg*m3Xo[=qZAn.LdnV_<"bDi;gjLRgZD8t`rC"U#/o,=p=GLOpNL>>@8BUic%,'M`plgcWGjTuf/q%YPIT\?nUeT/[/8X(`;"T.Yns*[Me-Ap]p!Te$JRfH/Kgi"qXacrWF_I,JFg"'!(s*als!p6F&P'Pdk"C.c#%!1rId.$ZBW?@]EA_OE?Y->a#WSLO_(<g@9BOV\gbjDq"?J*iYCUh?$/lfg^10otq3YJ!ZX2R3TgjFX4p\c%3VMR>fGIQbk=:N':G%3Uo7L,e_ec(^^C+ib:ed3;R=Y8R@]f2>3Q@TAqQ'R9W7f7HL(2DG!>qVIU=Ea[;%;QZoiY3OPAU;eA#i?6D@aq22!>:E4>">O$=*%^@&D+URL&;3]2?"UkT<YcfZ1^_K#%l@17fq-oeTc^3Q=X;gQ%,YO`g8)`h-R1P0"L/??FuFlh-uPa.L@nugI4JK1D'HGeR)kj\#_%^p"FH^*]%fRZ;D\$Su8$1S/uWR:RZ)C4.]SeorX$Vl82iT6=O4#oO@'k/<gBQ<4cWe#M^SmM'Z2H`cS!Tt64"D%Z7$+`A/Z'a/!$%Jlr"d<"=c]+;kGiH>uL:4i<;<l5o%l%^9#tNdGHeGmOahCT3?mbi!>6Enj"#hc0l;qTs-hLnnAC.n98<'orb!]DB>&[GBA-8@SfP%qlim\$o/G7PL&,8D1"OFGp/Ji=7fWb&?)6-@qCATU4BIFpai0[8G5bnV>F-3$K@0;dBJN9ia@f\]qS3b6kbiJ']bZ/IDlhSk&`@?%'/:I9?Gnm+$u3`8-\E>f=#M^U/TBIc%S0/sjV\ia.V!<g:aaLE&^"h*?;hJ(M-Gs5rhML\,W3ig6M[hS-I.ugNJRL"!E:<Mc3V@B%5c@J=2DNL7W.>h!`</ZlN1ia]N:SUtbDZi[9`iOpA?$M)dgUg*%dCj[5b_@^%De9?AH5"F>D+'WBe2VU8V8<K0?.s?VNI-<7Z`h2%*CQ8nW,`(qL5nPqJfH4.U3T>ErCra?fN97d9!O3VcjS4Iqo^P:_l*(Th`8ccN*BR$=Uad0O:g;D['4)lA@iF[6u4fF6agYn'sbf<%@`T<(4L@W@nR+//(fG3s2XR.XOufo8Q5UU+<tLTRq3s;"Os?\R8TI5KKhfe>1*[HgR7rHkq"QX#eimXc6K*&X>r=MMlBal97"/hV%/%&CQp(g8Y.caST.J`:Ddut!<"MtduMO:k!_c&BEnYm47C7VJ%`tMA@&9NFWW)c&)2\Sk;j;fE06"rm3=Nm:NE\218;kB"$#meZs%-.uiiUi_OA.A\r-I"X#J&LO[cTb<VBV/A@O=\PBmc!H+*L>kDT[R6h0G8QKV,\ag<O>&A\LCFONV2)r4)1bZaCQVY9qW7HNL7HZS%>_fQ[4P,J,U=7ZNWNJfn]:Zs_gAQDe\0!T;@=_#s02PcDW]52]+&$JN5Dphb=Tu(1!=Ch)T8ta%4EM-"0`t:,"IPe$.'7JF18_>6%L#q0TdEoN(H%^`MN+iXjMsP4s/?p5F>FNp+mdal=-&ppS@e26mXr=-Y+rnpCCeSZ0k.fdCd'JlB_]JT3m1U_d&VjoL^M@VF+^=<b%)cBN>U"-JKj/b:_L5h0$^h&YH^>b0uSj/Qi?5Db)\pQ9/KrF`Z)M?TQU)C$cd_&.@4l2H.UMoT`$8mu'HN[168Sf(/-aH(j?*iD9%FgKHud(NGgoRr1R]snrtg=s`Re-o_6?gGCmEA,jL1'mVF:3Kk2\7mm%s(;IU/dF`4AEA!7p#0(Nf0P(jGmM@$%r3-"#HE7$)u]-'%on2G8DIY^[FXpk88Sr:"cu@7XV?ZIKlccB'ck3E_%]a<Cf5A^5TU]nF%Q`S1bb,VU\u^VS69oc__US[d1n&+<.ols_K.3@Q\9,fB%]%0RDXdrTEL8Bjs0>><dH]F^88dB]LNJG`F9;k\%<]#<ubi(SJ><Xr5?Gpj4f=n(?'\A=ND0_UE+LX_QlfEu`P4FQS4W+,sf#S3p%OV(qCh'S,+.LS8eSfFEVFlP%HHUbEi>6`Jlq8-!Y+4iee+$p8/Jli^`QLsEZ)bJ+7CdokQi$Eq7J`<D#O<\K2K+:,<6+10!Y[iDu%ckgQdPG<j]RDN%SS^M:m.IXK?:3nMEL#&&.ct:H`0d@?!/ImGK/*L`5N`M@L4HmB6&SfIa:PYO30$+mF8Iq*2jJ6q(!h'HIKSW42%Qcu:CjdacHU6EY[1^Zt-#LjdBK(C!\V1Xu.P)qn#U.<\C]-4DcS-%:^=N&WkL@<4)d(N8[4@ClHWKA44[6#S;b=X[]j]fSrb:EB5%9.aGGjnbeF;lZ;/9(MBo/Ve"B.N-@S@6,kGW`n#-6G&F:L3L'0n'DFs-W$cF<=.oo('EK+6VA/OZtS;03kroo9_T1:OMH<3Kh.-j%4Zm2M6I?H=RNn]'CkaqncBd$N'(pBr/+P9,]os_V.458M=mG(g3i,6-,0RktcX0d(euIigW4ceu'P_,N0F6+V&A.uO.SPP,bt(&?%hBCRL`c\RnOkWGs7`D<f$tZ(WqGpI6[>P9flmFe@QDSE5-m_o+!hhAjYnMuB;Ha28`,HMRf:GpsW"IXQ,:.N<!A^*\I@Zkt7\#JS%"rTGS`^MoP)^VVuCrl%afm=b6(tsGpJB!m$.gXg^MA\Y`V8^s%l"I@F!upKiBp;O9"oV$H:MQdMWPC#B]@b28JL@RfXOXnr1#*nX%q4b;hG8(KhC%ll()t'Ue/<`')d8,OB$d.hZaa!+5,`]m7;62)f)K$1Rf&>0r1q;gk)YD)fMTE4!YgUpXl60Ua6h_Rk&Mk%0M`R;!%ltH,I"+52<Nq)nm9uTY`n<)*PN:Ys]?CTF)cpN)WOE3F,EZG_E.g=tB]%9eU/K5&m,('1H:3+=_1"i6BFeu'SF@ToMW\!$Qak)*D%m9WEYU*#Q`=5"d"M*X`SlNV04Q;i&1OYFU9`1ZS1Z.'g<F9aST["WX/8pA5MP5_O9W?%erj3BQ_eu.&S;l-^Uh</f^VsoU+:(3!!%,Ng\&eWdC'k2MuXpL,09\Ba,_&in_G^><])p=M]tCI*W;5en9U\)HN7LHlsIE%KoTU8pEOJ/]$6aLMW5K#K;k94Fc8J'`"t6D]-F%*R5HiW2-:Wm*gF@;)]Fdf7$-Un#-5t&'/@tocpj48g@6()pi<$Ngl@b:Go/Lmm=hNGH"(X95j_3^9u"\#+7B2"32k*&c5T1iD#-^%4Z+Ycm<]4P:DVs`"1%BV(B$,O=J@=Z@bRuoGL;\a+B:1Hb8kVi)^F!1Qf2d7+eB8N2!ifLTr=lF/gI;JOeOp7Bam38lT?C+1Lrm,%fR>rSn6c^oh/<**)[1o'/]i<l:b-"6L14Og`pp.WYeNP4TK'[.eN9?D$*i6g;2m>X>;EU(9fbXAP,8Je[!l>*)q1HYTP2HTc,)3E%<?$Y#[=jJ\C//]'I)(*XV!s7[R4;_bDnXCZM+Y@%>\[e.g,gY#dM4XY.cu%'i.]I6Q>K">dNmD0:ZNOr-1l<%(<'7?V6_B7,X,/:%(1jBid?olSMBH"3_ji=h8kEXe]Z[W`pH%PNADi/Yd(bp]@.EXmh?V5Uf$-[)IbeE\]DoV#=@B6dH]r"'HG?f8G[h$r/e4d8WY]qh%.;D@Q7"WLa4Q?b1Rm7b8WB34HPn&T3/(+_59s_I#g1YV33J;O!EDEo4#VYe6^@DW>TCZ3fgT;8)D-i-b=\STs8A'4n/b)t7!?E85%+cXW)KoBru/ldl<DaAkomr0/CD-Wb!b=8?3]#i'-aSf4YBRGi]&18\\`,U9*C8's(7^/>Co86#:-=L2u2n\QpHH)8$fm5.1F?n2$%p)<dTFr6EfFAqtMF;QU`kI>_M\([rY)>V_K9:@UMGIVkUR/1"DWt_1>0u?oP*D.9r*!@p^>k)7NITaIZ_C-`Z[^S(h\*<;6ntg#3%G<:Z>h3fT\nkTX\+<n3mLR.e[0B0g^k*DZ1]cII&[u2?/ZlZ,_mtO$Be=f'5miq2(Hgdf^R;uh['@KMB<pCrEB-ndA\U^[*q9AQD%K5iq*:I9c*nbKD*-/8GYSLO.HT7-=u0E6"ip((M[p%^O2]_q/s#F>/(YJ0l,jenaLC9rB"IXV+RfAD#L`QOnQmINPkq/ZB/M_BSR%nt0*c^MEkPQ>E$TrU&e*rnHoAnC8=^Ie3,;^\bpX/a_\3h>[6+Dcc7khlPB^n^%5M5Afo]ms\rbr0R,ps(p&s^[,;+iT7iSO7g[4%%K5*INc`&5@^X$"^0CQ\GH2e\U?-:)<BH[G]o`6+RT`emoXCIkqO`6.lb@oe2t(tRT=$o_a/Zh_^nnX!dZ6dubLX8->tWtWVUI8q%[*raFkrks7a3fgogkNB^j3p-GLUK[TX*/(=158.ge`j:Jm54&rY)hr[,%S/H16.-p^-3$Dm7r;2C_mo,DQbqBrR/DA#\^d2DNq`e%4&)d:B'R[[rSH:0flYq6-.@Pi_+?_Z\f,MBPn"D.WE3r8fu@6lhksXN+Y+bboCWq[rArq;-TLO95H*TV8ArqR-$SYamPTOONuj?"%fh]T<!?G@]=1UXa7C-bKleHZb;6)]`c[Ad$qbcs%h"uEYWT33-f&jlLT4_HrESC(OljB1u]Udf*A0,5>Ge\q(Z0Q28bMe_dPO`R;%^:m+.[_%4"-+_tE1F6JCHEFMXU:(1d%pT)%3;ra;=p#DcX1@YQjE!qi.Frr]CUF,gmg,ChF?@[TLM.a5h7@+.BhVT:h**<LqmuOX%Qp+fffBq.G`;BYeGL-(EHMn\8HB030N"HK!;dsHPFVCeFVr_*o5$3='=2/*:?2m$2d;cWigoe8WZ`mcXf#;-!G%6I+3#A[>XJS0[%qcS!-AmkLG^L$Q-G2N2Q#j5)Tem2a3FhTTX[VZnscWId^p:Ej^g9bU1Zlsk5B*5gq5]`h:D3qJ-d\ads[gsWom,-RiPP(;9(G`u-%14X+GSZR+R\88"9G!i^hNl$JAHWm&JRmC_p1XaE$ei'IUn*O]2rTpIb[oAak!aU#pi4K*!>PCj$h$mWC4Z=POTs/FDp4RN2E,8.`%3!F>*?$`ho2\pm?p$ZLdleJ48Q8."!;e,1g+2X,KJ+J2;LVBG'\K17/h95b=]fqh#I:BZ+VVMcCBc>b>k!@n5"lFM%PHjMS)elCO%J[A_UP`]:Y_-A1cDh"8D=:bdSQ^,*gSbg!%O&nHtUcP;X9:1()5D.S:LG8JVH3ZA<p"F_LeYlXs"EeRp7SIZFT/!^#C=Au$?s4nW%6XFcL]Y<h2s"X6E<P&9klbl$I@^::T^Y2K`r\AU$Y'./HLVI.9rd&_^ldatoAQOXOrUoIFf;lgh+0Q0(qWl\js!(U#5P;(pG9Mt@%DUi6U5e?LW_iSY)%^G9Taco.X]Wp28LTmQ;)V2e3"L+A>LbR;[KEa6b9[E(.aZFWNqRhhJ0thX(a5O;T_\D`a]:YA/Go[J-[NftS%:g4qa*l29@P.OD)R#m?<%]=/gRSVC'F:9Hs7umP4)-#_6@51HC,MrOQDG&D!AVS<4.OZ]&gZM>\QCgMo@$a_)oEN)8$2jXaMs:LF%Vis?sMqUhV5O94?!ug=g6\N5/mrCl@3s7\mdYmD"[t1(C?$1U$_[fnP43TCrAX-H%N/\3CX23a_Pmt=7QPJJ1\sdKf[?O1coF45q%4$uIH2D@NEFr@\k%mh7F,BQ2Lj"Ti$H(G4*mdjgm]K2$e1kk##+@EuI>eT2I."OE*g$tGUd^e$1\N[XPh536>S-7b[a)9!Tj(#rL%8/,lugJ58.*5J0#m<fhWom4N1m@b2m&!8:5F;,^c+7?YpWbK0&U@ZcL>mB.eTe"LcXf'SJ=K/PXK$LP?p%&HRe/"VCMheiMQ*jN%%'u>^&e+\EeKC.jh[-\)k]AnT\ID=>+q'0:,3$[fc7'%KnD4\1#cCJQU>RfZA]:1_k\4oN;fCk9]\:l_9X3rE&,KKa3W]bICj+;O.%Ef35`f#h:52"kT3l]J3l\,C2WUu0!!a2'6sY\qA*Dd:=-W1CLg8W7S7[#?k$gd&odJb-6SZ_i/[dlG:JHsFr,K3,A/BUB&:\YaN6%<"(aWO^N/GQb(#Jd:8I.q_Im>)A7U!]*`3cd)2Ue/%*WX8hp%H_]B<(?#;LV?&*UVm#$OXZlAgQ&8Vj-/HWVSCTr+6;>39s9;QD)%\#0K='O#-MTRG,<0[/ofK&MSLS>jLCi\892I&-%B/;A*^pZLso]cM"6_kWtkX?(ME;2A1J="XnOW'`O/`$K\^?$E<OCfurV5EN<<%cI8:If8YAW_gZq$%uek1`*?"]4)h'=>)gEHR_0#TSrV'N*Ltr@d:YE2=X,#M?%4DDCHeTK@g7)1e;.YI7u1n$_3#7Ni$*>.0)j.^%]>^Y`]rjG>%<^cu(23Xf]#3qX@1"pBL&)5G4P?DCiW2UM/Y@RL;_*emI/nC3VB@5QS85#FmfnB-\fa-'3n)selu@"n\o\phi@D@>%B>2RSp4U'Ii#GL:?+%&rD1[$haJulKBet]t#DI/^eMcBp+8$N+@h?s?j%S+P,q<h':;`I$X%E'?M!h9Fo_Up9=VA-CbUK'D#N&]D%S3DI"j9-._Fg/Ff9CqgjcIjOBR7>lI)`t!9r37]F`t5g]8-Ni?n[5grGIcdP$lk0K-#0>EphK0T.OLtG7Efht[Mbg$e?fZ:;nB8^%5?C6_YQeYuqg0`!UJ;'<dEWREf-cMhj:euGVsgU$[(#,^VP,^<L)Q62e4mtT\2BA6Dj\-)NiDJ.6-m((_)?OS+B'OLcrqV>NjuS=%6KL]0,8U\QpKRn,Ere2!>7unT<ZO?j\P,.)?+V.9\\Nr:8f5RK:/cfqb*1-gRXQ-A!n3lrFs/e`C\0WJChEbZ)C;PTDCuWX"3e3)%!M8IoL="ifmF6^">K(3\9a/@c.=GtPPVTe%])X&a9"6Bf:\9t+LM1?<VsVJbmVRoKFRukYKE9Zq7Dt=I`9W5+:s%>VK!q.RHLL#q%gnA<GZlV[=$1e&.5?>\)JbSnYPMCj\>.`H`\4UYV8?ct#j/18/@!L`IEkKp,26>(7,<c_:'/ptZSWeDX]At,GSspc+1IR,<,S;D>%j;JTUp<*NSEuHq$!mgC`898c]T3$Vh/%Vfe8)9D/+5W4hdWYZ>BYUchH@L`o"K+m[JudCWDg3-=pSl2(oFYuX\_EX1c"5jO?#.mb%0VcH=Ek9Ti8&,o5*ltrJ#9n8(/dhDn(K];"nX\,;cunadH-Q<B"&EbEBi]?Ih_(UMQNj<+TC2HQRQZP`DMn60Vq8LQSVG<h9!tF>%.]^oKj/noZAlG%F[s,]6f6'IBmWd_]6l2;oLK(Pmkj2d$%P`NrSo5PX="3#RXP5hBfoDYVmENukCliQU`lY6ucs5p)cdDHL4g)%/%BKgUWm'"aDZ"<V6altJ`59[XYD_eWq3=_bmU?_NUZ[m=%(Q'8gCu7dMFq->-KQW'`9h^[X@ai<ba6c'?DTIIm3"Z_@;:oGfqgKXu%Pu):mh>DaD_#C^$X`>Cm*LZXl*cL'm)e/dK9Z)&&m!:!hU.:]rAqO)0537O2<u9,'A<%s)(QSL')p3l!-m;2=*TKlHc/]A0D0Q_#%"u\$Vr(cVP?gFK-F'*F)Thc`g*K4i8HpTmkcQ$#\;`AI8':@CYNh,<P,Dk`XB,GQ?W_qOjL#I+M0FWAgCa"&_eQ(75>UH@YBlL'c%>)_cQWC"IrMh_]/ApT9O=C"u3g)kL9QQJNgIdb"ch,2N4JTk0JQjsN7)pOta.<"4.:Z6j#=68B*/u7)S@QUGT:aDoYKO?7KCB7Oa%Mf^&GbJ4VR0aq.jSKI#SoT*7J%2hZ&7g?#805:tu)6[0*'@PF%S$]3AWutt<S;^`S_*#*\G_,-/nd%g0_!<7o;=eZG)lS*:m3CGB%IdF4O+$$FMmEA*=K(kBp-^id1b<FAQm"Z(+]k;lmL_9)#4g%:+>0NsPK2,0]b4Fs"-Qu72*`?u_"gh)"U38iuk(Vnr>VV"^(j-4s%%Zq/Y"=-$_c!r4/ZCSWp)`B=%4t7TtaOdR+Vmq8gF<2ic6dT/9I#nu;Xcl)Fe0tX$n8gl^\/\e!]-<gX!HU3G.Gq2F93S&Q+Qg=4%9D%%2FP+Tq2K+>c>.lrDg0!@9ToU1eD"Ka4K7lqIBp[pc*?2$T1jGS3^0a\lEeI-`!6\kJ4!ilakdClt>u2mI+g,0`iiD44%lY9"%HbG>p].>ZInefe-$65'>6EVhq$ra06\+*j'Am])@lX9/20MiUSKW#2k,;ciD@iQ@9(OZ0paESL.M-<B>Qq.5":@7OG:!ok.4]E&H%"tC(&6H0N4I87`je`C9sl_WLp;&V?[p,+i_X0f5j@?0:lm\u:u;>>:!0MN'1s$:FF0T`.>2*?/qoVfW4+<c^/WaW??JH1#anH;j8%Lpr/l<`gkehM.)VlS.e`;doMX+*kiD(jF)L2dMj6FT.mZW/'!B96/<K[ur_1LQo%2pbZN&mDB/9]haD9"^*;aYH-Ok9BZta3pbAd%<kTfELc&(0D<OE8geo$k,URE=XuR4S-Q*6bc)aa;`oY&2nBOf%ZnPGD'l*iL&a8(UVsuo0=fM\h#Aq2^hWVjM+1S!K]-Z"&'r2'g%(@WJ3Jj'_-c1JB0HIAdcqkQne)H-X0k8_soP2P@o6RdG4#/*CT"%#?_jj[k,nk!,aZDHSc[.`:e^`%_]F&10gqsK*g;g([RD1&!4%ZA$@AR"a,I:LI#BDSW6t#AFtYG8J=a)tZ\g"D1"4eW@>&l>)Q=4&r;t6&`:`Stl"lW:c+Ij/191kSC*-kcWRg8F8E"-2DLIN^m@,%j!)&R>Y7*)6OnWBF^F\2KAIn'Q+ilPODK,Bl$9TedVdW$=3OXeAa=*#f.\A\q$Pl]p5fcPqm7<>1Mn&%p;,QE#VA(=IP=FWM3WJX%mW-S'SX"_FN/!H5[Nl7B)hQ]mlG)c4ZJMFI]l]I;A0C%?mCT%A_tgM5s3CLM!msRj6\@<'W-5.s6DTRuZjd0B9\3+,'e'ccF<\ZZ%`cVgjb>A):3A)[&n[7fKZ]:6IPKs[mBD^D/ZebHedZNpU=%R+2N3di2PPBm_8&gSd1p_:-\48VL&Z"c^*D3/*T":4@1c_8sklu6f%DJEh%p.3WSIK14Y:5VRnq$k(sC>bXl%19b.bjg*PS4Yt;Tqhk8#el(W@U(U3.\0bB<eJc^X^O[;h3O=*lQ14_.LS_:`)2@hU*Bn'%T0FVj('gfId4"hg?ms'[DS+aJm#u\bQ?U3k21iW0fQ\j`oF>X'ZM.[5Q^,0Y&kYo-$9L$d`A(u="L?nIgT!K`H1[KdSBhG*4]1IH%MD#ng-P4=_U?e<#=r.V85XS.OJ&KQh"t*!M%ND=onH3WOC/*ot,?ohcU@('"OI)r*+Q0SQMF)9+\?`AVl"b&%]&/@B[/1"+q!R7X%9;82k7!\^+NoHaT=a@=M+OdcTo>d&cioJajJk8Btk?V_$QpW\>ErBPa=Ktt%S[Mu@S$Oh!2H1&6eR-eN7+M0Gjgrj:k*##\jo4#N%OI3aBb[^'Vd4`.((Y+A\2T$Scg*@clBbP\c&CQ*E3pF205BDWS\"mE,I`a].lEI@]gNQi%/_#8HciG'qhf4WU8c)oR0AdG?=sX;/%QNFH3A5E*&\ce=\*mJe.<1qZ]=\hWt[iQD5?3LXdO"6<R$'0Gp#V*/EArUXo6p:T3_5&5diDsJZSUqs^1mbCC3]W_IpY/EjUJn@/%<P/.H8p]b.1D7CN$/4"#g6XtHl4-Ed6m/4d!!cHS64RVA(-7r/)_f&kWq5Cuq6BGm:*JjMFaZfh)G3Cj6mq!k8nV4O'rarUZs;$^%V2%`65`j%`hc?En;C]C>-m,isSU.,Jk4\-i'Lf'&(\@uI:LDtN_)b!-]0DW85'L9I.*V$512M,?F"2$5Wb)d-5,[!5GI%k?`^Gmh%P3c7r#`![.lK3Jg.Q>[.DYG;F%Yd-78nkm#;"VJ>>:j>EK.cEBU/TD@_35M3$(XBF<JJA<Mh$^o`I5DpNPmX"0-+/hH.VMV&bC_j%*uHU\Qi'><)RTJ8;G,iqA7oQroY"Am@7N,dC5/U@CL*6Eg*;bp+-e"KFD-tV*sWN\[WA2bbP-eV6u+Lcea#gF]5d[ZbRN:D:k_\V%=4[;uNebtm5b\%?0jI2&0jI#a9YBM81hr6IN=`,SKNtYM9<!.AA0gBnP'J%4Nl$1ZBROEe^%]"rHO5V]kSRce?WX3:m"K<fZT4Rs%5,]g7Oe=7\A4khSD1Xd!V\]RkEh,rZD]AtBTrsAYaU#0c@17kd#&Z4\Y;u@;2@sN9Asr".Zt=DiaO=rEHb9]P!=^^EYK<_49-tm=%DN+0>?&H!S<&j(:\0t$nD\:!\\Khh7c0KiBO/T)4Vn-m+i#0g'asuW'X,?1O/;kPBn9J$<fS$i3C`Jj+XN_6]URuQ'PK-W[k[[8S%0XhAkXL&LN/9YeRC$)B21sZedGti')+u+Q1(TeTZ=6Z),K&\<;3cU$_<iJ*7@&us<.5u?,SE&dtYITlh%[lQ67(W9_4QD4qc=5FI%l:kP;#(P2I^(M3WUVnTe*_S]Q3`S5E2g>#fOF;)_cJfmO"tf9%I8Makm;\]ND@=#32X&7Eeuj5MK[LK"Q//4`(G3..P+C:;CGdDi%]W^Ir]GE^P@(3f4n]AtiJppJGm@%pFP\IhUb7MP/o7QUh1ne93j%6]drR<E9)/Qi1J7OUb$ROK%[tb9E&Xk)1BkE%(:tbrm_Hi3N%BB),9,P.Fa%/CaRUmgnoWdVlE?T'l)T7sCCTk1c7/-KkU#7BbOAdU5q/%;e\TWU6$%hV@!ZH:a7J5N?2HkcBf";Aa;c^L`Yi=*J:%bo&khI6k^0/IfI1_*(?K8PQ'-eT=q;gJ*+2hSVq(^"%;!mJ<(%"!eC%V8V*W,a?$Dph5\He@8H5<bYLQ:1``c)-G&HdqU1;F>g_3%_@\52<%\]qGcCAOY'O<+;r%)#SjJcc!%%/g$s+m(87fW`+<`o]#.&?5=G1DQ.9IGO66HA0]kd$cb&.X.%I@0*e08`05!GZ<E8A5#%aa,im_Bjeip3(=eB6TXN'(rXi9G_5[b:+K&]!0gg?14#]1iB\1^H061/1_NRX)Lgg,(1:]N!g*%k!R`@pSYp;(pV_VOP4WNK(_8L%<^n%'EDO>HKfL,0_6:CkC59j)it+94dqK.>`T,g$p%(c]<;W#I%3T(tE62AcHNTa3dZS"k9/0SXiOb8aY5<0^Ko_3"L6pS:9"#-+%ZF$*bR:IDR9h9_M@F8R1*_/dYr"r5"I5Q:j55(Pl5cNHZ:X?+X5A.l1p72fJI3\s("kQc=R<JKrW\=d!qpn'(QVBMG/)'C#k-VjD%qeWZQ@p#3_\jpJ7A;$gI)&_<nkHU`Na`pd%_EJ-@^HuBZoHkq6bX";+s)pT&jfk6]0g/nVXRWl%%)!VbaBg\)]Wu4\S>rfS>FU^u%_btgp(2BAI)*p^g-Fl.6M@M]/mPHOXUh#Z_"-ml\:?Eb`d4I%Jdl^:ER#A..'mBWmeUrb(Z+7ad"N,9):!r%SgP?<[+\2jEKe,@m%ZG!45'?+=!1>5Cl`:+Nb^kO2UdTG$CI`:t/=D9,>SoDFn'uN$^K5I/W[_\f2\a41Z2Q]cPha2"0X%&Fl!RZ<P!J`g%(?T#&dic<m%iC`1jK1=PBd@JG"gZB*"[Tur<6P#]#"Peaq32\Pfmg?^#jkf&U3H+9-JVZBOe.'Re42,nQ-Xt?q'[5.T)%14n?Iq:t.N0=)ZI.g,%=$cP$H@6;jT*'`XqiU3omtca@lWA@_cOb'J=eWMAGM@PWqQ)b5kk6=u0!+pXGi@!<+OMV720nQ@`BacP\c+dSCV&mn'e`&pM9AcE%q!*/NrN`$/oQX,,%^`]=&,$^pqL]/i^!=N9$M!>*Pt1*r`1)$+@tjQ!Go5/e2hMWm1n&YGGW@eoVY0c$4H.sMpT,h[n(rjL_85Y'%730;/7d<.Z2q5lo8Q)DR2i6oAr1]p6K&8#a7I\+F@_i/fI%Hor1cbKIN/^f'FEaTn`?i814'?a+4O#PWGa^r!QNVbTNLip\c*T0.%33N[tL+)LX!6l[_[<.1&!ni[k$tWm=.;?_>:6(<;<d0bc'dAe0=m(/%[^,&DY=]-nr:6XK,el,a2UOTbg"L/OS[L3F_+^_$'$g&&%T1-7-U\IuH;c8nGK?MiaX.26%A;d=dIQ+NV,Ea;3O`k%GCqYPSE6,Za8.q(s$C&(_<N9%]b3nQ:g7sdtP#;,8'e;d/M>>boI:f$=%o*lRE^*_6Tl^mK]hBtV%LRLPRN`d.'b8<t=Ll@"i-'.CA6E%J7A^`bV.s2\=Xul.W5)(OMC'pEAm$$W^W4S6rQ<T<%GtGD!,^g&%%=X4ATOnV6.+,hbb(tG9OSO0I5b#r.1REO2\\fn!9<!8]?`2C)W1$37B#aT!ZG?9K[h/4!E'Xs?->B6]b.N0Zp%?U1]?suDJXdKTn%N5/%3njQh9Ga+AOeh*=:=gXX%+i:nQ:?<9J'",jflY`7*/>=aIcU5*$,:G&cPJ$>'"E4f0HS&u,Lg$Q:6bT.@Kbci.O-1Ja=K6Y`%@K[bsfR7R2k2"%3Bu=t#2nSuRFDc6*Im*5/VqMbtPr6EM=$(g/()l!@%pENjfmc=2qhKbSndVY[*rB[(91^q@GpqJN`[$eV_NYE(%A'OT+l<*73`ef(9F:knPA.<@H8A.L$oOK'-c<pbkMq=4/)8q,u,&CWGH^D?*?"uMaA(k>+='s@o3*!'Q?C5?/)mXUjMNXC2g^6+Y%c6U#F[ZB&`3no!$`mMom9$dYuNmKuDn7;[:MV_Dt3Zc:'anjg/"k"3L"2qY%bVn.fPboKb;U5R(Nme2Ek?YB.,ACpE3jtYhZAa34%(?I5uQgIAM@?tcAFCG*[ZjFpQ7=4-IM&ZIHfkKJ@Q/!41,nj<AWflbST5_5&jqH%kg^-!fcBlkKN/b+qakTa#gi%.9<`q85c#4b/%U?^EXZ&,BN6aRpeaF:h)7D[p8%p9f>)kiCiOL%Xu<EAZF9unZ7&O<Lo)qJdeSF9D8Hh'SDHSF,ZV0js=9#u&6@m7\587K#3Y'gT0%_L`&2Z]rJWXPGMF1S19/g.eoIGk-mK=H;XG>M<dUhJf(!jJ"%LFjEIMGGCJA*'(PgX5!<\KZN+TX]%C5"nG9?"_qbD3fiiA:Bnrr%mlL4Pe*fR1Q/ug=rDo!-J6G.CZs?F%V)3/"V^p$U/J+XZEd"2O4N=Ec)%N"'Yp9Hc6+@+m_]Iqi9o,h1^2mN2G>?,kF5nfIf&nkK%'7t%80*ffTgO%u2:o,=!;HsI)H;3tkN3C>I-[m3Q\7mN?ecJQRA^ekin%Tj[e)sW/ERY[eG=q/5(rU9aH&a^m^8@G5^(Q`TH=s#Z%LrSnOT#6bU[J0ULC_:+uDpNf+C9Xm)"?9KmRmPGu+U+!4RQntQ7K9e.2j)):<oS/k3&^sk*if(.%_3Vfk@;!19#+#b]<&O'dc$Ls%+XFTDmPrA.8;(V1T5+q1?;ps)1c@ZueU_t)/ik02:KT3;T;8WPh8Nrj(]epZfcS#c0#JFQs1pbVS65r6rNQ_P73?_R(diJ6^]TuW%AIY,ig&(9CUJ37W5]e9tndo<8o=1ki7:9mBdM5l!EnDK_>*?ue(%6hc3M'hI\*n)R;m9PH8!l><r\guZO.GM#g4#'tD6B1e\\E`O%7PA8`j7$>ilZS(RAGG,hgNB78Otde:4PM;90Ate9"@aluY6riQQte,#F4m!q,=s>0@D#SKmTXNBVY)Bp)&okFJ_cjub`'Ah9W_%q%>+HYZ<7ct;Q3lf-f@!&ZH/)[m2O'*UGA.ko,V2>eDB&dd"^1RgFNn)65J)U8:+-F>@aT+30Ke`K:q,Ka"3B\jr]O\hK1BV21'i$$%@aTb\,>2]+(=0!]r]Jc=SlPY_6bhO>B3!"'_[oL;6J'(\V61%FHS++hSGt8RHHe%)PN<+%]_RpgFn#"N25T\@:)2n^:'4A^3ObD#%7rkFsr-R$qd=Kq*ZsDQE2[VKd+s%5229?SrX=eo<8$ifU^cJ)!L^C8cK#R4<j;9OgM@D>XBp5f#HnClA[?<:#VJYAq`hh2M4Uq!U%#uqoW:@DtOX?<[a+/Dk$\4eY5C2hGn:eS%S\nOb:SON@A\rus#>W.S7F0DWrN<;5&A\>tL7_G=!XO\sF3N?g\@RnU438c]**>9H.%,Fpd]37SZ=;Og\'keeSX%g#g9%nmO$'HA?1d0A9;dIUTjP*Sp*@PnNA(3\XC5m:$Ne/!*;0V!#pW-CdGK^BfJ:>p3U?D00dLZ%[n%I7/$Jh9/g"JuCSH6.kTt2K!alS4>k4Nk6I5^ek[=KT3klj_Gr%*V+'`BA`/ZimuLL]-ZlYY;D@%k`AD<*QuE\E?d[6^tbEAIAf3%%@j2j!B4'p#%fl/-2Ja9Ii9MG`@dpT)h,*Au!n[paWsiE/Wu1NbZ:@AKJb;*e+G`<O><^MTWebdCOe[i<`2VJ%*e`oC:0pZAPKIJ?%;<JU%'B4sZkljG8eVamhCnT)oaE8duU6LOWjV`oRWLW_G<PkuC0.ZPsq9#Z*"'XssAO%M%->6VRM@B8`TXdDpEa>M:<uPbA<=T*;%jKF]u-)VX^!*&@GNZrF\#KD!+:a?&^o0sj`5*+#!_bJ=Q`IO_#A21u2ehN[[;NluB7Pe(=3B\S2EO2^erYWA*`jgcBVPCiDK)d1Z%'F%401s<6FJ>fI68Xa<rO#(q7fJDBD<80)>k76J!H(Zu^VVVD(lU\#%J'6a>XYa$[+8;pA[d7q8rKqcMf0QI0R,S2:\Ya(2,YpM"%;M5'5l9*$rKC?;`H80/O8<0l^+qd6Z@6Tpu@0lM2D9nhH#*L/D+PS3_0;+.e7dr\)Lo2#(B"5h8+QO#"(,I+2Fa.UKQ/X@QJZm0&%i0sG7;B#1+)Q#Q__f).uD3@<BddAGo"&30;Fko/&f2ZPq;n8cI[)mG<,EVLontDm&,nIJ+!nXg)S4FBm^r4K]&OseN]6/;Bn[Pn,%GMNmU#*f]p^frid`3nrX6*'7S(s$l,-&`a8\!_PK:Bcq/HSSFlkoL!KZHh!rC3CCl[B7?G+hJ=JcLhC)%nNTrn#7T%2!47h4\h8_%(R+=KXu"+GA=KpiV$R,j4A#C_6[)ltAMQ@jEC^2,]\%mb']62/6EZ`#;Q8#T)r6r6'$*(sn(I'XjjR].+bEm#!9q'nD8su.%A?>p%D/#BB&2RrEUoC4([$dpTPRTGW@coZho*k4H2qdPSls_b%dQ6!9R7&j>+-m4Wj8Oo<#Ro.[r6=u4']_^h`PX=cb!IZ\]en7qOrB.L%dQ0U"#cSm<C&SC#Ck2uLOp'W4BlBeG.V846Y>i*%:`J`dMhU'&+ej+l%_?dF\P&h+j(rhOG-O/hcRfBQG6?X\;#/kG<%Qbi[fXN_%*X3b=I!'$Nop$Th\h8gc.RQg]4s+_?f/sD'Yis)]f=jJ0CLu@6IFVTWE:bhYF2"LF3-RGj2),I9S8[L49Q@O=r,C8M6(,6h_pQim%h(g<le4H6(6`5!qm[;do#.rR-[s>#5(d'<#A0KOJ\,t1D3#,CgmoBUM>*0Nk&O9oLc5!@WLIgfsR#)E$:A`Hk(ZqjP*t8>K!ap^9%@N$$0fl?DdX@Qsg]d=nlL`W'?P4<01[c(f*HX$JpFaElJcX)(phaZtL`:"\GlC6ljf#JX?3Gh*;552W<=Ki6%$Bp9Z[s#^C+bgV`%>U:*r(:9e8eK_A7g+cD4Pt6cG1;&OJX+ZV['r%Zq3m1]=P%$t5$;'d+=D6]tD<j%"@nD"t!-O0J!iDEmnD*'qZ'o&O8*U.#+AgPA%qES<QPKelk]5;_Xb=M*\lRG3a.iDZmafd<Yo`B!*$7gGl^lo40JA5\A-BpO=<U45FXtWF92un'ND.&,:FS.?E:`'3N\Kk^q2I:J"%!P4!4ln<@fo6Y1(d-.Y)!\sF9E*9$S$(qL5,WT+uT>1>==K:2b337O9e>nT*Ai%usHit*^RA.Is2$Jml0RWZ@[Za^c9+LilN$j@Q%VEZ1TP`srfV8?\bN=<Tq&o6R@&d+)`s'-o]NG=]5L/B;gcnH/f7L$lehJnL!L*d0>;M].IQ@f`96b]Hdat,&*P8;m_cbs-6(8GNT%(hf+G]ZJ/1/'\F\]=B2+NLf\8aPi8\bs5.'5\c!3/PIpflB8^-<0e`"M;:ir@Q,Ol)TbIm\43Xb]C+^,T1dD\>;FVAK=%^Y]2)f'%HAF%B<6__:"dE&+l?I<t,m4X"k00->CehBM0O5*IC2"S%e^LX$#WLjDOL:<KQs0CnWBJ4K'0QFul!#q3-[*Vr`:PBE4DR9pe*N"t%Tpsg)YhMppb#u(X7a*E[DB:F]a%\>W2=haL;<!$[cPkH59Q?q]B^/5Wb&a9jbE[r^23jI=;#-WF0fB-K?7L+bn3-iJno:iU86@<5%N8GM1=CR^f$u>1CF6m-*SVBabV])MM;,HL<I4ZVY3:=K_E_Y;=;pg%U,9Y)a_mrI;bpJfUoeCf[XSW[=LV!`[LHY+o!/9K-?9MOP%\)\a/eR^p<XrDFoJpmX2MF`Sn]L=o"+BQ2emk>1MP]dnMD(;1C7(2u(`QrK;*mU@&j)Y>g2.tO/`8Un*X^F+pUoi8@U*S?4j?c^'%.8"$C+=6aiYtJPu&d>07#D2En`2jFrl<NUqdBJdolE7\\I-VHbfI_@hOC[]U1")M9/L>49?L`?dHXt-JfP0NQe?ODNpKhA#>1Cu"%mq5%.ZC-[n2GQYA7t$sbZK)'Tr_+QhRTtdr;#=bXZ<bN'f2Glo@b7!WcdYD=HCY8Po/TZRR9<7V;a)e0_EB:Uhc&jNM48,h9fZkS%6*fsHHVd[W6G1P\j*#!'`4;?J`V7B14iL#P9q4/HN1hY^cuI+=Rr`5d7!'QMpbM<*anQJ]e=Z/>;ea9A+Ds@R]8G"s8=Y.oF`Ndo%[-g/>9(o:bbs/C\nh7cQm$hpCq1n:FJ,&l@cbK;7j_l*FIegsd^A@QbVk<p&Z[TH6IJ`'VhgP1:bFee$o07^"Er5]k07W]dT3A80%C]>^f`BUQW0C+t^IBbg5prU9u2p2!Yq!W.@J)d1$eUCg/e$oF*3h434AGih(+[,#;!CZ_!k<k&1+11qD#I*)M*h)?RLM$2QcOV[u%f&K!nm:X35Vr.FKmp@uDh!j.qB+=a!roLa?2n+B&($DH*S9JqikM<1okh2,Y3,#\]<n-=f0BCsnX`KP7!8EEO4`*Gn0dO*h-(aQF%LslZ=FQ7VrGj1`5,C1>EA"ITYq(^/i`^uDQd]nl!H(Jh?hj92\&35ge\i<4touSVBa`&2D%kpD4H6kVY&4e[46ueoL(V@0KiG,8i%(p)B2QdKfJ)>0(pciJctV'+AoQ[Gul_QV7+b07P>WO^)@(baC/PaXZSeHXkHU6Tj.!P?[33V>a7V:sB\+X:E,^jK!?lsb43<UW!k%a/mj,kGn^McB8fj%j&?BmApg*h'&2(1ZP/P.h,fNfF9VIb"/E/jA!Vl*^t.c6@ltrdX.45:?7,Je_jm'Y/%(#q?lP"dB"DP@);F"%<3%'AS_-=??'?83b%]W)qR6:>Gt.J3!*b]\D%!;]luTWfT5tjZ\P:X8LX:uUXq>n[dGdnuY2r0Unu%9]WZ[b8D'9pBdDln(c-f+R%BQ+4a)Wm9ljDL$WB@D#e-$'5/`@*.@BCMcEhnum4_nA'XZ>E;9Uon[7P86>*gM'(SKf=5:6s)m-P;3)RS\U&2Z:'M=ZriR5r*]s'%/pkXfglt'7UeS7[a`+p:VsPp\.B6>@aI1FaDd`VhYnI1fkfDD20Oh#CXk^'8jCbo&%X=)''0\?@aI\858[ViH5V68+.C+.B]ZfW(%,X[T^S_\*e%8"L?ar6t_'880'PMSO8gs`5qd[,XFg:kY-FF.or]^X+0WS@kd'CH%La^'R[A9IcKA0,$`'M=)r1rXqn(BXh^d<VgD%00510CT3hWMJ1Gb[Zle$`ed*W)=cB1heAY/rW;!RMNUpk,;)d??,d.KN"Z@X)NUC+];;@ESH`QCD8\2GTLjBtO:^djM=N%ri`?g>%GJpZ@Di60X*E_'u1+HG=OVIoi%%XstaoEV1"^'%uBloT3Jqi=s.c*^Hn!B[SM`<#([koM]n$\ub>YlkP4.;1dZGMEn_^-O:"h9[-%%sL%^I]c3[3JiAG,)XWc^`4/7%;,]_$=2fD2cVom]u\kA3QI^W0k/dDN["X:j:m6]qN3Gsl',MS'9c'UQ]`Tc%0fi.oCR)ikc4AB%+j"6c/0SN499)q?7oWVZP9`j[P9__U9;C^*pHT=(8DU*r6Yr)QR7H"P5cuV-0k*VXOl]`;5r;k%P(7q@F<T.D@:FK5pX\0q@Ct`B%Z*7r7&IY)&,`+"<,/hPODJ0@mbmg5*GS"n&>NDT)dpJb;8gK(O;DKI^DQlSuP+Rj+OGTLg*RmH2Pb*`c)Pia#69rOc$P>t5lI3sJ%5,5_X04)O)H9k;("WqHo%Y8B7C!V//jK7J@*=+Dqe>o_9pjJYh]LoF!"6@Eh^[i>8!8eL@*8M!&ES_'212^*n3`)9[p<[4[)h=6G%7e3Z>ULD:@&;^n94.u;QPHeb29WM42EgEhdiRT#M'UD/$a4(tPVklB6`-Xo6j-EmsNioU1a:G\fBd[a#eGS3jYnYNn(cU^O@;82T%&TI._*W;@)&bC&2nH+:K=Cc6m#s/eaW(chVZW$HI",WQ&E2?5gq[?gZZbaTL$mW+".DBI6UPXK4$[+4*X'+2u3'sg!,U9fk1(je3%7S)+c1EIAVR]jIi<J-Zh-8.hrL;9<EC&-,;rA<kAC&+Dtd`N_VFf:[\^'>!/ldcBIM]]Q$`W5^LbC%^J.LQQSRcA4L/JC.\Cc5]i%<abI:-sq]QXI-*UW;E="*cD-ie.0ql-VK9D%$Hjr.GGQLR,7ud4E64UK9dXSl(GRX)0O[;Obq$_NL+LIP:&<XP_m&*``SaV2KY+a%Ea3^?ife_0&3iLi'(t@VTK3ZJ:dSP^<H<i64EXH"4o,EXeO=$_M@XN;m<Obg&^DM$IJtd,R0[rkM;gsY;Ih?\j&hS`O9-sNm;PHm%P5;5,OVV\(-Mj#rJHQ*KRZAhi_nO6C/F*p(Cr;VP>VK9!,i%rk@"'!t0'F0A&0n55jV/oe)B`kWM!HFq4S4M"+6[P/O\uk*f@"k#%4kFY+=*L"UMgk5>o7A3n1K/tec&4daFn;?FZOJVmaN@IQhRmZ*M?t0nOR4?l.D:RLE(j&3*>MH,N`=8.`D.dVP?,P7STZ[/a1)?t%R=%J''LZe\=jsRqB@]EQ3SXMp`65X)^pD9L.*;k$?!5dDe"uJH[6>V/>*KT%14N\%006TK/*@FGk,6bd!!OSaX8RAj3u"/IpFQUF%H[KtW<,>sDO(rh`AAf_&enWR=e\`i2j+R20VuO1QUlriE)"-.:Ku&KVFk)Ej5abu#Wg/D2n@jnt9ht<P(m?+'WKcXe15QmsdA9@Y%!ck%c!c@^BB^k@M,M@<.L+R,epNSgf%E)J8]nl5+XI@7=SH*M,h3r^rfMN"IKc2JOnS!4oAF/73f6#fPrKRh_`ofjY/N\,a@_Kg6%`%okbK@?<f;$+B@)qF$/Fs8/T!+j<o?_Qi'E\,RjK:]COmJhP!e5\^*dR/NOY;ToD;.-u\!eE:NcFL'SY`WS0H1/HVV>,H!*Era-%?")4Eb]0*#--#dp3q;!>W$CI<I4LlaSMgGLSggoohBV-[pg02T+7FVt76R79^K;J@:O->9cDQ(EfZ<?3_+sk15E*\YZmWldd=Asa%9NcU4g_SNU^(PG[IGPP]o)4q+a:GiZ1)QYC%W^Ir\*MCpe&;dSo55@l)LdRE8U49!iG<Nd[B9E*]Yhka;2;ei:G6!,DEsh<^.:kM%Vq`pR7]9WImt![e#=HU"]r=i6n@UC_bBqeZL,,%WrF)i>LZSI>d5S?A9D3Tl=ErL4-IDF"b"`U*s2`9YQqPn#@A_F1/;In2igcfR%WB'3$lu]U9a[k%s<F[^d\ifa7SMsg.XRj]=K(Tmr04aX%f0e/FrUsi]oT$H?Q7qGt;E)P-om-+_E^bD:^7frFj4Q-/qrK7jN:II(%L(WJBYe/e5+=kRU@N_;:3JkIqT'1jfpcR(5#P(eQ?qN5I@"GjPm'aABO<qB_%=>mgYR<l=TB6sLJ5h8sp\A7p,f``-e3:u0'MWhD%B..]L:GE=W,T.@]6QDA8l6iO*Xq(d9/Z2NY3ob=.QKtVqbVOWm0bQ^jW:r[4+J7]DM`L>7XEs[ZG_T;'mQ9d0_R2=9QLEN$=P6L/%hokoBEt!F\q3Np7:N5gb3W0'ghdT>F_8CJF3+q,d2;E9G"o9ZaIF5$d_UfT&i-E>VHGk9"Z]@Gk:LWW@X7`65qpGUoK":@HE(o,)%Zt6bg@-Y4YdR&[S&7d4.;@*Q#Tg`ZXGRt'I2WmIu.$.jRZL).g^HKf]mqZum=N@n?lV"OM>=CcJmY-S)o$l#&jB8>u$Ab>;Wd3*m%\*L2DP,Nb^G`F,Nm-u/l'ZK24kGb2)-uY1paJ.r5j>jfMr.+`J_Ple<DLMONoPI"WbO>ub,QEu.&!Ufn*TA6#G+T+;ENLfh>n[8\%mU[oP&)7),46`&LAJj7ZJ.DCJ/Fd9</e^EO]#2TBp,ms!\@24Fge41b>9>&nO*sM3&>#p2<DuU$))`n>,=6#Lg[:E.,"e5-,>)%1%NQ]VX54#SagSpL'A<_g3:J+Zj>>K4Gn_c$9D=@(umjYuZ75[9Mf_59LTc_D0G(&"[Dg?G([_c6;TAV4NQi*ap,HF)i$0'%#YC;?i%Z:`$++HNV-qIf":(FRVN'1cFO%b05R3suu(gB.:d,5YgjneAY7iX#=(H@KOSQJeB8I@fHu6&3/0;:Vg61ZZ_H`d._*Y$-u81FAo/%Z&BZ*]```bUi^VC$/h4M1[6ZiR$`Yo@b`:Qq$=9NMQ_F^5mj1.(8SL8NG+HsT.Hs2<L:C?IFr1N2]Bjf?oO`S`rV*U/q];"#Prg-%ZKoEn]qq\tN<"!'U)tBXK\+=Yj2D^RNb9QU'Q];4@`Cg]:P]q,N6fP(.>Atk7#kDlcP*Qn('F-td:3q0T84S1I5n.]DOE-;b2&BI%7n8l'FnIJoj\!*3U<E'7T+WaE;-VpUQWE@gDbK^)"QDYIP+q(Vl?M1A5(u,u-i`aOo^N;N_^l8n,RX?9)kJ1705@>]B]PTQBd3?s%]7#i7rm;."]CY/K=Pj2Yk\tsT8q&m1htL5I58LQn#F+t1cp$%Aq65;!gA6j@gin2!R;Z`n6r>b:#@ZCE;`$mNKY5q`YRiH6,UBb$%,8_+("C)Ku)7*:0rq;L`aA\_4',H(9g7*SXGILCRC.%p$gteZ?5J<:7m-.ik#q6b+8Lq+9GAh0,6I3cE?;)/URkMDr@^>VBaPnU;%$lFt(?44>c=enCu.uBNXrf>96-*u2a*G!-N>!-TFL.\TVdn;#u9\3iFY^E<Y63^"N6"YscNJ`+J^@Z$L4->*s#`[VoPupXKK#rt%%[k?-Act?-f@`f???U=sH+*.dK<gbHK/KY)QR]o"i]p<]%r3F\*L^ubrc#./5MgaRsi/eb=5>e3&o.au-_A"`\[COogEd0<I?=@[_%Z^p6Wr9q&ajJ$!/l#q^fpBTadcUVBQk6g=fbK-BheqX>k*U^>ZoDu+[6,5UaX"o$\;"bQZ#"%^V[39QdZheNc.,!XdLKP2qH<"A[%KB7[1rZ4'U)I$FD^cLmNN80^!B2(=-gRgUVW^hD>DE#0qZG>/0Q3qJIa?r^(Au0fAF"ec)pEFFtX42QnPstZTW?R=PL5J!Dh@r)B%mfB.kU7kOu'%K!PAdo<$.TpM@)<!2a*VWbl@IL]&h1DRjI;;0%2Al$/^(foiUJ0#W%$n@k:@`f0$R1QF.n&]_8S^j"YWrS1m'rK2%eqq\Y_4.,i@EB6m<X\IiQnkH0pVaDWZl)-BP$Ji)I/Tp=eL_rC^Z[sKKZdX5j<?i&U-95b8`H9pRgEg%bXn<9YQgF[+]!'HR.EAl%!Z(tJ/DpfFib7,0OZbm9qAJerRcQY]d;8$qc_p`m[cM,U0M,%-*L#iO]d"cL?O]#u2p6Y-_`UFW6pDYrdgol+,@_q*7n1lD@E9*j%Ieb8%AeSV$*4r=5mGWS"3LZ1kbKJ!qmE_hB1%\Jj\B]@O$bKm<LLqeKX$jrqjB?V^CE">/M'Q>-eC^#<Bdf"+RP*k;Z9-ItUnP'=%7HX@-Eop.E&A7Q?)>mc)e9&"n:hAB$=a.Ca]LV6-8^kRNnff.<=^gUeI&:Fr-o's%*J"MbUS_b$e'mc=HlCnU*o;AXI2fGQ`3Ra+%LKJ6A069]-'1,emT;h=gg_u&jbK7R5;K]>*%^@,tp7=LMM?mSR;FTRIbPGNe[c6]NL[od/*n.j%20)=Oa;uHpX_gKp&etmp=:rXp%\KU@Z';R2V/L]=<DOBh/QPFfG+n0>Z%Em\n[jCmUiR'*e<BB=l-+oL<OiA8=pBYF3'ZjY>mZg]Ve;Se6$U&<d+f&/SHO/7;1'Hsf%.J+<]K[<ng3!i/;4e^<g[H0VZD)pfC`7RLYVVXl.JA>]u+BoG:)+@g[!`p&#T_7c$T2".AZ#+V)Ui(Bti;.D)]\QJLr!7ppX!ibN%;CYEA9;pG?_G"ND6C$sm%@a_(ep>[s(JRRm6gnK@E^ClrcR*(dD0)^fj@E;PK:FA+G'D6a>WfC0XI.@2,Iik4(_jnX@7E8L1,A!2%lCL,UEmqqK/J$>oicT?u^7C4Bf.STeD`I_@!g9&ZF<QadM68\Sf7TCkn)jhpSRlM:hNV<7d]!]_J`JA/Zl#W+;`=j2FkOq'_m[=V%$.r'I;gs):7uW/5j:oj0(q:>[[<Acka/`Q>6="`1^>Wq=kQkD424[gcMU&+M&Ugs"N)V\"&nQ2t/_-SXf1.EBZRut=+_eN+&9LV(%$9utDf&UQ,Jo:r$*qCX2'Q9XX&$n(Oh3[#K&:H'QoXJUV6uHREBde81Q;Wc^[;qtI.%)u]U1s:P@E'bFC9`/3VpW[mQ3a4P/Ik&U%h9VHuiC)eHNP"@Z'<_ocrcVSi#;ua62kZp(oO,%jS/*5nWRDK7&nI\.#AH6D=!ZENjsh!qbP0EKPZ)9OX("Qg9hO&LV.0WE@-.mb%Zh@6(om(\G]Xq!aB2jnUQ@%i-)2Yq9`,2`s(cF=l8_cIj&X8UnnO6>"j*FP9/WTC\UioVNiuX?4RSO.pMTRAZ['UsL0rbbH\5\^g%+K8AL,mmeuDY@-C:56n;s*EIYeQ6UNQ:g2/F?U:eBrN&/-t"UPKZP+2lf\+`<P?*.O35N_csY:fMGd6fU1VsO:W9.g(7D.8k:51a%m]eg6FmG.rLWdu/0tKs']Bqc.d/Q]1Rd1pLEd'+K5&C7'*i"?K(bm=]LrM__giUIU9P9i:Xtg3GOY"+_A^="&SKNP,.RN^EMr.S[%.i/F>rUiIAhgYWQ/*<!+Pk*[PWtScoYDrSiE26O1Y:l55`'O"ZX2Up9[7X6_\.\d5J>7(OEl,>em.Fd#hGV3Jed?97DZJtni?44O%L>_$`H$VinYY'Ng"qIS$+3mH)Pl6UH,W+\M\RR@9cD[:H'X3+>(,pgH'Xo1m>+CV]q*n6q8r$Xnp!VUlPnZef6T;9lk\X(!g5L]7%#[cn^KAf;'2`sGG^rOUW\X#W1-@2H6']$A>74!8>,[W,0j7PFO6'.bXqe_W`ATVs'KS1E@l#l2nBWo^"C%'2:Vu#^J:VgHp%eZ#V%DtV\r`Kr0!F:i(tLa;Pa[+ATu*8Kkt+b*/ET[6;N)nK$K=*NLFoFR7QMf2DJ'li8l.mC.oYWuf?%67.\ZE5]/Ed_''[qdt`V\\#?%`EAJnQ],clqrNepgOAZ)+k&)]q4\8Dl_%QB<*ZsiJ5FiE@]aC#h(Cc'h_jBhY[MJ7,qu\@Z5VfD1Mm#,Kh.It62#r`%9kb-dOCP4%.I-'D1.#,mF\1OYohf*4hLpi)VLGkFlh18LJTU[afQsm1O(j63'.Tu7Ls.gt>O"*Q;(D6A\;C>^q\Xa:]TWA)7Bi9/iQ&FQKH,4R%pghV4..9<R!IGg$gI<^%5F"b#dUE3CoATWQd5RJCHJ=ZWR9rq+&,A*%bp=U#qoLTY%MXAq$.4Yb41JlZ#[RAr;D"3B]fp8Mg\$T.%WNp!Xel6>cFl63/HH9to*'UfJ.W=J2=5JE<I@EA)[lO7e;O]^a%uE/K!NsWRa7*#m"-*^c;:3eI7uiZnPNuciqH!2Po.WtL5hriK%_l*5c=?1HMN=/b.*F#<>D3)4K9LZ-`Y183(@bG,=X]#0I*D-7caNQK@:RW7YA&t[YCI$CdbR`q9>g2V\i[4AFLq+>7pL7JGA%iLX%PiK?c#UlA5>T'r7MeZUPlK+3Yh73=Q^'UZ]^.`p-..DbIU[4`?VO%/nQYkL:qu"s-@nZjN**L0XQgO;/egqGsRF/]+39emI])t0C%GN`6p\AJe*DXh6E`Q`((]GH9u'6!c4ebU&bHWRcF;s'o<\e4/gI_[fNj\aj4Mk'i3^l)*/d=Cs5^tr\(T4eP98XlHU;^l1;c(FW8%Z3r4P1E3nlmVgiL91BSXjIh<+AO.i+$D!=QQ%_WO-u:p#QPRs/6T28g_6W=WLE5r/>tl2^O[(gH(q7V&9d4Vk)^MEnoeRoE+bl:[%Jh@[6>O,0bpjO&`c,jX+ridf_^\PT0rO+5Mb1"YJ&/n,40.Eq@R?6,af8"eJk42oN:m;4F3KT7LT+7S"f"&Yj,s3gN60[DR72hS'%KB<d3K->:^pg?W*0GhbP%R)Hgg%VH4n4?BK=EK5[WsM@k;UeIl=5B"afO6#4BW4$kFNQY8`V[:6nE[u#GfqW:1hSF&?L^=U5]O>9%#t4[X#(#>3oNPEu_k-2,%st#@k$)otL9(n6,G3kN:KSu/h&P(!pCH$O@J$\?3oS4J_%O5ZOMaV"-ZP+XB[\A>>O3QUmNh0=P\7P:%KZ$Vg%c_-fhL?)bRor0IqBG!pm_If5j=NYPQ(f*ni#di4KZ74l$B(Eq3\INmSW$(G5KO/.e1Ff2TW!c/)-g57;I)3OqQT4&f;UmL%$g27o_]hOY&DFGb^/<s!\m`ZkYp%RMjJ6=F^+)CIMfVYI`FL7-]f.:FMXAYI,V!p(>'58Gf!i<7`@JQf#jL2uh5B%g]Q:&b[C`Eo%AM;f*YV>c+3n6bEkmqAN*aPi%eTB6%C@nY0f8%Us]+1Sl(cSBt7B,V2"tl%g%nO1dJh:W6J_WY1JF)F"HB@$G"SK@j;Ff`oaBP4u%*8_bX,OLUuUIAC['s=(\)N6(,AH$117lmYB@h6\GO_H\(lGCf='#`6H^N\1%C6tfZg,1JS6&S=RNr(M<D3K@-495"4U)ECte@7]4%0Q4[K-/.<6Cu26lUqjWfr@iFN8h]CS<?:K`)SuZ\?4.lT3$\cfN8t&ubTlReEW*6A)s:Z8g:/6q]ZY>/cSA+LV9%iZEh(Qo7@_c;%A>B&EO=UJ23i&_dc2lN?.l;CI3h>D^6En&D1=o.JDEs8p<f=lb[.NUJAa<SZmPSl"<\S<VZ4K0Y?#Vsfi=50GpBHO8G$1s*fr+AZ%k%qTUh$gt\S@<E^-Q&>ISfYNX9N.)iQAqdp'3\=\<H(j(EIuZ9dW.$pD[JubK\_30]6>+pV"cMBdJo.Ab]T,/>DU\6oWU\'9^om[%PJ.#%cppXhbfD2Yj2<XIjNR,ic([j,a0H"'LZcS=gDCgEejgs7X!iVI0RC"`W%j7:ck/Uj,EjkeOC+mo[d7reh:-*sVZ:oQI^q<p%_HHH;RurdM%+D$eN@R2sMo\R!:RIk)1IB<)L.a8Z,3-TY?jn!<OV+>NLRO7NKN-a0;r<;n'dC+uq5bN#@63Fm-_rg8mQqu_.)$+]%^0$E^h^%Va8L\$9LdJCf2t5FSe)B[@g;KXu;1[I7`&q^c\=I]^Z!jgo/]&SeE4k?SoW'-k$Udi`G?N__=E0IE6es,">A`,/EC=35%LrqW30_W\_J^2A>9oc*Qag)D>Ql<*Qn[7,L:;[uGL_c#4*.6$[,Ed11JY;m>456[1;i:OsS>[CG<Na+!RG+&f-:\ludA#I3]H.ra%gajZc\p:A*-M+J1J%cB\gVrNh5+46F2A\Gf9Mi$l0QIUb0UV!Y1c6[,ep4;6X;-M%S3McukFUjYg`2:6).f$gWq0=\6uU;A+6jXZ%rbn/-+-(&)%0L#,DG`SOXHE6*M]B5j?ecg[*R_TYNHa&gf1-kW<[4u#Bihj3c-,tFVn`2sfDkK4?iU)JVX9f7GNYSUlp"NBPUctM%H:,Mg*Kd33!g!!7mLHGnC:PZlK'XlrGBX0*]^s&PK-[=@%i#$=.Z\16p6HLm]]JCu:[/8`nM?i(>ck'94:P>3=KL"+q:_kOkY6-M%RFd4"r0FA$d*KPEVaMP!eInuN69r:^)GY]i:'X2Y5YMZUq*Xj^mTOp^3%',3C/1I]?M4p::Cn`J->K8s,#W0baflQso20U+D'n)5%W;"g1Mf-3llKbo9cN@AOa:rMW_d)(5$Ro@/nbO;D$!2l@%OQl_P,=h]"8Y_\mRZ?7!rBV>Y.5R+Lf6T1^TGa1%_^cFf\L^C3c*Ku%)p.GDR^(la4`6E3U0/8Al3k(b3>K=YAJ-g77;jkLmbml7\5]k<,c8g!!fi):E:8#!]jcF9F;PE(+<cgCkLct"gLYBlJX"/>i(0;K%EB")sT#<<7H;]BnSl@l&oI+J%OnrNR:(^o74]uA/2fbgkTk6dZUq])u$?,ZD-^P;9Sf>Jl%r74]2%K?pe)qj>,#que8Fg39.>+Kr%4q*,*?)2mV+"PRI8>>!=?IauH*1%,E5&/VP>1i4jSDF6sQAAL&;C@p-M1X,I>soPm;81"<dhJ$01pJ/nOK"diJmW:W%?ZI:aGWD?%;EZ]ZdJ%VK3dk0G&M3.RiRdt@G^I1E&t@^CW!V"eedJK@!G#p5+-ue4oPO9R>hc`Fo(Xt7i7pm^_ZY*aHLU--Dhf^58]mul2BkVu%P#JGsq'aH8.O*_-DFW')QYe:K4![0^\0GbfjGd*\Ep^A?3Z/5EI`Y.0>plD%>ufgsZcEB5e4<&Jp:)5uRp(3$kHeqBa*;>T:.9=8%:f5cBZZsVR9d+_Vq5h^-oL\/o`jm4V'T-h/Pru<G*JjtT-W'ZuH$5&aD`N`Z&*NZ@XVqWS<qNN&Ojm1p*>'[!?U:j)(m4];Ukj0N%kL__u]np[TF$^$^X*T3HJ@Fg4Ir>:X?@MaWQf%bNnUg`+O7C!Thr"BZqqlVbhnSss5AXYT3W?<M5j7,(0RisRmDo7[^jgje^&5dk%J,^VVQS5(`J*`Gm%rp$:JrS'JGL2lL)V=ZlMH/lC3Oe$tn=jnhS9rOk43N]*Zp?QW]:S$Ghp3P$ei]as\h?Ic@n;E'+>m]UpJr8F%a#6:TA60h(Og@dH9hBL2V.hPS=,:i#nrlTLoRc)"o"\-'2A_/<3;R/"a(..o0*!5kRm[G*/-JgrKLBel,>bauMLqdM.M*%>2Y(F$%>_GR0'K"8^[2E\5$l5CRHbIEr16.-g#9t3$]qBN\=%5]:K"^Cs5muuM!-XtBoAqj-;U$%r1F!LmQhd@tK\PS2:-Ioj*04:(SW=oC%SL#Q^+$=^!mTCVG\jJ6DMrQ+XOGuBDfF9Vqdn$A8jE]p;O.nWO&T3WL/dDKLa@";(i&:&,^l%:.$)8+Fr>k&4QMW\C'oh8EN*TqA%^nZ#*p5S^O`pV(?g]EA:4Ac>`S@bUKe2/=sT%cZ'O%CBUEjkpY\&kcoa&A4<)ou(U;nq!W'$2^3kpU.-Sg'%[MAgVH>R;g+YK3\^%(;'O$bLu`?gUB&Nco>i]-G*XsjHb1SE6<-],TVM)UZYHeNY&=7MCkB\mF:#Z,]\]`IqX<QoIToP6bn1A)N'8c_jh[!'9SL+MIb%]%QpT&.HZ%9*'sA`7_^V"`YSqQ9p&eiT>VMk1:DsBAoU*\r2Ens883V+d&X%Lo!GoRFGXbFraU.8+<"t1f*PVg>dHC'ldD?j]]gJD;%\T-]s.^mUDW%2Y:mcP;-6r(=nleY,j-:qVYK)==IVpas(cHViOir8F4B26s0$f*hR7F42nmZ$4h'G%5!QRO/DbBZ+qjUJ>E<%d>p%8``rXN\L9r2mf]NA"orc!';Dh2!*8d_pr,PZW:u3jVHhG,ag%;L_u68Ys.#_1U]W.^:R%tN,+*b2bPtQR4P$VV\=<1\,1$i&[[a6%Mil?-g,5iX%V>hsQ&m(QA>E>M)5SL4ne40*rh-cT"2$0N'c*=XF-!2"1_OXUR(-6rZ?E*U*Xj8+@@)p\s*#\69CIJ,iH:EI1b+ZY%U]1u@o)\GaVT0ZbjqPDNWGeeY[!RqARn+X=;Z`K9lnJ$#!uX,<_QSEa5[ZXLGK@_`'#^X-TY&4:.R+ifHmf8+FX\sq2:(hFG.Sgd%ATVHn7l8?(<&;Y4o!C62DR]ZM`ONKPo\s\R5++pqi[h5_o9V6Xm2>LHcQJZ/IWQ_$O=nIk/56!-qVJg<rbNAk/pfDA+gS*]41ae$%.K#*oU8ObWd.DDdM,tViX@5kk-iF3`$"^FJq'%TrbV'3hhs'5f99@)^#Fhd:SPMm"bD9i,j&=#i5$PXt-D$h<8jS(F"Vb[d%^a[E%P\.W1o!WMJ"(CGJHF<E\b:d-%cD^X@H0`$AN8!PLVL%bb<fhKRcsT.Q>IqF6Zj;UV$smTmh]surFD)2IkV(`)CF;.\)_S9N[1ZGK%CjM&;mYs!P,k;F$@i3:PifFgl!0rV7jgiSC>oW6of@nt)W\X_V_09IhjO#-o;Nb&6@MCpFB/BVQk[16Ff_T]N<sPf5,@bN7DOV_&%2?fjYVG1BI7*]Yr0W1Fh!j>O-gLOmuqnL3$o*O,.b3Yi18ha=^m,=(H`&iN?H.^VW,ckX;KX"!W4@DS?^UX,>%C^DI8/ZuPaqZpf%dP.gIqe=^Ee#Z-5S57t<MC/b\5=."g@8t`;+ZA7gpM1ba^?p(ZGKT?-#MqEUHUSDUi!h>2)qGjW!=nE-jg43OR*=HdQ_Htl%s"'p%KgCre,t)I%.:2(gS#'Gj(SJ[F1:aY[XJP!s%Z>iul;U*>]"eSGC8j%hPFL1?jOYFh9@#`W4]O#h;2+"nHePSc6FIMtnZj_<Jue3:%W"sEucurY=(DTLia9B!\[=+)]SqRTi+7mf&Q8)4DS@gLp=17!8\:$33GX()=-piraltr"5I[T0r)Z2?>RG:`)$S)c>=2%ad_NO6e%'Q1!S.AW=#)Rds@%*kS,q587E4/WY#_ZDin"X?cscjS3/EF]/0dkoi)V'^F3V=/.gY/,Rj^+?l+amn]"KA`iV9R2D;*<sWd]+/?1%W@n^"f.iG4*Rjmq[RE?fZjZ"9A6`+(2D?Dap@p%R7h5YR5GqH<bZ;Sp]sQBRZqYP_X;_Y!WM1N%W[kWRVf4lZ@Ik$rc?:p&n\XTF%n5+-b:$%%eX),<\C8L?4[6>V/>*KRO>(9obs%UKM=3fDK+Oa5+J8EKN;LXC3L[C>m)r7t?jELCaOAX(Ie0!6-8B<JB5M'YcS2Um)%c&=H!PRO1Xc93>9N(\kec5-lK!$@$.0[p/+)IMbhcjDfEr>=`NhONi+5*.:Z'-cI&3lW-#!'9+TOmK7J,Lb81'JrcUie._]n13S`%)]IkY=?02,Y;Ql1$A<P]RPC31R[^oHH(T:3=3LiJAIs>k6_BIF4+CVdEAR;i2N0=Q5IpkUqCEu<"cEg_:fF>VlG@[s;^;B%0/fhe%_l\N6`!"4NU=QA?UuNWb+G<X\f7EYq&@f37[WD6Yl,+#5kU:=dX'jXoS*#"bI[`g.MttFeD>$h?J)20C3Sc7?T@`s-nmY8uBS7TX%dInhg%uFfnpjo1=i*p#m=F8&k<a>n+bL)]c%ht5*)`.gVc**eFURF^AmY3uaP"f$4j;q#hl)77taS*,8G.:LEKbisi2egM$g1HJL%'Md5J;D06#XbK6aYSQDWXhUNQqTob2Y$qbgV6(KVm82G/7ggF8A/jAA<?*1$Y1#[X9KBO<c2adh*YZokn)KA;j=8B%<DH33.J2Cl%i*CjVY7umE?TQS']?fi*O,Pe.\s-!H0bo<0+-//L]#o>M-XocK-#XWEKNH9.j,PhNo5R:#eGkrH,PURQ`rTZh5L1/f[J=f[oQR8,%e(j/`K:h*l5<iuK-1sQ\=[H#Yk@9fSJb+!-''cHf%a;dbIl]9AB>B\\ppNRTP1B>4B?j#R)D=/=$!(PR'@4!'0606B=j<(TP-V[!%p-,(RR[s:;AbGlXi+g]L?1SmIS.Nj"l<_V@(>cbS]_*nIFnab1JR3jrLIs>&!-aANOas6na81lgg1LUV.=4aVL.YoS=6347DbpP%%:%u3<dAAV4"AG!K>lqm!:Q7#jHQ?KhV^%2kOPR(D(LY6KC$]NrDChu3);.ZPV1,1C^]U6gCh*:8)U<lYRc6(h]^$P]gG6KOkr'T:%(F4DmcltEZk6!<u.`TnH0Siq%'jd-4Tc(a`g!sd(E']JXT!W[PP^7N?aL:!ko!aD5dX>tW&\jC)9Ep.4j!fa;pJ^'#;l0><4QXZ[%.IiW=C>k57VnCAD57p\ZEq6-g.9":dF?JY/Tm\8ZEfl,A'i17'h5B9^f5'V,nW`?^l\Tl/bkQ9Bja%O$Z\mc'kMn#CZh'#ub3ZLu%j!jS`s4cN^^XdKK+&A:KmH<LYf=Aq3K>R<Ej!jR>W0*8sjbfjteO.7'=$DC!d9&P`@<P/V"gJ+(_"9-PEN\pDK-d3e%0k%V2e66O%/nOS`D<-.l.::`VX9p-Cn4i<X@HZ.rlVBl@`a(m]MqUsaTr-koV8unt+%IhO./BmFU'%mpINiAo%c/_EaH;lc&[k`7nV!EgMq%uJ%XU&55_Cq*BN>WU'N<O;A.&1f#V1"Ta<lcjsU54_9dcl"4A-=Mag!!;j!Ji(X(HL.o,WXm11g4IG(USR3Y%toRkdF).#-DspA$MDL%b/R(D/T,3j!;gjBE]BHtEV!S\8sMAF&^\<n?7:F-@QpUZT50'<%)`A.r0'j?<g@PGFTR`)R3++'-(Y?M[ipuo.O-0;gq.UkdLst5%\.0L<+R_bmGsagDGV"NAReLj2[/UUBrFukL,._ls_Rc,(Z4m0W7MuMlD9HogfA.[0Z\Alu*,3r5dltGO1HB^>j]t!DZ.g3HZVir\%3LCB%H[5VliL$@#['F?YVo-X_Nk'JV`JJg?Lka$@9UY"JW/S5*S8m5BX#6`Y@S@bPC`kYB<]1;[c_YQ&FWl=%XbB?>[CCl>Vf''A%K%tU;0*=jdhC_nMc\89L`RUIF1Vr)#N/nAiEWQ#a!0QljY=Kl.G-(C[/O.-fcO'A'X$&7><r5O(_%WpD*gFE%b:`Ogk?2u]$.#sE%T$ns`7'sEY24btc4kK6kc<Wp#)(+0#^eZZKWbH\9W#9^Kl#>-b*3M0goEE4!5hMEY?bY=I$+k:f`eI8-bG`6C01bndE6tQ_+uguF%N1UUjRQJ#uDVn%oTA\L:s$"c>IEp[C%'_cF&Pj'uX7^DN4#X,0^Qj$0[=7)0H,lXkQ$;SHZ3p'QV09pMo8\)G/U.;7!2&EXN.LpA%?GK"T-[5Y:k?jMkOPbGW(\!BtXh90#T[332T'KMW5Mu_C=Op#=RjF3]D2E]eOm*bZIZ2?)bhbR8a>?*M#t1Y'FOH3^RD.6oIgI;t%Sh$)IPl;STaRiAoIPR&M#8q>bdfln9+5cYVC/N)K+[>*_H(+[+>l*QWacH&P9oKmA8q("t#_+#gj77`%]mE7jI!IP2IZ5mmh",=B%.2qsO7Xg*3I?F%e2"!f8n-k:<mi5-P\8r/X#`\^3P5Q\@h!9%\)&i7geG4>-pN)`>:XHTf&_9l;mcT?]e8ogOqgpKsB4G<<4&<o2%=M+d/Ljd)Yo^f=@(=O/c\-pj>(RP!<rV5"]7JusTljF<sF0RBclhT0LPjnZS=;2iVb6V::i9m!=>3A!ST8B40d=%"I<Q3`.rIi7"%Q8L4g!g@Neq5D*l;T3:C!`s6X1GOi04)2i%[c9"X19`5VSd?9*NRj9o(&>]/""Ln>(89#k[ImYEQVtR,h?>H?d\h`!\On]$TO<h#%gV=[?p9aKS&e-\Y1nBO!QSoIF5%0[9)\QU;R7uI;`7"(uK#cu-1..0P=(/#%l'^!#3S0e.&!N;W7W:h)BuHN=CPuc#(o<4Tk"uj[%-Zk/h0=@;Fh2FbX1?(2o1C'ti$db9Gl@Fne]S&u#GB?Lhf7W\M,3acVG%n]gO(_=`NL"dp,4cRR>*.)JeV=G(Y&$Aeh("m=MT8WG%JO-Y5"hfCKm^K**S##<#\0nt8OFAhTlTkWtnrb%?+jcuL+j$7lDS9%+/E3J)f,U&.#@g0@\PT,T7UN3(\UGU`O\-&CBB(#=-9i:7%p_DoB@)f!daao@'%r-=!YP#V*[7T)ULme`2qc(hkVdWcHY,V-V.P@-Gb@S,WiT.@][u&pYT5G>%;_HZ5nLj,MOhh5PI,>&;$-]c6%T7uYtUn8m@NdUnpEQSdA1tcTb:)eHM:)g]#FNLkKm^"7=U\bq+n(=o,Y5f@Hfb"s'G^2ME#K\Gd40ratgFdDS]M*4R7(rh_X00f[%pl*7$Z=)#):Kt*qq.W'EKH+YQm\a5X7sVI[Kl&od]AMO!YOZ?l?!hQX>h8L.b(D.IT5fn:Srins].=HSo6ueM`86=1m/iu4(#nt^%]]<4d&-NTjZ,@Ql?:,!;T+9bC#<(GF*!Wp).jkbD'!e#<Sgb`rQC2o*c\?!`oAlmTbfj5,11+d9*t$3h%^g^K/G$E\o80]qkLu>"%KOr_2OLhR:)sLCr5,M2kr5NFU?Q?([/oP*8\nkIK7K`BW3oRUZM+'-_0=bTW#gfm!ojB9C3S/@><3b5FDAE&sl.D>?A<sppPA0G3%$sD,(%]N[BceGo50FduCJkOHeBGhKc$V_jC?O3@@;<t'_IV=<`UK3.01IRg25+0iYUMI[Q6#!/3N7^G'&s-][T?FqUIiV15]rt?#%72LkSJ)dNOG'J1G((&)6#[SI?oO(OD#^H+_3e^%%_[KG_1p<52c7?2c]fp[N\H*\22iiGU^m(T`m-0t1LW;D8&?R^,=Q`F2G0"]3%Aon<2/jP%"P#=T/>[$(M(-oCOMBJJ091We!OM%"u*Fb?`<ffd>V5n,kF3.e`NGF%-jQubSP%::_f\+4+`=RnWQ^q&(hRT\C#4jO"%#I[kC)`f(IL[AM?CM;S:8A%d\5"8tgF$XfOTF'p*&q="IFD0:DGk#;NPgf/7g5t?/[clY`"eM[[_S+hRpYd(<dsdo_FZQqr/u1V2%SrpRuje58jkjCG.0\]bQ66M]d\FareBsS(4FDTcR$6'oYCC5X_dJ#NSWE"@cR3i'E?+.oC,t0C=Xg]S`(W83ie,#<IY74Wi-n5UK%1C?WCoftjj"3#sl[@Tp,Ruf7k?8S"S/U-*6M5B5+?.S1r#n;HW)[X>f6.Q]Z:`G\gBL6kiP_JPI,4aN2G`T9PkZG)#&P'#_R_!he%Y4?j/lHjg-Jki49Yqm;Z_"O%=liMJ92WVC)DsAROU[)=sW/%HiPPqId,<eq.c=)t]6a51r3k5rs3fWp[ceqcdr%N;RBt9SZL%1S[%5TG6UXeu_rCdeu"hfYDM'H<#iru4f('Ch/,i^)!.<LeN[YgeGPI@Lfp;bB'(jP\6"NJZ&E@n7.Z%*=='<(9[R`?9]XHHXBsf$"A`%$a/$/)@!ed3&`+]+rW3^A*;W3,omOLV2RC:\l$rlI+rP5&jZ2tpn53`B7X<PNM*&MjilWd+HLBP)=Q_'rHZKLnN<&q&!]m\m"?7M%'7.RIYnWjme*5t3<,Jn,n_>'Q3u/$G=L]Ck!q?h^,Hd">`$&R=lBS$k:!9UXh3o8sRJR'm5p]:n5*.bDJE!q0K?*RYURi>;gc[b`%h*30%n:2L-hO[$YM9b70=&Dr,\0u0UMi?F<r;drd%6<j2a9@>*Es`om9$5gNIQHQ%83TOR?@hiClgY1$b>j8h#l6"kGj.hcV1;%G%NAi+b^b`8,'m"I01ZAN'3S!'h?q/Ou:;bDN<MSAB%kf1390GiH)oi]h#\(ZO+SFd#Dq&QY2,L5>`7q%sK;ghe`:['G1PdL$l.RaD%!_;`^H:9kC[o@f\)'f-EEsg$dkS_>P%0eC7EuV@:5_hI`kbFP^&k^2P#oT-hB_GOGBB02Q4lCpL"LkckWX=o`D*^HhLp3(p4NZh)%QU=D+GOIf"H)OUjkl"Ko6_2^[P$TT8)Z`Q1q;[JbK"Q@GjY]E1:3:n<!ZCqST,\'KQJ@C\9&%X#k'9EOkXeWGMs3fS>5VA0fc2r_%MX6DrZSfnu/rhIL7ii?eS8B*.V:5@kh>qZ)`D3:%W0KHnl2Z1T4/CVc!s3Z\It>X<6f^KdOMtC%3qVV+GC6Sf+kFeaXVNO95OT:@%.>tBhp'ROO?Gbm$-7+d8.@j5=;"3iDoLg5INgc_eXk&Oi*?$m]*6ngnUi[*6U/uSdO=_o*;A9jV]O557At!UJ"A`aWK@4qf)7Q0k%M4Cup:+1ciJ@CWg.5hT&':R&D3*Tk3Vc;ld1i.;ZY<#dHF@C^:j];(DZ%?YH99\du!b!>#1o>>bkm3SZ@AY[?U]a327HuTK#R%;A%4Z]"2:XP5mR>b]<HJ#@+l^2;e.rj0,^6@b2n8W$kM$>@&gg*-XNud-`)7cl*(FM&WDEi:0Sg'Sgh:%$\B(n"Ceob"0-,7'^L'9X%%)Ub'PC(I*]\PB':<*A-rXktC"UoNQ0-b%H.a(i&grRD2*'VHYH-2$Do4&_\*"XXd%s$/"p2]3usfW:$n.p;sK>,=U`D45;S=WmY)%VV$H+nm&K6kX,Jqb@4P^Ja,acQn:j'&t1CH1E%J3N.`b8A>7b%=l%8uRLurK(608g\Q^"k/ld))q,V4ID'\]_B66?h7IK;i//NR\%:c!"bDO*V9$)+$I?c`XW/JGgRePD?OLqYc_;1/nMo%>sU7nAf#E&4^,KQgkYN9S82)1A2T3aI66n+IJFWrm`&74WWeFXq_Z=EKU#%c;`tCf@eXJjDmf^bl`/[1kUFW.Rs=6DP=Se_ZGJr&2*EFVk0+A5o6lGl'=U]_\`f=`+pA08W%U[KT*b_^h'tBdD"VCD+]2CVE)C+%VKOuRq21)Mi@"R^#a(4\d%Z`9DDc_)c>ISg1O?+#Lm9@`cja8_qu&eh$)PL&Gfak3X+D1!0J.Yq=e"Mf:_2]1:u/fP3h]D4dKi&=%XSgE?6?W#6W?('1)M(#YVql*MGsh>h_^V>\=A=`6M$8)uTC=$M&[M/0KPW\lH-?np$m1XpfZ]]4B=hn4fn^B4\E1UrJ:bEW-F05l%LhNt*1A'b]RZlOhO=qo3l`H_qG)A%F;-lg!KLKbA/,5JeT9^c;ZmAWBKFH0cMHk^q)]I_F6tOWS<`4%\\/(n('4XXl)8!$>TVEj1%[K+g9I0NY&i!4<&cc;l%b]<&dS#:3Dfc!7u,po+3D0Ob$n<oEqk?$^HLu+=ESN>[dQX>&mQ>S!l6c?)Lo=0>K9k,p6*6CLS?T(g6%7u&rfpYC?@Ad$h<JW0`*a=&J\>6Rqa8p<`CI&9FJr+;?G1p^HZ#uUFg0[Z^-&3rBnBlYSEN03h3@>T6\G3s$$s45aC2Wc]%?F\%l%4B[D+0MP=$E"!/9e58M88Lk\GX1-ktOVq3^p2Hj.Ha0>:l*(?$?3]<kN"m*'^rU&1<nE94VHVLN@k=03?jsT@nU_.!G:On`(+0ZW%<f$+[QG_\_,?J*CKpU%qVG"DSV9/R%(e?gs0j>GX$.B/8-DqHqcu`FK&3SQ_P!(2A(4pp15q3\`LgcgsFI0YdV",3m;VZsm$?mXr%'hS.0<^j=FhfWO;(NYH-c.rGsP2rs9h/`6d%8IoUS0bak=]PVU.m=DsfI.C7f#l4u0Dk"(DU#EL(bjJtditd*mK3X8<)/.P/3/Ea%m>m@_CO,YC5Cqdbr>FK>HDtVtlmP8\MF+ntpoMK/leA#:gJ5jW?3DNC1..QmIS^Op2ouK`*/g=uKtklkMVsIMM4og$5r]0d3@.L,%W`k@hWUYXlFGnBPj*_.!^+@YF6Djl-l'D2OTbeNaV2,6lN$s[S@15p!T$/q5h3/a>oq^lHVFOLANmnjY&lB7rP<c9^j)@%_s(;H;%R5l%8%.)4gRaUk+I"sV6mmnVME>Ke$]]\>rO?t<2D_nOMT"<n#UQoNL>coc%lQUdI*,Ri^m3ZcDNo%o!6:ft"(dbFm9BPA:?Ib!3%4-g=pbM_#X2blkP<RZ,^/MPJ6d(P1G:YETZ9M@3J8!4T%RpsAQnmZVo&Z(,pLmit'=!:hb&o;UO*!Y-m1_-7#-GA2?_p>C&bu7#^%FQUEF!1DbVM42B0CTjDSEpnCilY`3>TP:/7Y*PSI-*L!fk%[J'>VZrG_NL%1?VX(7?<)P4GEECYR<OWuF)sX?nQpU)#CpS.k<s'+%%\[c>I#$u<DW=KESXuAc'R"(fe0gM[95hX=.MUc>.sWD-IhW?$:7u.;1+T=0(5:hOdO7%:1T&IR$nT+QU_)>Jc=I$C/MNqJ:.1?%%H10nT3R(HD.&]-Va.VZW','BBmds3C*ug$g3^"?[O=!]\q:%BcrR`?>?NjDoNVJtq5P`92hgG=E5?tu%_q/7Drlks,J%Ou3S::"/%YJ,G\l"@cbXC&,;hu<EDG@,dgnu%!7r/Y4!gqNdIbFcKGVj?W:g:qheR%OBOo5FZrpODu'M_Dhjq6/]SiS0ZAo<N96r9h%pouh:-%^MT/Vcqf/gfrtG?2o#@hQVD,MI!>Qm_u?G0IIm$A030#+ps1H+IJH*.5PaYIqg\G=YJ.Morkk)[r9+*mqT2N^qt\!Uq+omqreL5T%I^An&5CNP0QS4t\p!q[OIfA`$Ir'U[q:BQ!r6r,^J+I6PqUbc(Od:^CJ+Af<s3:SSqS*'p!1^Y~>%AI9_PrivateDataEnd